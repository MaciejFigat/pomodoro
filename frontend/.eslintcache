[{"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\index.js":"1","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\App.js":"3","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\screens\\PomodoroDisplayScreen.js":"4","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\components\\Header.js":"5","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\screens\\LoginScreen.js":"6","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\store.js":"7","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\screens\\RegisterScreen.js":"8","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\components\\FormContainer.js":"9","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\actions\\userActions.js":"10","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\constants\\userConstants.js":"11","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\reducers\\userReducers.js":"12","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\serviceWorker.js":"13","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\screens\\CustomPomodoroScreen.js":"14","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\screens\\UserStatsScreen.js":"15","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\reducers\\pomodoroReducers.js":"16","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\screens\\CustomTrainingScreen.js":"17","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\reducers\\pomodoroDoneReducers.js":"18","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\screens\\CreateNewExerciseScreen.js":"19","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\components\\Message.js":"20","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\actions\\pomodoroDoneActions.js":"21","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\actions\\pomodoroActions.js":"22","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\constants\\pomodoroConstants.js":"23","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\constants\\pomodoroDoneConstants.js":"24"},{"size":668,"mtime":1610727139173,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"28"},{"size":1191,"mtime":1610229045980,"results":"29","hashOfConfig":"26"},{"size":6019,"mtime":1610726715611,"results":"30","hashOfConfig":"26"},{"size":2276,"mtime":1611052526733,"results":"31","hashOfConfig":"26"},{"size":2581,"mtime":1610727005090,"results":"32","hashOfConfig":"26"},{"size":2256,"mtime":1610720080336,"results":"33","hashOfConfig":"26"},{"size":2629,"mtime":1611227611075,"results":"34","hashOfConfig":"26"},{"size":365,"mtime":1610556907256,"results":"35","hashOfConfig":"26"},{"size":2289,"mtime":1610726597145,"results":"36","hashOfConfig":"26"},{"size":386,"mtime":1607616971192,"results":"37","hashOfConfig":"26"},{"size":982,"mtime":1607556109743,"results":"38","hashOfConfig":"26"},{"size":5210,"mtime":1610725499494,"results":"39","hashOfConfig":"26"},{"size":11261,"mtime":1611417389107,"results":"40","hashOfConfig":"26"},{"size":5680,"mtime":1611236851061,"results":"41","hashOfConfig":"26"},{"size":5641,"mtime":1610721099211,"results":"42","hashOfConfig":"26"},{"size":15928,"mtime":1611233724624,"results":"43","hashOfConfig":"26"},{"size":1867,"mtime":1610726557812,"results":"44","hashOfConfig":"26"},{"size":15438,"mtime":1611233702027,"results":"45","hashOfConfig":"26"},{"size":248,"mtime":1607592502784,"results":"46","hashOfConfig":"26"},{"size":2639,"mtime":1609949928248,"results":"47","hashOfConfig":"26"},{"size":5861,"mtime":1610726799908,"results":"48","hashOfConfig":"26"},{"size":2718,"mtime":1609949817176,"results":"49","hashOfConfig":"26"},{"size":790,"mtime":1610726551472,"results":"50","hashOfConfig":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"ih4sp",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1no90zt",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"53"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\index.js",[],["103","104"],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\reportWebVitals.js",[],["105","106"],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\App.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\screens\\PomodoroDisplayScreen.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\components\\Header.js",["107"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  NavDropdown,\r\n  ButtonGroup,\r\n} from 'react-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='light' variant='light' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          {userInfo ? (\r\n            <LinkContainer to='/training'>\r\n              <Nav.Link>\r\n                <i className='fas fa-dumbbell'></i> Training\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <LinkContainer to='/'>\r\n              <Navbar.Brand>Pomodoro Timer</Navbar.Brand>\r\n            </LinkContainer>\r\n          )}\r\n          {userInfo ? (\r\n            <LinkContainer to='/custom'>\r\n              <Nav.Link>\r\n                <i className='fas fa-clock'></i> Pomodoro\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          {userInfo ? (\r\n            <NavDropdown title={userInfo.name} id='username' alignRight='false'>\r\n              <LinkContainer to={'/stats'}>\r\n                <NavDropdown.Item>\r\n                  <i className='fas fa-database'></i> Stats\r\n                </NavDropdown.Item>\r\n              </LinkContainer>\r\n              <LinkContainer to='/create'>\r\n                <NavDropdown.Item>\r\n                  <i className='fas fa-cogs'></i> Settings\r\n                </NavDropdown.Item>\r\n              </LinkContainer>\r\n              <NavDropdown.Item onClick={logoutHandler}>\r\n                <i className='fas fa-sign-out-alt'></i> Logout\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          ) : (\r\n            <LinkContainer to='/login'>\r\n              <Nav.Link>\r\n                <i className='fas fa-user-ninja'></i> Log in\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\store.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\screens\\CustomPomodoroScreen.js",["108","109"],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\screens\\UserStatsScreen.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\reducers\\pomodoroReducers.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\screens\\CustomTrainingScreen.js",["110"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Badge, Card, Table } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  decreasePomodoro,\r\n  resetPomodoro,\r\n  decreaseRest,\r\n  resetRest,\r\n  setZeroRest,\r\n  getMyPomodoros,\r\n  updateMyPomodoro,\r\n  pomodoroSecondsSet,\r\n  restSecondsSet,\r\n  deletePomodoro,\r\n} from '../actions/pomodoroActions'\r\nimport { saveMyDonePomodoro } from '../actions/pomodoroDoneActions'\r\n\r\nconst CustomTrainingScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const counterPomodoro = useSelector((state) => state.counterPomodoro)\r\n  const { pomodoroSeconds } = counterPomodoro\r\n\r\n  const counterRest = useSelector((state) => state.counterRest)\r\n  const { restSeconds } = counterRest\r\n\r\n  const savedPomodoros = useSelector((state) => state.getPomodoroInfo)\r\n  const { pomodoros } = savedPomodoros\r\n\r\n  const updatedPomodoro = useSelector((state) => state.pomodoroUpdate)\r\n\r\n  const createdPomodoro = useSelector((state) => state.pomodoroCreate)\r\n\r\n  const [trainingSessionVisible, setTrainingSessionVisible] = useState(false)\r\n  const [isActive, setIsActive] = useState(false)\r\n  const [deleteDone, setDeleteDone] = useState(false)\r\n  const [createDone, setCreateDone] = useState(false)\r\n  const [excerciseNumber, setExcerciseNumber] = useState(1)\r\n  const [trainingSessionDone, setTrainingSessionDone] = useState(false)\r\n  const [optionsToggle, setOptionsToggle] = useState(false)\r\n  const [descriptionToggle, setDescriptionToggle] = useState(false)\r\n\r\n  const toggle = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n\r\n  const reset = () => {\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      userInfo &&\r\n      savedPomodoros.pomodoros.length !== 0\r\n    ) {\r\n      dispatch(\r\n        restSecondsSet(savedPomodoros.pomodoros[excerciseNumber].restSeconds)\r\n      )\r\n      dispatch(\r\n        pomodoroSecondsSet(\r\n          savedPomodoros.pomodoros[excerciseNumber].pomodoroSeconds\r\n        )\r\n      )\r\n    } else {\r\n      dispatch(resetPomodoro())\r\n      dispatch(resetRest())\r\n    }\r\n    setTrainingSessionDone(false)\r\n  }\r\n\r\n  const restZero = () => {\r\n    dispatch(setZeroRest())\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deletePomodoro(id))\r\n      setDeleteDone(true)\r\n    }\r\n  }\r\n\r\n  const nextExerciseHandler = () => {\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length > excerciseNumber + 1\r\n    ) {\r\n      setExcerciseNumber(excerciseNumber + 1)\r\n      dispatch(\r\n        restSecondsSet(savedPomodoros.pomodoros[excerciseNumber].restSeconds)\r\n      )\r\n      dispatch(\r\n        pomodoroSecondsSet(\r\n          savedPomodoros.pomodoros[excerciseNumber].pomodoroSeconds\r\n        )\r\n      )\r\n    }\r\n  }\r\n  const previousExerciseHandler = () => {\r\n    if (savedPomodoros.pomodoros && excerciseNumber > 1) {\r\n      setExcerciseNumber(excerciseNumber - 1)\r\n      dispatch(\r\n        restSecondsSet(savedPomodoros.pomodoros[excerciseNumber].restSeconds)\r\n      )\r\n      dispatch(\r\n        pomodoroSecondsSet(\r\n          savedPomodoros.pomodoros[excerciseNumber].pomodoroSeconds\r\n        )\r\n      )\r\n    }\r\n  }\r\n  const doItAgainHandler = () => {\r\n    setTrainingSessionDone(false)\r\n    setExcerciseNumber(1)\r\n    dispatch(restSecondsSet(savedPomodoros.pomodoros[1].restSeconds))\r\n    dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[1].pomodoroSeconds))\r\n    setIsActive(false)\r\n  }\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    if (deleteDone === true) {\r\n      dispatch(getMyPomodoros())\r\n      setDeleteDone(false)\r\n    }\r\n    if (createDone === true) {\r\n      dispatch(getMyPomodoros())\r\n      setCreateDone(false)\r\n    }\r\n\r\n    if (\r\n      userInfo &&\r\n      createdPomodoro.pomodoro &&\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n    if (!savedPomodoros.pomodoros && isActive === false) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0 &&\r\n      updatedPomodoro.pomodoros &&\r\n      userInfo\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      isActive &&\r\n      restSeconds === 0 &&\r\n      pomodoroSeconds === 0\r\n    ) {\r\n      dispatch(\r\n        saveMyDonePomodoro({\r\n          name: savedPomodoros.pomodoros[excerciseNumber].name,\r\n          secondsDone:\r\n            savedPomodoros.pomodoros[excerciseNumber].pomodoroSeconds,\r\n        })\r\n      )\r\n      if (savedPomodoros.pomodoros.length > excerciseNumber + 1) {\r\n        setExcerciseNumber(excerciseNumber + 1)\r\n        if (savedPomodoros.pomodoros.length !== excerciseNumber + 1) {\r\n          dispatch(\r\n            restSecondsSet(\r\n              savedPomodoros.pomodoros[excerciseNumber].restSeconds\r\n            )\r\n          )\r\n          dispatch(\r\n            pomodoroSecondsSet(\r\n              savedPomodoros.pomodoros[excerciseNumber].pomodoroSeconds\r\n            )\r\n          )\r\n        }\r\n      } else {\r\n        setTrainingSessionDone(true)\r\n      }\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      if (isActive && pomodoroSeconds > 0) {\r\n        dispatch(decreasePomodoro())\r\n      } else if (isActive && restSeconds > 0 && pomodoroSeconds === 0) {\r\n        dispatch(decreaseRest())\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timer)\r\n  }, [\r\n    isActive,\r\n    restSeconds,\r\n    dispatch,\r\n    pomodoroSeconds,\r\n    savedPomodoros.pomodoros,\r\n    updatedPomodoro,\r\n    createdPomodoro,\r\n    userInfo,\r\n    history,\r\n    deleteDone,\r\n    createDone,\r\n    excerciseNumber,\r\n  ])\r\n\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <Card className='p-3'>\r\n          {trainingSessionDone === false && (\r\n            <Row className='justify-content-center'>\r\n              {' '}\r\n              {isActive && pomodoroSeconds > 0 ? <h1>Work</h1> : <h1>Rest</h1>}\r\n            </Row>\r\n          )}\r\n          {trainingSessionDone === true && (\r\n            <>\r\n              {' '}\r\n              <Row className='justify-content-center'>\r\n                {' '}\r\n                <Badge className='p-3' variant='success'>\r\n                  <h3> Well done {userInfo.name}! </h3>\r\n                </Badge>\r\n              </Row>\r\n              <Row className='justify-content-center'>\r\n                <Button onClick={doItAgainHandler}>Do it Again</Button>\r\n              </Row>\r\n            </>\r\n          )}\r\n          <Row className='justify-content-center'>\r\n            {' '}\r\n            {trainingSessionDone === false &&\r\n              savedPomodoros.pomodoros &&\r\n              savedPomodoros.pomodoros.length !== 0 && (\r\n                <p>\r\n                  <h3\r\n                    onClick={() => {\r\n                      setDescriptionToggle(!descriptionToggle)\r\n                    }}\r\n                  >\r\n                    {savedPomodoros.pomodoros.length > 1 ? (\r\n                      <>{savedPomodoros.pomodoros[excerciseNumber].name}</>\r\n                    ) : (\r\n                      'Exercise'\r\n                    )}{' '}\r\n                    {descriptionToggle === false && (\r\n                      <Button\r\n                        variant='light'\r\n                        flush\r\n                        onClick={() => {\r\n                          setDescriptionToggle(true)\r\n                        }}\r\n                      >\r\n                        <i className='far fa-plus-square'></i>\r\n                      </Button>\r\n                    )}\r\n                    {descriptionToggle === true && (\r\n                      <>\r\n                        <Button\r\n                          variant='light'\r\n                          flush\r\n                          onClick={() => {\r\n                            setDescriptionToggle(false)\r\n                          }}\r\n                        >\r\n                          <i className='far fa-minus-square'></i>\r\n                        </Button>\r\n                      </>\r\n                    )}\r\n                  </h3>\r\n\r\n                  {descriptionToggle === true &&\r\n                    savedPomodoros.pomodoros &&\r\n                    savedPomodoros.pomodoros.length > 1 && (\r\n                      <h4>\r\n                        {savedPomodoros.pomodoros[excerciseNumber].description}\r\n                      </h4>\r\n                    )}\r\n                </p>\r\n              )}\r\n          </Row>\r\n\r\n          <Row className='justify-content-center'>\r\n            {pomodoroSeconds === 0 ? (\r\n              <Badge variant='success'>\r\n                <h2 font-weight-bolder>\r\n                  {' '}\r\n                  {Math.trunc(restSeconds / 60)} : {restSeconds % 60}\r\n                </h2>\r\n              </Badge>\r\n            ) : (\r\n              <Badge variant='danger' className='justify-content-center'>\r\n                <h2 font-weight-bolder>\r\n                  {Math.trunc(pomodoroSeconds / 60)} : {pomodoroSeconds % 60}\r\n                </h2>\r\n              </Badge>\r\n            )}\r\n          </Row>\r\n          {trainingSessionDone === false && (\r\n            <Row className='justify-content-center'>\r\n              {trainingSessionDone === false && isActive ? (\r\n                <Button variant='info' onClick={toggle} size='lg'>\r\n                  Pause\r\n                </Button>\r\n              ) : (\r\n                <Button variant='success' onClick={toggle} size='lg'>\r\n                  Start\r\n                </Button>\r\n              )}\r\n              {trainingSessionDone === false &&\r\n                isActive &&\r\n                pomodoroSeconds === 0 && (\r\n                  <Button onClick={restZero}>Skip rest</Button>\r\n                )}\r\n            </Row>\r\n          )}\r\n        </Card>\r\n\r\n        <Card className='p-3'>\r\n          <Row className='justify-content-center'>\r\n            <Button variant='danger' flush onClick={reset}>\r\n              Reset this exercise\r\n            </Button>\r\n          </Row>\r\n          {trainingSessionDone === false && optionsToggle === false && (\r\n            <Row className='justify-content-center my-3'>\r\n              <Button variant='warning' flush onClick={previousExerciseHandler}>\r\n                <i className='fas fa-arrow-left'></i> Previous\r\n              </Button>\r\n              <Button variant='info' flush onClick={nextExerciseHandler}>\r\n                Next <i className='fas fa-arrow-right'></i>\r\n              </Button>\r\n            </Row>\r\n          )}\r\n\r\n          {optionsToggle === false && (\r\n            <Row className='justify-content-center '>\r\n              <Button\r\n                variant='dark'\r\n                flush\r\n                onClick={() => {\r\n                  setOptionsToggle(true)\r\n                }}\r\n              >\r\n                <i className='fas fa-cogs'></i> Options\r\n              </Button>\r\n            </Row>\r\n          )}\r\n          {optionsToggle === true && (\r\n            <>\r\n              <Row className='justify-content-center'>\r\n                {' '}\r\n                <Link to='/create' className='btn btn-info my-3'>\r\n                  Create new or Update\r\n                </Link>\r\n              </Row>\r\n              <Row className='justify-content-center'>\r\n                {' '}\r\n                <Button\r\n                  variant='dark'\r\n                  flush\r\n                  onClick={() => {\r\n                    setOptionsToggle(false)\r\n                  }}\r\n                >\r\n                  <i className='fas fa-times'></i> Close options\r\n                </Button>\r\n              </Row>\r\n            </>\r\n          )}\r\n        </Card>\r\n      </FormContainer>\r\n      {trainingSessionVisible === false ? (\r\n        <Row className='justify-content-center'>\r\n          <Button\r\n            variant='info'\r\n            flush\r\n            onClick={() => setTrainingSessionVisible(true)}\r\n          >\r\n            Show training session\r\n          </Button>\r\n        </Row>\r\n      ) : (\r\n        <Row className='justify-content-center'>\r\n          <Button\r\n            variant='warning'\r\n            flush\r\n            onClick={() => setTrainingSessionVisible(false)}\r\n          >\r\n            Hide training session\r\n          </Button>\r\n        </Row>\r\n      )}\r\n\r\n      {savedPomodoros &&\r\n        savedPomodoros.pomodoros &&\r\n        savedPomodoros.length !== 0 &&\r\n        trainingSessionVisible === true && (\r\n          <Table stripped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>Name </th>\r\n                <th>\r\n                  <i className='fas fa-dumbbell'></i>{' '}\r\n                  <i className='far fa-clock'></i>\r\n                </th>\r\n                <th>\r\n                  <i className='fas fa-bed'></i>{' '}\r\n                  <i className='far fa-clock'></i>{' '}\r\n                </th>\r\n                <th>Description </th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pomodoros\r\n\r\n                .filter(\r\n                  (savedPomodoro) => pomodoros.indexOf(savedPomodoro) !== 0\r\n                )\r\n                .map((savedPomodoro) => (\r\n                  <tr key={savedPomodoro._id}>\r\n                    <td>{savedPomodoro.name}</td>\r\n                    {savedPomodoro.pomodoroSeconds % 60 === 0 &&\r\n                      savedPomodoro.pomodoroSeconds >= 60 && (\r\n                        <td>\r\n                          {Math.trunc(savedPomodoro.pomodoroSeconds / 60)} min{' '}\r\n                        </td>\r\n                      )}\r\n                    {savedPomodoro.pomodoroSeconds % 60 !== 0 &&\r\n                      savedPomodoro.pomodoroSeconds > 60 && (\r\n                        <td>\r\n                          {Math.trunc(savedPomodoro.pomodoroSeconds / 60)} min{' '}\r\n                          {savedPomodoro.pomodoroSeconds % 60} sec\r\n                        </td>\r\n                      )}\r\n                    {savedPomodoro.pomodoroSeconds % 60 !== 0 &&\r\n                      savedPomodoro.pomodoroSeconds < 60 && (\r\n                        <td>{savedPomodoro.pomodoroSeconds % 60} sec</td>\r\n                      )}\r\n\r\n                    {savedPomodoro.restSeconds % 60 === 0 &&\r\n                      savedPomodoro.restSeconds >= 60 && (\r\n                        <td>\r\n                          {Math.trunc(savedPomodoro.restSeconds / 60)} minutes{' '}\r\n                        </td>\r\n                      )}\r\n                    {savedPomodoro.restSeconds % 60 !== 0 &&\r\n                      savedPomodoro.restSeconds > 60 && (\r\n                        <td>\r\n                          {Math.trunc(savedPomodoro.restSeconds / 60)} min{' '}\r\n                          {savedPomodoro.restSeconds % 60} sec\r\n                        </td>\r\n                      )}\r\n                    {savedPomodoro.restSeconds % 60 !== 0 &&\r\n                      savedPomodoro.restSeconds < 60 && (\r\n                        <td>{savedPomodoro.restSeconds % 60} sec</td>\r\n                      )}\r\n\r\n                    <td>{savedPomodoro.description}</td>\r\n                    <td>\r\n                      {' '}\r\n                      <Button\r\n                        variant='danger'\r\n                        onClick={() => deleteHandler(savedPomodoro._id)}\r\n                        size='sm'\r\n                      >\r\n                        <i className='fas fa-times'></i>\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomTrainingScreen\r\n","C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\reducers\\pomodoroDoneReducers.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\screens\\CreateNewExerciseScreen.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\components\\Message.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\actions\\pomodoroDoneActions.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\actions\\pomodoroActions.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\constants\\pomodoroConstants.js",[],"C:\\Users\\48500\\Desktop\\MERN\\pomodoro\\frontend\\src\\constants\\pomodoroDoneConstants.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":9,"column":3,"nodeType":"119","messageId":"120","endLine":9,"endColumn":14},{"ruleId":"117","severity":1,"message":"121","line":46,"column":10,"nodeType":"119","messageId":"120","endLine":46,"endColumn":22},{"ruleId":"122","severity":1,"message":"123","line":205,"column":6,"nodeType":"124","endLine":215,"endColumn":4,"suggestions":"125"},{"ruleId":"117","severity":1,"message":"126","line":13,"column":3,"nodeType":"119","messageId":"120","endLine":13,"endColumn":19},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],["127"],["128"],"no-unused-vars","'ButtonGroup' is defined but never used.","Identifier","unusedVar","'pomodoroDone' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pomodorosDone'. Either include it or remove the dependency array.","ArrayExpression",["129"],"'updateMyPomodoro' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [isActive, restSeconds, dispatch, pomodoroSeconds, savedPomodoros.pomodoros, updatedPomodoro, createdPomodoro, userInfo, history, pomodorosDone]",{"range":"132","text":"133"},[5662,5842],"[isActive, restSeconds, dispatch, pomodoroSeconds, savedPomodoros.pomodoros, updatedPomodoro, createdPomodoro, userInfo, history, pomodorosDone]"]