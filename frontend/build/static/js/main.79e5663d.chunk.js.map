{"version":3,"sources":["constants/userConstants.js","constants/pomodoroConstants.js","constants/pomodoroDoneConstants.js","store.js","reducers/userReducers.js","reducers/pomodoroReducers.js","reducers/pomodoroDoneReducers.js","components/Header.js","actions/userActions.js","components/FormContainer.js","screens/PomodoroDisplayScreen.js","actions/pomodoroActions.js","actions/pomodoroDoneActions.js","screens/CustomPomodoroScreen.js","screens/LoginScreen.js","screens/UserStatsScreen.js","components/Message.js","screens/RegisterScreen.js","screens/CustomTrainingScreen.js","screens/CreateNewExerciseScreen.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","POMODORO_SECONDS_DECREMENT","POMODORO_SECONDS_RESET","REST_SECONDS_DECREMENT","REST_SECONDS_RESET","SET_REST_ZERO","REST_SECONDS_SET","POMODORO_SECONDS_SET","POMODORO_MINUTES_INCREMENT","POMODORO_MINUTES_DECREMENT","REST_MINUTES_INCREMENT","REST_MINUTES_DECREMENT","SAVED_POMODORO_MINUTES_INCREMENT","SAVED_POMODORO_MINUTES_DECREMENT","SAVED_REST_MINUTES_INCREMENT","SAVED_REST_MINUTES_DECREMENT","POMODORO_GET_REQUEST","POMODORO_GET_SUCCESS","POMODORO_GET_FAIL","POMODORO_GET_RESET","POMODORO_UPDATE_REQUEST","POMODORO_UPDATE_SUCCESS","POMODORO_UPDATE_FAIL","POMODORO_UPDATE_RESET","POMODORO_CREATE_REQUEST","POMODORO_CREATE_SUCCESS","POMODORO_CREATE_FAIL","POMODORO_CREATE_RESET","POMODORO_DELETE_REQUEST","POMODORO_DELETE_SUCCESS","POMODORO_DELETE_FAIL","POMODORO_DONE_CREATE_REQUEST","POMODORO_DONE_CREATE_SUCCESS","POMODORO_DONE_CREATE_FAIL","POMODORO_DONE_CREATE_RESET","POMODORO_DONE_GET_REQUEST","POMODORO_DONE_GET_SUCCESS","POMODORO_DONE_GET_FAIL","POMODORO_DONE_GET_RESET","POMODORO_DONE_DELETE_REQUEST","POMODORO_DONE_DELETE_SUCCESS","POMODORO_DONE_DELETE_FAIL","reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userRegister","getPomodoroInfo","pomodoros","pomodoroCreate","success","pomodoro","counterPomodoro","pomodoroSeconds","pomodoroSecondsFromStorage","counterRest","restSeconds","restSecondsFromStorage","savedPomodoro","pomodoroInfo","savedRestSeconds","savedPomodoroSeconds","pomodoroUpdate","pomodoroDoneCreate","pomodoroDone","getPomodoroDone","pomodorosDone","pomodoroDoneDelete","pomodoroDelete","userInfoFromStorage","localStorage","getItem","JSON","parse","pomodoroInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","dispatch","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Nav","Link","className","Brand","NavDropdown","title","name","id","alignRight","Item","onClick","removeItem","FormContainer","children","Row","Col","xs","md","PomodoroDisplayScreen","useState","pomodoroDuration","setPomodoroDuration","setPomodoroDone","restDuration","setRestDuration","seconds","setSeconds","setRestSeconds","isActive","setIsActive","optionsToggle","setOptionsToggle","toggle","useEffect","timer","setInterval","clearInterval","Card","Badge","font-weight-bolder","Math","trunc","Button","size","flush","getMyPomodoros","getState","a","config","headers","Authorization","token","axios","get","data","response","message","createMyPomodoro","post","updateMyPomodoro","put","_id","decreasePomodoro","resetPomodoro","pomodoroSecondsSet","restSecondsSet","decreaseRest","resetRest","setZeroRest","deletePomodoro","delete","getMyDonePomodoros","saveMyDonePomodoro","CustomPomodoroScreen","history","savedPomodoros","updatedPomodoro","createdPomodoro","updatedVisible","setUpdatedVisible","filteredPomodoro","setFilteredPomodoro","customTimerOn","setCustomTimerOn","timeElapsed","Date","now","today","pomodoroDoneToday","filtered","filter","pomodoroType","createdAt","substring","toISOString","length","filterHandler","push","secondsDone","description","console","log","LoginScreen","location","email","setEmail","password","setPassword","redirect","search","split","Form","onSubmit","e","preventDefault","setItem","stringify","login","Group","controlId","Label","Control","placeholder","value","onChange","target","UserStatsScreen","deleteDone","setDeleteDone","trainingStatsToggle","setTrainingStatsToggle","pomodoroStatsToggle","setPomodoroStatsToggle","deleteHandler","window","confirm","deletePomodoroDone","Table","stripped","bordered","hover","responsive","map","Message","Alert","defaultProps","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","CustomTrainingScreen","trainingSessionVisible","setTrainingSessionVisible","createDone","setCreateDone","excerciseNumber","setExcerciseNumber","trainingSessionDone","setTrainingSessionDone","descriptionToggle","setDescriptionToggle","indexOf","CreateNewExerciseScreen","updateDone","setUpdateDone","setDescription","exerciseDuration","setExerciseDuration","exerciseNumber","setExerciseNumber","createPomodoroHandler","App","path","component","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.79e5663d.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n","export const POMODORO_SECONDS_DECREMENT = 'POMODORO_SECONDS_DECREMENT'\r\nexport const POMODORO_SECONDS_RESET = 'POMODORO_SECONDS_RESET'\r\n\r\nexport const REST_SECONDS_DECREMENT = 'REST_SECONDS_DECREMENT'\r\nexport const REST_SECONDS_RESET = 'REST_SECONDS_RESET'\r\nexport const SET_REST_ZERO = 'SET_REST_ZERO'\r\n\r\nexport const REST_SECONDS_SET = 'REST_SECONDS_SET'\r\nexport const POMODORO_SECONDS_SET = 'POMODORO_SECONDS_SET'\r\n\r\nexport const POMODORO_MINUTES_INCREMENT = 'POMODORO_MINUTES_INCREMENT'\r\nexport const POMODORO_MINUTES_DECREMENT = 'POMODORO_MINUTES_DECREMENT'\r\n\r\nexport const REST_MINUTES_INCREMENT = 'REST_MINUTES_INCREMENT'\r\nexport const REST_MINUTES_DECREMENT = 'REST_MINUTES_DECREMENT'\r\n\r\nexport const SAVED_POMODORO_MINUTES_INCREMENT =\r\n  'SAVED_POMODORO_MINUTES_INCREMENT'\r\nexport const SAVED_POMODORO_MINUTES_DECREMENT =\r\n  'SAVED_POMODORO_MINUTES_DECREMENT'\r\n\r\nexport const SAVED_REST_MINUTES_INCREMENT = 'SAVED_REST_MINUTES_INCREMENT'\r\nexport const SAVED_REST_MINUTES_DECREMENT = 'SAVED_REST_MINUTES_DECREMENT'\r\n\r\nexport const POMODORO_GET_REQUEST = 'POMODORO_GET_REQUEST'\r\nexport const POMODORO_GET_SUCCESS = 'POMODORO_GET_SUCCESS'\r\nexport const POMODORO_GET_FAIL = 'POMODORO_GET_FAIL'\r\nexport const POMODORO_GET_RESET = 'POMODORO_GET_RESET'\r\n\r\nexport const POMODORO_UPDATE_REQUEST = 'POMODORO_UPDATE_REQUEST'\r\nexport const POMODORO_UPDATE_SUCCESS = 'POMODORO_UPDATE_SUCCESS'\r\nexport const POMODORO_UPDATE_FAIL = 'POMODORO_UPDATE_FAIL'\r\nexport const POMODORO_UPDATE_RESET = 'POMODORO_UPDATE_RESET'\r\n\r\nexport const POMODORO_CREATE_REQUEST = 'POMODORO_CREATE_REQUEST'\r\nexport const POMODORO_CREATE_SUCCESS = 'POMODORO_CREATE_SUCCESS'\r\nexport const POMODORO_CREATE_FAIL = 'POMODORO_CREATE_FAIL'\r\nexport const POMODORO_CREATE_RESET = 'POMODORO_CREATE_RESET'\r\n\r\nexport const POMODORO_DURATION_CHANGE = 'POMODORO_DURATION_CHANGE'\r\nexport const POMODORO_DURATION_RESET = 'POMODORO_DURATION_RESET'\r\nexport const REST_DURATION_CHANGE = 'REST_DURATION_CHANGE'\r\nexport const REST_DURATION_RESET = 'REST_DURATION_RESET'\r\n\r\nexport const POMODORO_DELETE_REQUEST = 'POMODORO_DELETE_REQUEST'\r\nexport const POMODORO_DELETE_SUCCESS = 'POMODORO_DELETE_SUCCESS'\r\nexport const POMODORO_DELETE_FAIL = 'POMODORO_DELETE_FAIL'\r\n","export const POMODORO_DONE_CREATE_REQUEST = 'POMODORO_DONE_CREATE_REQUEST'\r\nexport const POMODORO_DONE_CREATE_SUCCESS = 'POMODORO_DONE_CREATE_SUCCESS'\r\nexport const POMODORO_DONE_CREATE_FAIL = 'POMODORO_DONE_CREATE_FAIL'\r\nexport const POMODORO_DONE_CREATE_RESET = 'POMODORO_DONE_CREATE_RESET'\r\n\r\nexport const POMODORO_DONE_GET_REQUEST = 'POMODORO_DONE_GET_REQUEST'\r\nexport const POMODORO_DONE_GET_SUCCESS = 'POMODORO_DONE_GET_SUCCESS'\r\nexport const POMODORO_DONE_GET_FAIL = 'POMODORO_DONE_GET_FAIL'\r\nexport const POMODORO_DONE_GET_RESET = 'POMODORO_DONE_GET_RESET'\r\n\r\nexport const POMODORO_DONE_DELETE_REQUEST = 'POMODORO_DONE_DELETE_REQUEST'\r\nexport const POMODORO_DONE_DELETE_SUCCESS = 'POMODORO_DONE_DELETE_SUCCESS'\r\nexport const POMODORO_DONE_DELETE_FAIL = 'POMODORO_DONE_DELETE_FAIL'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers'\r\nimport {\r\n  getPomodoroInfoReducer,\r\n  pomodoroCreateReducer,\r\n  counterPomodoroReducer,\r\n  counterRestReducer,\r\n  savedPomodoroReducer,\r\n  pomodoroUpdateReducer,\r\n  pomodoroDeleteReducer,\r\n} from './reducers/pomodoroReducers'\r\nimport {\r\n  pomodoroDoneCreateReducer,\r\n  getPomodoroDoneReducer,\r\n  pomodoroDoneDeleteReducer,\r\n} from './reducers/pomodoroDoneReducers'\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  getPomodoroInfo: getPomodoroInfoReducer,\r\n  pomodoroCreate: pomodoroCreateReducer,\r\n  counterPomodoro: counterPomodoroReducer,\r\n  counterRest: counterRestReducer,\r\n  savedPomodoro: savedPomodoroReducer,\r\n  pomodoroUpdate: pomodoroUpdateReducer,\r\n  pomodoroDoneCreate: pomodoroDoneCreateReducer,\r\n  getPomodoroDone: getPomodoroDoneReducer,\r\n  pomodoroDoneDelete: pomodoroDoneDeleteReducer,\r\n  pomodoroDelete: pomodoroDeleteReducer,\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nexport const pomodoroInfoFromStorage = localStorage.getItem('pomodoros')\r\n  ? JSON.parse(localStorage.getItem('pomodoros'))\r\n  : { savedPomodoroSeconds: 5, savedRestSeconds: 1 }\r\n\r\nexport const pomodoroSecondsFromStorage = localStorage.getItem(\r\n  'pomodoroSeconds'\r\n)\r\n  ? JSON.parse(localStorage.getItem('pomodoroSeconds'))\r\n  : pomodoroInfoFromStorage.savedPomodoroSeconds\r\n\r\nexport const restSecondsFromStorage = localStorage.getItem('restSeconds')\r\n  ? JSON.parse(localStorage.getItem('restSeconds'))\r\n  : pomodoroInfoFromStorage.savedRestSeconds\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n  getPomodoroInfo: pomodoroInfoFromStorage,\r\n  counterPomodoro: { pomodoroSeconds: pomodoroSecondsFromStorage },\r\n  counterRest: { restSeconds: restSecondsFromStorage },\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  POMODORO_GET_REQUEST,\r\n  POMODORO_GET_SUCCESS,\r\n  POMODORO_GET_FAIL,\r\n  POMODORO_GET_RESET,\r\n  POMODORO_CREATE_REQUEST,\r\n  POMODORO_CREATE_SUCCESS,\r\n  POMODORO_CREATE_FAIL,\r\n  POMODORO_CREATE_RESET,\r\n  POMODORO_UPDATE_REQUEST,\r\n  POMODORO_UPDATE_SUCCESS,\r\n  POMODORO_UPDATE_FAIL,\r\n  POMODORO_UPDATE_RESET,\r\n  POMODORO_SECONDS_DECREMENT,\r\n  POMODORO_SECONDS_RESET,\r\n  REST_SECONDS_DECREMENT,\r\n  REST_SECONDS_RESET,\r\n  SET_REST_ZERO,\r\n  POMODORO_MINUTES_INCREMENT,\r\n  POMODORO_MINUTES_DECREMENT,\r\n  REST_MINUTES_INCREMENT,\r\n  REST_MINUTES_DECREMENT,\r\n  SAVED_POMODORO_MINUTES_INCREMENT,\r\n  SAVED_POMODORO_MINUTES_DECREMENT,\r\n  SAVED_REST_MINUTES_INCREMENT,\r\n  SAVED_REST_MINUTES_DECREMENT,\r\n  REST_SECONDS_SET,\r\n  POMODORO_SECONDS_SET,\r\n  POMODORO_DELETE_REQUEST,\r\n  POMODORO_DELETE_SUCCESS,\r\n  POMODORO_DELETE_FAIL,\r\n} from '../constants/pomodoroConstants'\r\nimport { pomodoroSecondsFromStorage, restSecondsFromStorage } from '../store'\r\n\r\nexport const getPomodoroInfoReducer = (state = { pomodoros: [] }, action) => {\r\n  switch (action.type) {\r\n    case POMODORO_GET_REQUEST:\r\n      return { loading: true }\r\n    case POMODORO_GET_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        pomodoros: action.payload,\r\n      }\r\n    case POMODORO_GET_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case POMODORO_GET_RESET:\r\n      return { pomodoros: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const pomodoroCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POMODORO_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case POMODORO_CREATE_SUCCESS:\r\n      return { loading: false, success: true, pomodoro: action.payload }\r\n    case POMODORO_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case POMODORO_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const savedPomodoroReducer = (state = { pomodoroInfo: {} }, action) => {\r\n  if (\r\n    action.type === SAVED_REST_MINUTES_INCREMENT &&\r\n    state.savedRestSeconds <= 3600\r\n  ) {\r\n    return { ...state, savedRestSeconds: state.savedRestSeconds + 60 }\r\n  } else if (\r\n    action.type === SAVED_REST_MINUTES_DECREMENT &&\r\n    state.savedRestSeconds >= 60\r\n  ) {\r\n    return { ...state, savedRestSeconds: state.savedRestSeconds - 60 }\r\n  } else if (\r\n    action.type === SAVED_POMODORO_MINUTES_INCREMENT &&\r\n    state.savedPomodoroSeconds <= 3600\r\n  ) {\r\n    return { ...state, savedPomodoroSeconds: state.savedPomodoroSeconds + 60 }\r\n  } else if (\r\n    action.type === SAVED_POMODORO_MINUTES_DECREMENT &&\r\n    state.savedPomodoroSeconds >= 60\r\n  ) {\r\n    return { ...state, savedPomodoroSeconds: state.savedPomodoroSeconds - 60 }\r\n  }\r\n  return state\r\n}\r\n\r\nexport const counterRestReducer = (state = { restSeconds: {} }, action) => {\r\n  if (action.type === REST_SECONDS_SET) {\r\n    return { ...state, restSeconds: action.payload }\r\n  } else if (action.type === REST_SECONDS_DECREMENT && state.restSeconds > 0) {\r\n    return {\r\n      ...state,\r\n      restSeconds: state.restSeconds - 1,\r\n    }\r\n  } else if (action.type === REST_SECONDS_RESET) {\r\n    return (state = { restSeconds: restSecondsFromStorage })\r\n  } else if (\r\n    action.type === REST_MINUTES_INCREMENT &&\r\n    state.restSeconds <= 3600\r\n  ) {\r\n    return { ...state, restSeconds: state.restSeconds + 60 }\r\n  } else if (action.type === REST_MINUTES_DECREMENT && state.restSeconds > 60) {\r\n    return { ...state, restSeconds: state.restSeconds - 60 }\r\n  } else if (action.type === REST_MINUTES_DECREMENT && state.restSeconds < 60) {\r\n    return { ...state, restSeconds: 0 }\r\n  } else if (action.type === SET_REST_ZERO) {\r\n    return { ...state, restSeconds: 0 }\r\n  }\r\n  return state\r\n}\r\n\r\nexport const counterPomodoroReducer = (\r\n  state = { pomodoroSeconds: {} },\r\n  action\r\n) => {\r\n  if (action.type === POMODORO_SECONDS_SET) {\r\n    return { ...state, pomodoroSeconds: action.payload }\r\n  } else if (\r\n    action.type === POMODORO_SECONDS_DECREMENT &&\r\n    state.pomodoroSeconds > 0\r\n  ) {\r\n    return {\r\n      ...state,\r\n      pomodoroSeconds: state.pomodoroSeconds - 1,\r\n    }\r\n  } else if (action.type === POMODORO_SECONDS_RESET) {\r\n    return (state = { pomodoroSeconds: pomodoroSecondsFromStorage })\r\n  } else if (\r\n    action.type === POMODORO_MINUTES_INCREMENT &&\r\n    state.pomodoroSeconds <= 3600\r\n  ) {\r\n    return { ...state, pomodoroSeconds: state.pomodoroSeconds + 60 }\r\n  } else if (\r\n    action.type === POMODORO_MINUTES_DECREMENT &&\r\n    state.pomodoroSeconds > 60\r\n  ) {\r\n    return { ...state, pomodoroSeconds: state.pomodoroSeconds - 60 }\r\n  } else if (\r\n    action.type === POMODORO_MINUTES_DECREMENT &&\r\n    state.pomodoroSeconds < 60\r\n  ) {\r\n    return { ...state, pomodoroSeconds: 0 }\r\n  }\r\n\r\n  return state\r\n}\r\n\r\nexport const pomodoroUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POMODORO_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case POMODORO_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, pomodoros: action.payload }\r\n    case POMODORO_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case POMODORO_UPDATE_RESET:\r\n      return {}\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// to attempt deleting the pomodoro\r\nexport const pomodoroDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POMODORO_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case POMODORO_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case POMODORO_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  POMODORO_DONE_CREATE_REQUEST,\r\n  POMODORO_DONE_CREATE_SUCCESS,\r\n  POMODORO_DONE_CREATE_FAIL,\r\n  POMODORO_DONE_CREATE_RESET,\r\n  POMODORO_DONE_GET_REQUEST,\r\n  POMODORO_DONE_GET_SUCCESS,\r\n  POMODORO_DONE_GET_FAIL,\r\n  POMODORO_DONE_GET_RESET,\r\n  POMODORO_DONE_DELETE_REQUEST,\r\n  POMODORO_DONE_DELETE_SUCCESS,\r\n  POMODORO_DONE_DELETE_FAIL,\r\n} from '../constants/pomodoroDoneConstants'\r\n\r\n// to create a new pomodoroDone\r\n\r\nexport const pomodoroDoneCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POMODORO_DONE_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case POMODORO_DONE_CREATE_SUCCESS:\r\n      return { loading: false, success: true, pomodoroDone: action.payload }\r\n    case POMODORO_DONE_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case POMODORO_DONE_CREATE_RESET:\r\n      return {}\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// to get all a user did\r\nexport const getPomodoroDoneReducer = (\r\n  state = { pomodorosDone: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case POMODORO_DONE_GET_REQUEST:\r\n      return { loading: true }\r\n    case POMODORO_DONE_GET_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        pomodorosDone: action.payload,\r\n      }\r\n    case POMODORO_DONE_GET_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case POMODORO_DONE_GET_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// to attempt deleting the pomodoroDone\r\nexport const pomodoroDoneDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POMODORO_DONE_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case POMODORO_DONE_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case POMODORO_DONE_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='light' variant='light' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          {userInfo ? (\r\n            <LinkContainer to='/training'>\r\n              <Nav.Link>\r\n                <i className='fas fa-dumbbell'></i> Training\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <LinkContainer to='/'>\r\n              <Navbar.Brand>Pomodoro Timer</Navbar.Brand>\r\n            </LinkContainer>\r\n          )}\r\n          {userInfo ? (\r\n            <LinkContainer to='/custom'>\r\n              <Nav.Link>\r\n                <i className='fas fa-clock'></i> Pomodoro\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          {userInfo ? (\r\n            <NavDropdown title={userInfo.name} id='username' alignRight='false'>\r\n              <LinkContainer to={'/stats'}>\r\n                <NavDropdown.Item>\r\n                  <i className='fas fa-database'></i> Stats\r\n                </NavDropdown.Item>\r\n              </LinkContainer>\r\n              <LinkContainer to='/create'>\r\n                <NavDropdown.Item>\r\n                  <i className='fas fa-cogs'></i> Settings\r\n                </NavDropdown.Item>\r\n              </LinkContainer>\r\n              <NavDropdown.Item onClick={logoutHandler}>\r\n                <i className='fas fa-sign-out-alt'></i> Logout\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          ) : (\r\n            <LinkContainer to='/login'>\r\n              <Nav.Link>\r\n                <i className='fas fa-user-ninja'></i> Log in\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios'\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n} from '../constants/userConstants'\r\nimport {\r\n  POMODORO_GET_RESET,\r\n  POMODORO_UPDATE_RESET,\r\n} from '../constants/pomodoroConstants'\r\nimport {\r\n  POMODORO_DONE_GET_RESET,\r\n  POMODORO_DONE_CREATE_RESET,\r\n} from '../constants/pomodoroDoneConstants'\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: POMODORO_GET_RESET })\r\n  dispatch({ type: POMODORO_UPDATE_RESET })\r\n  dispatch({ type: POMODORO_DONE_GET_RESET })\r\n  dispatch({ type: POMODORO_DONE_CREATE_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container className='my-3'>\r\n      <Row className='justify-content-md-center '>\r\n        <Col xs={16} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, Badge, Card } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nconst PomodoroDisplayScreen = () => {\r\n  const [pomodoroDuration, setPomodoroDuration] = useState(25)\r\n  const [pomodoroDone, setPomodoroDone] = useState(0)\r\n  const [restDuration, setRestDuration] = useState(5)\r\n  const [seconds, setSeconds] = useState(25 * 60)\r\n  const [restSeconds, setRestSeconds] = useState(5 * 60)\r\n  const [isActive, setIsActive] = useState(false)\r\n  const [optionsToggle, setOptionsToggle] = useState(false)\r\n\r\n  const toggle = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n\r\n  const reset = () => {\r\n    setSeconds(pomodoroDuration * 60)\r\n    setRestSeconds(restDuration * 60)\r\n  }\r\n\r\n  const pomodoroDurationPlus = () => {\r\n    if (pomodoroDuration < 60) {\r\n      setPomodoroDuration((pomodoroDuration) => pomodoroDuration + 1)\r\n    }\r\n  }\r\n\r\n  const pomodoroDurationMinus = () => {\r\n    if (pomodoroDuration > 0) {\r\n      setPomodoroDuration((pomodoroDuration) => pomodoroDuration - 1)\r\n    }\r\n  }\r\n\r\n  const restDurationPlus = () => {\r\n    if (restDuration < 60) {\r\n      setRestDuration((restDuration) => restDuration + 1)\r\n    }\r\n  }\r\n\r\n  const restDurationMinus = () => {\r\n    if (restDuration > 0) {\r\n      setRestDuration((restDuration) => restDuration - 1)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (isActive && restSeconds === 0 && seconds === 0) {\r\n      setSeconds(pomodoroDuration * 60)\r\n      setRestSeconds(restDuration * 60)\r\n      setPomodoroDone((pomodoroDone) => pomodoroDone + 1)\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      if (isActive && seconds > 0) {\r\n        setSeconds((seconds) => seconds - 1)\r\n      } else if (isActive && restSeconds > 0 && seconds === 0) {\r\n        setRestSeconds((restSeconds) => restSeconds - 1)\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timer)\r\n  }, [isActive, seconds, restSeconds, pomodoroDuration, restDuration])\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Row className='justify-content-center'>\r\n        <Col>\r\n          <Card className='p-3'>\r\n            <Row className='justify-content-center'>\r\n              {' '}\r\n              {isActive && seconds > 0 ? <h1>Work</h1> : <h1>Rest</h1>}\r\n            </Row>\r\n            <Row className='justify-content-center'>\r\n              {seconds === 0 ? (\r\n                <Badge variant='success'>\r\n                  <h2 font-weight-bolder>\r\n                    {' '}\r\n                    {Math.trunc(restSeconds / 60)} : {restSeconds % 60}\r\n                  </h2>\r\n                </Badge>\r\n              ) : (\r\n                <Badge variant='danger' className='justify-content-md-center'>\r\n                  <h2 font-weight-bolder>\r\n                    {Math.trunc(seconds / 60)} : {seconds % 60}\r\n                  </h2>\r\n                </Badge>\r\n              )}\r\n            </Row>\r\n            <Row className='justify-content-center'>\r\n              {isActive ? (\r\n                <Button variant='info' onClick={toggle} size='lg'>\r\n                  Pause\r\n                </Button>\r\n              ) : (\r\n                <Button variant='success' onClick={toggle} size='lg'>\r\n                  Start\r\n                </Button>\r\n              )}\r\n              {isActive && seconds === 0 && (\r\n                <Button onClick={() => setRestSeconds(0)}>Skip rest</Button>\r\n              )}\r\n            </Row>\r\n          </Card>\r\n\r\n          {optionsToggle === false && (\r\n            <Row className='justify-content-center my-3'>\r\n              <Button\r\n                variant='dark'\r\n                flush\r\n                onClick={() => {\r\n                  setOptionsToggle(true)\r\n                }}\r\n              >\r\n                <i className='fas fa-cogs'></i> Options\r\n              </Button>\r\n            </Row>\r\n          )}\r\n          {optionsToggle === true && (\r\n            <Card className='p-3'>\r\n              <Row className='justify-content-center'>\r\n                <Button\r\n                  variant='dark'\r\n                  flush\r\n                  onClick={() => {\r\n                    setOptionsToggle(false)\r\n                  }}\r\n                >\r\n                  <i className='fas fa-cogs'></i> Hide\r\n                </Button>\r\n              </Row>\r\n\r\n              <Row className='justify-content-center my-3'>\r\n                <h5>\r\n                  <i className='fas fa-user-tie'></i>{' '}\r\n                  <i className='fas fa-hourglass-start'></i>:{' '}\r\n                  <Button size='sm' onClick={pomodoroDurationMinus}>\r\n                    <b>-</b>\r\n                  </Button>{' '}\r\n                  <b>{pomodoroDuration}</b>{' '}\r\n                  <Button size='sm' onClick={pomodoroDurationPlus}>\r\n                    <b>+</b>\r\n                  </Button>{' '}\r\n                  min{' '}\r\n                </h5>\r\n              </Row>\r\n              <Row className='justify-content-center '>\r\n                <h5>\r\n                  <i className='fas fa-bed'></i>{' '}\r\n                  <i className='fas fa-hourglass-end'></i>:{' '}\r\n                  <Button size='sm' onClick={restDurationMinus}>\r\n                    <b>-</b>\r\n                  </Button>{' '}\r\n                  <b>{restDuration}</b>{' '}\r\n                  <Button size='sm' onClick={restDurationPlus}>\r\n                    <b>+</b>\r\n                  </Button>{' '}\r\n                  min{' '}\r\n                </h5>\r\n              </Row>\r\n              <Row className='justify-content-center my-3'>\r\n                <h5>\r\n                  Pomodoros done: <b>{pomodoroDone}</b>{' '}\r\n                </h5>\r\n              </Row>\r\n              <Row className='justify-content-center '>\r\n                <Button variant='warning' flush onClick={reset}>\r\n                  Reset timer\r\n                </Button>\r\n              </Row>\r\n            </Card>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PomodoroDisplayScreen\r\n","import axios from 'axios'\r\nimport {\r\n  POMODORO_GET_REQUEST,\r\n  POMODORO_GET_SUCCESS,\r\n  POMODORO_GET_FAIL,\r\n  POMODORO_CREATE_REQUEST,\r\n  POMODORO_CREATE_SUCCESS,\r\n  POMODORO_CREATE_FAIL,\r\n  POMODORO_UPDATE_REQUEST,\r\n  POMODORO_UPDATE_SUCCESS,\r\n  POMODORO_UPDATE_FAIL,\r\n  POMODORO_SECONDS_DECREMENT,\r\n  POMODORO_SECONDS_RESET,\r\n  REST_SECONDS_DECREMENT,\r\n  REST_SECONDS_RESET,\r\n  POMODORO_MINUTES_INCREMENT,\r\n  POMODORO_MINUTES_DECREMENT,\r\n  REST_MINUTES_INCREMENT,\r\n  REST_MINUTES_DECREMENT,\r\n  SET_REST_ZERO,\r\n  SAVED_POMODORO_MINUTES_INCREMENT,\r\n  SAVED_POMODORO_MINUTES_DECREMENT,\r\n  SAVED_REST_MINUTES_INCREMENT,\r\n  SAVED_REST_MINUTES_DECREMENT,\r\n  REST_SECONDS_SET,\r\n  POMODORO_SECONDS_SET,\r\n  POMODORO_DELETE_REQUEST,\r\n  POMODORO_DELETE_SUCCESS,\r\n  POMODORO_DELETE_FAIL,\r\n} from '../constants/pomodoroConstants'\r\n\r\nexport const getMyPomodoros = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_GET_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/pomodoros/mypomodoros`, config)\r\n\r\n    dispatch({\r\n      type: POMODORO_GET_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_GET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createMyPomodoro = (pomodoro) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/pomodoros`, pomodoro, config)\r\n\r\n    dispatch({\r\n      type: POMODORO_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n// action to update the pomodoro the user created by id\r\nexport const updateMyPomodoro = (pomodoro) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/pomodoros/${pomodoro._id}`,\r\n      pomodoro,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: POMODORO_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const decreasePomodoro = () => {\r\n  return {\r\n    type: POMODORO_SECONDS_DECREMENT,\r\n    payload: 1,\r\n  }\r\n}\r\nexport const resetPomodoro = () => {\r\n  return {\r\n    type: POMODORO_SECONDS_RESET,\r\n  }\r\n}\r\n// 2 actions to set the timer to my object I've gotten from the server\r\nexport const pomodoroSecondsSet = (data) => {\r\n  return {\r\n    type: POMODORO_SECONDS_SET,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const restSecondsSet = (data) => {\r\n  return {\r\n    type: REST_SECONDS_SET,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const decreaseRest = () => {\r\n  return {\r\n    type: REST_SECONDS_DECREMENT,\r\n  }\r\n}\r\nexport const resetRest = () => {\r\n  return {\r\n    type: REST_SECONDS_RESET,\r\n  }\r\n}\r\nexport const setZeroRest = () => {\r\n  return {\r\n    type: SET_REST_ZERO,\r\n  }\r\n}\r\n\r\n// pomodoro duration that is displayed in the timer + 1 min\r\n\r\nexport const increasePomodoroMinutes = () => {\r\n  return {\r\n    type: POMODORO_MINUTES_INCREMENT,\r\n  }\r\n}\r\n// pomodoro duration that is displayed in the timer - 1 min\r\n\r\nexport const decreasePomodoroMinutes = () => {\r\n  return {\r\n    type: POMODORO_MINUTES_DECREMENT,\r\n  }\r\n}\r\n\r\n// rest duration that is displayed in the timer + 1 min\r\n\r\nexport const increaseRestMinutes = () => {\r\n  return {\r\n    type: REST_MINUTES_INCREMENT,\r\n  }\r\n}\r\n\r\n// rest duration that is displayed in the timer - 1 min\r\n\r\nexport const decreaseRestMinutes = () => {\r\n  return {\r\n    type: REST_MINUTES_DECREMENT,\r\n  }\r\n}\r\n\r\n// savedRestSeconds + 1 min\r\n\r\nexport const increaseSavedRestMinutes = () => {\r\n  return {\r\n    type: SAVED_REST_MINUTES_INCREMENT,\r\n  }\r\n}\r\n\r\n// savedRestSeconds - 1 min\r\n\r\nexport const decreaseSavedRestMinutes = () => {\r\n  return {\r\n    type: SAVED_REST_MINUTES_DECREMENT,\r\n  }\r\n}\r\n\r\n// savedPomodoroSeconds + 1 min\r\n\r\nexport const increaseSavedPomodoroMinutes = () => {\r\n  return {\r\n    type: SAVED_POMODORO_MINUTES_INCREMENT,\r\n  }\r\n}\r\n// savedPomodoroSeconds - 1 min\r\n\r\nexport const decreaseSavedPomodoroMinutes = () => {\r\n  return {\r\n    type: SAVED_POMODORO_MINUTES_DECREMENT,\r\n  }\r\n}\r\n\r\nexport const deletePomodoro = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/pomodoros/${id}`, config)\r\n\r\n    dispatch({\r\n      type: POMODORO_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport {\r\n  POMODORO_DONE_CREATE_REQUEST,\r\n  POMODORO_DONE_CREATE_SUCCESS,\r\n  POMODORO_DONE_CREATE_FAIL,\r\n  POMODORO_DONE_GET_REQUEST,\r\n  POMODORO_DONE_GET_SUCCESS,\r\n  POMODORO_DONE_GET_FAIL,\r\n  POMODORO_DONE_DELETE_REQUEST,\r\n  POMODORO_DONE_DELETE_SUCCESS,\r\n  POMODORO_DONE_DELETE_FAIL,\r\n} from '../constants/pomodoroDoneConstants'\r\n\r\nexport const getMyDonePomodoros = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_DONE_GET_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      `/api/donepomodoros/mydonepomodoros`,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: POMODORO_DONE_GET_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_DONE_GET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const saveMyDonePomodoro = (pomodoroDone) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_DONE_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      `/api/donepomodoros`,\r\n      pomodoroDone,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: POMODORO_DONE_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_DONE_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deletePomodoroDone = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_DONE_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/donepomodoros/${id}`, config)\r\n\r\n    dispatch({\r\n      type: POMODORO_DONE_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_DONE_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, Badge, Card } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  decreasePomodoro,\r\n  resetPomodoro,\r\n  decreaseRest,\r\n  resetRest,\r\n  increasePomodoroMinutes,\r\n  decreasePomodoroMinutes,\r\n  increaseRestMinutes,\r\n  decreaseRestMinutes,\r\n  setZeroRest,\r\n  getMyPomodoros,\r\n  updateMyPomodoro,\r\n  createMyPomodoro,\r\n  pomodoroSecondsSet,\r\n  restSecondsSet,\r\n} from '../actions/pomodoroActions'\r\nimport {\r\n  saveMyDonePomodoro,\r\n  getMyDonePomodoros,\r\n} from '../actions/pomodoroDoneActions'\r\n\r\nconst CustomPomodoroScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const getPomodoroDone = useSelector((state) => state.getPomodoroDone)\r\n  const { pomodorosDone } = getPomodoroDone\r\n\r\n  const counterPomodoro = useSelector((state) => state.counterPomodoro)\r\n  const { pomodoroSeconds } = counterPomodoro\r\n\r\n  const counterRest = useSelector((state) => state.counterRest)\r\n  const { restSeconds } = counterRest\r\n\r\n  const savedPomodoros = useSelector((state) => state.getPomodoroInfo)\r\n\r\n  const updatedPomodoro = useSelector((state) => state.pomodoroUpdate)\r\n  const createdPomodoro = useSelector((state) => state.pomodoroCreate)\r\n\r\n  const [updatedVisible, setUpdatedVisible] = useState(false)\r\n  const [isActive, setIsActive] = useState(false)\r\n  const [optionsToggle, setOptionsToggle] = useState(false)\r\n  const [filteredPomodoro, setFilteredPomodoro] = useState(0)\r\n  const [customTimerOn, setCustomTimerOn] = useState(false)\r\n\r\n  const toggle = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n\r\n  const reset = () => {\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      userInfo &&\r\n      savedPomodoros.pomodoros.length !== 0\r\n    ) {\r\n      dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds))\r\n      dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds))\r\n    } else {\r\n      dispatch(resetPomodoro())\r\n      dispatch(resetRest())\r\n    }\r\n    console.log(updatedVisible)\r\n  }\r\n\r\n  const pomodoroDurationPlus = () => {\r\n    dispatch(increasePomodoroMinutes())\r\n  }\r\n\r\n  const pomodoroDurationMinus = () => {\r\n    dispatch(decreasePomodoroMinutes())\r\n  }\r\n\r\n  const restDurationPlus = () => {\r\n    dispatch(increaseRestMinutes())\r\n  }\r\n\r\n  const restDurationMinus = () => {\r\n    dispatch(decreaseRestMinutes())\r\n  }\r\n\r\n  const restZero = () => {\r\n    dispatch(setZeroRest())\r\n  }\r\n\r\n  const createPomodoroHandler = () => {\r\n    dispatch(\r\n      createMyPomodoro({\r\n        pomodoroSeconds: pomodoroSeconds,\r\n        restSeconds: restSeconds,\r\n      })\r\n    )\r\n  }\r\n\r\n  const savePreferencesHandler = () => {\r\n    dispatch(\r\n      updateMyPomodoro({\r\n        name: `${userInfo.name}'s Pomodoro`,\r\n        description: 'be well my friend',\r\n        _id: savedPomodoros.pomodoros[0]._id,\r\n        pomodoroSeconds: pomodoroSeconds,\r\n        restSeconds: restSeconds,\r\n      })\r\n    )\r\n    if (updatedVisible === true) {\r\n      setUpdatedVisible(false)\r\n    }\r\n  }\r\n\r\n  const timeElapsed = Date.now()\r\n  const today = new Date(timeElapsed)\r\n\r\n  const pomodoroDoneToday = async () => {\r\n    dispatch(getMyDonePomodoros())\r\n    await (pomodorosDone && pomodorosDone.loading === false)\r\n    if (pomodorosDone) {\r\n      const filtered = pomodorosDone.filter(\r\n        (pomodoroDone) =>\r\n          pomodoroDone.pomodoroType === true &&\r\n          pomodoroDone.createdAt.substring(0, 10) ===\r\n            today.toISOString().substring(0, 10)\r\n      ).length\r\n      setFilteredPomodoro(filtered)\r\n    }\r\n  }\r\n\r\n  const filterHandler = async () => {\r\n    dispatch(getMyDonePomodoros())\r\n\r\n    await (pomodorosDone && pomodorosDone.loading === false)\r\n    pomodoroDoneToday()\r\n\r\n    setOptionsToggle(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length !== 0 &&\r\n      customTimerOn === false\r\n    ) {\r\n      dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds))\r\n      dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds))\r\n      setCustomTimerOn(true)\r\n    }\r\n\r\n    // if (userInfo && pomodorosDone && pomodorosDone.length === 0) {\r\n    //   dispatch(getMyDonePomodoros())\r\n    // }\r\n    if (userInfo && createdPomodoro.success === true) {\r\n      dispatch(getMyDonePomodoros())\r\n    }\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (\r\n      userInfo &&\r\n      createdPomodoro.pomodoro &&\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n    if (!savedPomodoros.pomodoros && isActive === false) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0 &&\r\n      updatedPomodoro.pomodoros &&\r\n      userInfo\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      isActive &&\r\n      restSeconds === 0 &&\r\n      pomodoroSeconds === 0\r\n    ) {\r\n      dispatch(\r\n        saveMyDonePomodoro({\r\n          pomodoroType: true,\r\n          secondsDone: savedPomodoros.pomodoros[0].pomodoroSeconds,\r\n        })\r\n      )\r\n      if (savedPomodoros.pomodoros) {\r\n        dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds))\r\n        dispatch(\r\n          pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds)\r\n        )\r\n      } else {\r\n        dispatch(resetPomodoro())\r\n        dispatch(resetRest())\r\n      }\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      if (isActive && pomodoroSeconds > 0) {\r\n        dispatch(decreasePomodoro())\r\n      } else if (isActive && restSeconds > 0 && pomodoroSeconds === 0) {\r\n        dispatch(decreaseRest())\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timer)\r\n  }, [\r\n    isActive,\r\n    restSeconds,\r\n    dispatch,\r\n    pomodoroSeconds,\r\n    savedPomodoros.pomodoros,\r\n    updatedPomodoro,\r\n    createdPomodoro,\r\n    userInfo,\r\n    history,\r\n    pomodorosDone,\r\n    customTimerOn,\r\n  ])\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Row className='justify-content-center'>\r\n        <Col>\r\n          <Card className='p-3'>\r\n            <Row className='justify-content-center'>\r\n              {' '}\r\n              {isActive && pomodoroSeconds > 0 ? <h1>Work</h1> : <h1>Rest</h1>}\r\n            </Row>\r\n            <Row className='justify-content-center'>\r\n              {pomodoroSeconds === 0 ? (\r\n                <Badge variant='success'>\r\n                  <h2 font-weight-bolder>\r\n                    {' '}\r\n                    {Math.trunc(restSeconds / 60)} : {restSeconds % 60}\r\n                  </h2>\r\n                </Badge>\r\n              ) : (\r\n                <Badge variant='danger' className='justify-content-center'>\r\n                  <h2 font-weight-bolder>\r\n                    {Math.trunc(pomodoroSeconds / 60)} : {pomodoroSeconds % 60}\r\n                  </h2>\r\n                </Badge>\r\n              )}\r\n            </Row>\r\n            <Row className='justify-content-center'>\r\n              {isActive ? (\r\n                <Button variant='info' onClick={toggle} size='lg'>\r\n                  Pause\r\n                </Button>\r\n              ) : (\r\n                <Button variant='success' onClick={toggle} size='lg'>\r\n                  Start\r\n                </Button>\r\n              )}\r\n              {isActive && pomodoroSeconds === 0 && (\r\n                <Button onClick={restZero}>Skip rest</Button>\r\n              )}\r\n            </Row>\r\n          </Card>\r\n\r\n          {optionsToggle === false && (\r\n            <Row className='justify-content-center my-3'>\r\n              <Button variant='dark' flush onClick={filterHandler}>\r\n                <i className='fas fa-cogs'></i> Options\r\n              </Button>\r\n            </Row>\r\n          )}\r\n          {optionsToggle === true && (\r\n            <Card className='my-3'>\r\n              <Row className='justify-content-center my-3'>\r\n                <Button\r\n                  variant='dark'\r\n                  flush\r\n                  onClick={() => {\r\n                    setOptionsToggle(false)\r\n                  }}\r\n                >\r\n                  <i className='fas fa-cogs'></i> Hide\r\n                </Button>\r\n              </Row>\r\n              <Row className='justify-content-center'>\r\n                <h5>\r\n                  <i className='fas fa-user-tie'></i>{' '}\r\n                  <i className='fas fa-hourglass-start'></i>:{' '}\r\n                  <Button size='sm' onClick={pomodoroDurationMinus}>\r\n                    <b>-</b>\r\n                  </Button>{' '}\r\n                  <b>{Math.trunc(pomodoroSeconds / 60)}</b>{' '}\r\n                  <Button size='sm' onClick={pomodoroDurationPlus}>\r\n                    <b>+</b>\r\n                  </Button>{' '}\r\n                  min\r\n                </h5>\r\n              </Row>\r\n              <Row className='justify-content-center'>\r\n                <h5>\r\n                  <i className='fas fa-bed'></i>{' '}\r\n                  <i className='fas fa-hourglass-end'></i>:{' '}\r\n                  <Button size='sm' onClick={restDurationMinus}>\r\n                    <b>-</b>\r\n                  </Button>{' '}\r\n                  <b>{Math.trunc(restSeconds / 60)}</b>{' '}\r\n                  <Button size='sm' onClick={restDurationPlus}>\r\n                    <b>+</b>\r\n                  </Button>{' '}\r\n                  min\r\n                </h5>\r\n              </Row>\r\n\r\n              <Row className='justify-content-center my-3'>\r\n                <Button variant='success' flush onClick={pomodoroDoneToday}>\r\n                  Done today: <b>{filteredPomodoro} </b>\r\n                </Button>{' '}\r\n              </Row>\r\n              {userInfo &&\r\n                savedPomodoros.pomodoros &&\r\n                savedPomodoros.pomodoros.length === 0 &&\r\n                !createdPomodoro.pomodoro && (\r\n                  <Button variant='info' flush onClick={createPomodoroHandler}>\r\n                    Create New\r\n                  </Button>\r\n                )}\r\n              {userInfo &&\r\n                savedPomodoros.pomodoros &&\r\n                savedPomodoros.pomodoros.length !== 0 && (\r\n                  <Row className='justify-content-center '>\r\n                    <Button\r\n                      variant='info'\r\n                      flush\r\n                      onClick={savePreferencesHandler}\r\n                    >\r\n                      Save Changes\r\n                    </Button>\r\n                  </Row>\r\n                )}\r\n              {updatedPomodoro.pomodoros && updatedVisible === false && (\r\n                <Row className='justify-content-center'>\r\n                  <Button\r\n                    variant='success'\r\n                    flush\r\n                    onClick={() =>\r\n                      dispatch(\r\n                        getMyPomodoros(),\r\n                        setUpdatedVisible(!updatedVisible)\r\n                      )\r\n                    }\r\n                  >\r\n                    Set updated as current\r\n                  </Button>\r\n                </Row>\r\n              )}\r\n              <Row className='justify-content-center'>\r\n                <Button variant='warning' flush onClick={reset}>\r\n                  Reset timer\r\n                </Button>\r\n              </Row>\r\n            </Card>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default CustomPomodoroScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Row, Col } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\nimport {\r\n  restSecondsSet,\r\n  pomodoroSecondsSet,\r\n  getMyPomodoros,\r\n} from '../actions/pomodoroActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  const savedPomodoros = useSelector((state) => state.getPomodoroInfo)\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/training')\r\n    }\r\n    if (\r\n      userInfo &&\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n\r\n    if (\r\n      userInfo &&\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length !== 0\r\n    ) {\r\n      dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds))\r\n      dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds))\r\n    }\r\n  }, [userInfo, dispatch, savedPomodoros.pomodoros, history])\r\n  return (\r\n    <FormContainer>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <h1>Log in</h1>\r\n          <Form.Label>Enter your email:</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter your email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId='currentPassword'>\r\n          <p>Enter your password:</p>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter your password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <button type='submit'>Login</button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New user?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Card, Table } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getMyDonePomodoros,\r\n  deletePomodoroDone,\r\n} from '../actions/pomodoroDoneActions'\r\n\r\nconst UserStatsScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const getPomodoroDone = useSelector((state) => state.getPomodoroDone)\r\n  const { pomodorosDone } = getPomodoroDone\r\n\r\n  const pomodoroDoneDelete = useSelector((state) => state.pomodoroDoneDelete)\r\n  const { success } = pomodoroDoneDelete\r\n\r\n  const [deleteDone, setDeleteDone] = useState(false)\r\n  const [trainingStatsToggle, setTrainingStatsToggle] = useState(false)\r\n  const [pomodoroStatsToggle, setPomodoroStatsToggle] = useState(false)\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deletePomodoroDone(id))\r\n      setDeleteDone(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    if (deleteDone === true) {\r\n      dispatch(getMyDonePomodoros())\r\n      setDeleteDone(false)\r\n    }\r\n  }, [dispatch, pomodorosDone, userInfo, success, history, deleteDone])\r\n\r\n  return (\r\n    <FormContainer>\r\n      {pomodorosDone && pomodorosDone.length === 0 && (\r\n        <Card className='p-3'>\r\n          <Button\r\n            variant='info'\r\n            flush\r\n            onClick={() => {\r\n              dispatch(getMyDonePomodoros())\r\n            }}\r\n          >\r\n            Load Data\r\n          </Button>\r\n        </Card>\r\n      )}\r\n\r\n      <Card className='p-3'>\r\n        <Row className='justify-content-center'>\r\n          <Button\r\n            variant='success'\r\n            flush\r\n            onClick={() => {\r\n              setPomodoroStatsToggle(false)\r\n              setTrainingStatsToggle(true)\r\n            }}\r\n          >\r\n            <i className='fas fa-dumbbell'></i> Your training data\r\n          </Button>\r\n          <Button\r\n            variant='info'\r\n            flush\r\n            onClick={() => {\r\n              setPomodoroStatsToggle(true)\r\n              setTrainingStatsToggle(false)\r\n            }}\r\n          >\r\n            <i className='fas fa-pizza-slice'></i> Your pomodoro data\r\n          </Button>\r\n        </Row>\r\n      </Card>\r\n\r\n      {pomodorosDone &&\r\n        pomodorosDone.length !== 0 &&\r\n        pomodoroStatsToggle === true && (\r\n          <Table stripped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>Duration of pomodoro </th>\r\n                <th>Date of creation</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pomodorosDone\r\n                .filter((pomodoroDone) => pomodoroDone.pomodoroType === true)\r\n                .map((pomodoroDone) => (\r\n                  <tr key={pomodoroDone._id}>\r\n                    <td>\r\n                      {Math.trunc(pomodoroDone.secondsDone / 60)} minutes{' '}\r\n                      {pomodoroDone.secondsDone % 60} seconds\r\n                    </td>\r\n                    <td>\r\n                      {pomodoroDone.createdAt.substring(0, 10)} at{' '}\r\n                      {pomodoroDone.createdAt.substring(11, 16)}{' '}\r\n                    </td>\r\n                    <td>\r\n                      {' '}\r\n                      <Button\r\n                        variant='danger'\r\n                        onClick={() => deleteHandler(pomodoroDone._id)}\r\n                        size='sm'\r\n                      >\r\n                        delete\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n\r\n      {pomodorosDone &&\r\n        pomodorosDone.length !== 0 &&\r\n        trainingStatsToggle === true && (\r\n          <Table stripped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>Name </th>\r\n                <th>Exercise Duration </th>\r\n                <th>Date of creation</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pomodorosDone\r\n                .filter(\r\n                  (pomodoroDone) =>\r\n                    pomodoroDone.pomodoroType === false ||\r\n                    !pomodoroDone.pomodoroType\r\n                )\r\n                .map((pomodoroDone) => (\r\n                  <tr key={pomodoroDone._id}>\r\n                    <td>{pomodoroDone.name}</td>\r\n                    <td>\r\n                      {Math.trunc(pomodoroDone.secondsDone / 60)} minutes{' '}\r\n                      {pomodoroDone.secondsDone % 60} seconds\r\n                    </td>\r\n                    <td>\r\n                      {pomodoroDone.createdAt.substring(0, 10)} at{' '}\r\n                      {pomodoroDone.createdAt.substring(11, 16)}{' '}\r\n                    </td>\r\n                    <td>\r\n                      {' '}\r\n                      <Button\r\n                        variant='danger'\r\n                        onClick={() => deleteHandler(pomodoroDone._id)}\r\n                        size='sm'\r\n                      >\r\n                        delete\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default UserStatsScreen\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { register } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password and confirm password don't match\")\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/create')\r\n    }\r\n  }, [userInfo, history])\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Form onSubmit={submitHandler}>\r\n        <h1>Register new user</h1>\r\n        {message && <Message variant='warning'>{message}</Message>}\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name:</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter your name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email:</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter your email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password:</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm password:</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm your password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button type='submit'>Register</Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Badge, Card, Table } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  decreasePomodoro,\r\n  resetPomodoro,\r\n  decreaseRest,\r\n  resetRest,\r\n  setZeroRest,\r\n  getMyPomodoros,\r\n  pomodoroSecondsSet,\r\n  restSecondsSet,\r\n  deletePomodoro,\r\n} from '../actions/pomodoroActions'\r\nimport { saveMyDonePomodoro } from '../actions/pomodoroDoneActions'\r\n\r\nconst CustomTrainingScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const counterPomodoro = useSelector((state) => state.counterPomodoro)\r\n  const { pomodoroSeconds } = counterPomodoro\r\n\r\n  const counterRest = useSelector((state) => state.counterRest)\r\n  const { restSeconds } = counterRest\r\n\r\n  const savedPomodoros = useSelector((state) => state.getPomodoroInfo)\r\n  const { pomodoros } = savedPomodoros\r\n\r\n  const updatedPomodoro = useSelector((state) => state.pomodoroUpdate)\r\n\r\n  const createdPomodoro = useSelector((state) => state.pomodoroCreate)\r\n\r\n  const [trainingSessionVisible, setTrainingSessionVisible] = useState(false)\r\n  const [isActive, setIsActive] = useState(false)\r\n  const [deleteDone, setDeleteDone] = useState(false)\r\n  const [createDone, setCreateDone] = useState(false)\r\n  const [excerciseNumber, setExcerciseNumber] = useState(1)\r\n  const [trainingSessionDone, setTrainingSessionDone] = useState(false)\r\n  const [optionsToggle, setOptionsToggle] = useState(false)\r\n  const [descriptionToggle, setDescriptionToggle] = useState(false)\r\n  const [customTimerOn, setCustomTimerOn] = useState(false)\r\n\r\n  const toggle = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n\r\n  const reset = () => {\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      userInfo &&\r\n      savedPomodoros.pomodoros.length > 1\r\n    ) {\r\n      dispatch(\r\n        restSecondsSet(savedPomodoros.pomodoros[excerciseNumber].restSeconds)\r\n      )\r\n      dispatch(\r\n        pomodoroSecondsSet(\r\n          savedPomodoros.pomodoros[excerciseNumber].pomodoroSeconds\r\n        )\r\n      )\r\n    } else {\r\n      dispatch(resetPomodoro())\r\n      dispatch(resetRest())\r\n    }\r\n    setTrainingSessionDone(false)\r\n  }\r\n\r\n  const restZero = () => {\r\n    dispatch(setZeroRest())\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deletePomodoro(id))\r\n      setDeleteDone(true)\r\n    }\r\n  }\r\n\r\n  const nextExerciseHandler = () => {\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length > excerciseNumber + 1\r\n    ) {\r\n      setExcerciseNumber(excerciseNumber + 1)\r\n      dispatch(\r\n        restSecondsSet(savedPomodoros.pomodoros[excerciseNumber].restSeconds)\r\n      )\r\n      dispatch(\r\n        pomodoroSecondsSet(\r\n          savedPomodoros.pomodoros[excerciseNumber].pomodoroSeconds\r\n        )\r\n      )\r\n    }\r\n  }\r\n  const previousExerciseHandler = () => {\r\n    if (savedPomodoros.pomodoros && excerciseNumber > 1) {\r\n      setExcerciseNumber(excerciseNumber - 1)\r\n      dispatch(\r\n        restSecondsSet(savedPomodoros.pomodoros[excerciseNumber].restSeconds)\r\n      )\r\n      dispatch(\r\n        pomodoroSecondsSet(\r\n          savedPomodoros.pomodoros[excerciseNumber].pomodoroSeconds\r\n        )\r\n      )\r\n    }\r\n  }\r\n  const doItAgainHandler = () => {\r\n    setTrainingSessionDone(false)\r\n    setExcerciseNumber(1)\r\n    dispatch(restSecondsSet(savedPomodoros.pomodoros[1].restSeconds))\r\n    dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[1].pomodoroSeconds))\r\n    setIsActive(false)\r\n  }\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros[1] &&\r\n      savedPomodoros.pomodoros.length > 0 &&\r\n      customTimerOn === false\r\n    ) {\r\n      dispatch(restSecondsSet(savedPomodoros.pomodoros[1].restSeconds))\r\n      dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[1].pomodoroSeconds))\r\n      setCustomTimerOn(true)\r\n    }\r\n    if (deleteDone === true) {\r\n      dispatch(getMyPomodoros())\r\n      setDeleteDone(false)\r\n    }\r\n    if (createDone === true) {\r\n      dispatch(getMyPomodoros())\r\n      setCreateDone(false)\r\n    }\r\n\r\n    if (\r\n      userInfo &&\r\n      createdPomodoro.pomodoro &&\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n    if (!savedPomodoros.pomodoros && isActive === false) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0 &&\r\n      updatedPomodoro.pomodoros &&\r\n      userInfo\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      isActive &&\r\n      restSeconds === 0 &&\r\n      pomodoroSeconds === 0\r\n    ) {\r\n      dispatch(\r\n        saveMyDonePomodoro({\r\n          name: savedPomodoros.pomodoros[excerciseNumber].name,\r\n          secondsDone:\r\n            savedPomodoros.pomodoros[excerciseNumber].pomodoroSeconds,\r\n        })\r\n      )\r\n      if (savedPomodoros.pomodoros.length > excerciseNumber + 1) {\r\n        setExcerciseNumber(excerciseNumber + 1)\r\n        if (savedPomodoros.pomodoros.length !== excerciseNumber + 1) {\r\n          dispatch(\r\n            restSecondsSet(\r\n              savedPomodoros.pomodoros[excerciseNumber].restSeconds\r\n            )\r\n          )\r\n          dispatch(\r\n            pomodoroSecondsSet(\r\n              savedPomodoros.pomodoros[excerciseNumber].pomodoroSeconds\r\n            )\r\n          )\r\n        }\r\n      } else {\r\n        setTrainingSessionDone(true)\r\n      }\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      if (isActive && pomodoroSeconds > 0) {\r\n        dispatch(decreasePomodoro())\r\n      } else if (isActive && restSeconds > 0 && pomodoroSeconds === 0) {\r\n        dispatch(decreaseRest())\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timer)\r\n  }, [\r\n    isActive,\r\n    restSeconds,\r\n    dispatch,\r\n    pomodoroSeconds,\r\n    savedPomodoros.pomodoros,\r\n    updatedPomodoro,\r\n    createdPomodoro,\r\n    userInfo,\r\n    history,\r\n    deleteDone,\r\n    createDone,\r\n    excerciseNumber,\r\n    customTimerOn,\r\n  ])\r\n\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <Card className='p-3'>\r\n          {trainingSessionDone === false && (\r\n            <Row className='justify-content-center'>\r\n              {' '}\r\n              {isActive && pomodoroSeconds > 0 ? <h1>Work</h1> : <h1>Rest</h1>}\r\n            </Row>\r\n          )}\r\n          {trainingSessionDone === true && (\r\n            <>\r\n              {' '}\r\n              <Row className='justify-content-center'>\r\n                {' '}\r\n                <Badge className='p-3' variant='success'>\r\n                  <h3> Well done {userInfo.name}! </h3>\r\n                </Badge>\r\n              </Row>\r\n              <Row className='justify-content-center'>\r\n                <Button onClick={doItAgainHandler}>Do it Again</Button>\r\n              </Row>\r\n            </>\r\n          )}\r\n          <Row className='justify-content-center'>\r\n            {' '}\r\n            {trainingSessionDone === false &&\r\n              savedPomodoros.pomodoros &&\r\n              savedPomodoros.pomodoros.length !== 0 && (\r\n                <p>\r\n                  <h3\r\n                    onClick={() => {\r\n                      setDescriptionToggle(!descriptionToggle)\r\n                    }}\r\n                  >\r\n                    {savedPomodoros.pomodoros[excerciseNumber] &&\r\n                    savedPomodoros.pomodoros.length > 1 ? (\r\n                      <>{savedPomodoros.pomodoros[excerciseNumber].name}</>\r\n                    ) : (\r\n                      'Exercise'\r\n                    )}{' '}\r\n                    {savedPomodoros.pomodoros[excerciseNumber] &&\r\n                      savedPomodoros.pomodoros[excerciseNumber].description &&\r\n                      descriptionToggle === false && (\r\n                        <Button\r\n                          variant='light'\r\n                          flush\r\n                          onClick={() => {\r\n                            setDescriptionToggle(true)\r\n                          }}\r\n                        >\r\n                          <i className='far fa-plus-square'></i>\r\n                        </Button>\r\n                      )}\r\n                    {savedPomodoros.pomodoros[excerciseNumber] &&\r\n                      savedPomodoros.pomodoros[excerciseNumber].description &&\r\n                      descriptionToggle === true && (\r\n                        <>\r\n                          <Button\r\n                            variant='light'\r\n                            flush\r\n                            onClick={() => {\r\n                              setDescriptionToggle(false)\r\n                            }}\r\n                          >\r\n                            <i className='far fa-minus-square'></i>\r\n                          </Button>\r\n                        </>\r\n                      )}\r\n                  </h3>\r\n\r\n                  {descriptionToggle === true &&\r\n                    savedPomodoros.pomodoros &&\r\n                    savedPomodoros.pomodoros.length > 1 && (\r\n                      <h4>\r\n                        {savedPomodoros.pomodoros[excerciseNumber].description}\r\n                      </h4>\r\n                    )}\r\n                </p>\r\n              )}\r\n          </Row>\r\n\r\n          <Row className='justify-content-center'>\r\n            {pomodoroSeconds === 0 ? (\r\n              <Badge variant='success'>\r\n                <h2 font-weight-bolder>\r\n                  {' '}\r\n                  {Math.trunc(restSeconds / 60)} : {restSeconds % 60}\r\n                </h2>\r\n              </Badge>\r\n            ) : (\r\n              <Badge variant='danger' className='justify-content-center'>\r\n                <h2 font-weight-bolder>\r\n                  {Math.trunc(pomodoroSeconds / 60)} : {pomodoroSeconds % 60}\r\n                </h2>\r\n              </Badge>\r\n            )}\r\n          </Row>\r\n          {trainingSessionDone === false && (\r\n            <Row className='justify-content-center'>\r\n              {trainingSessionDone === false && isActive ? (\r\n                <Button variant='info' onClick={toggle} size='lg'>\r\n                  Pause\r\n                </Button>\r\n              ) : (\r\n                <Button variant='success' onClick={toggle} size='lg'>\r\n                  Start\r\n                </Button>\r\n              )}\r\n              {trainingSessionDone === false &&\r\n                isActive &&\r\n                pomodoroSeconds === 0 && (\r\n                  <Button onClick={restZero}>Skip rest</Button>\r\n                )}\r\n            </Row>\r\n          )}\r\n        </Card>\r\n\r\n        <Card className='my-3'>\r\n          <Row className='justify-content-center my-3'>\r\n            <Button variant='danger' flush onClick={reset}>\r\n              Reset this exercise\r\n            </Button>\r\n          </Row>\r\n          {trainingSessionDone === false && optionsToggle === false && (\r\n            <Row className='justify-content-center'>\r\n              <Button variant='warning' flush onClick={previousExerciseHandler}>\r\n                <i className='fas fa-arrow-left'></i> Previous\r\n              </Button>\r\n              <Button variant='info' flush onClick={nextExerciseHandler}>\r\n                Next <i className='fas fa-arrow-right'></i>\r\n              </Button>\r\n            </Row>\r\n          )}\r\n\r\n          {optionsToggle === false && (\r\n            <Row className='justify-content-center my-3'>\r\n              <Button\r\n                variant='dark'\r\n                flush\r\n                onClick={() => {\r\n                  setOptionsToggle(true)\r\n                }}\r\n              >\r\n                <i className='fas fa-cogs'></i> Options\r\n              </Button>\r\n            </Row>\r\n          )}\r\n          {optionsToggle === true && (\r\n            <>\r\n              <Row className='justify-content-center'>\r\n                {' '}\r\n                <Link to='/create' className='btn btn-info'>\r\n                  Create new or Update\r\n                </Link>\r\n              </Row>\r\n              <Row className='justify-content-center my-3'>\r\n                {' '}\r\n                <Button\r\n                  variant='dark'\r\n                  flush\r\n                  onClick={() => {\r\n                    setOptionsToggle(false)\r\n                  }}\r\n                >\r\n                  <i className='fas fa-times'></i> Close options\r\n                </Button>\r\n              </Row>\r\n            </>\r\n          )}\r\n        </Card>\r\n      </FormContainer>\r\n      {trainingSessionVisible === false ? (\r\n        <Row className='justify-content-center'>\r\n          <Button\r\n            variant='info'\r\n            flush\r\n            onClick={() => setTrainingSessionVisible(true)}\r\n          >\r\n            Show training session\r\n          </Button>\r\n        </Row>\r\n      ) : (\r\n        <Row className='justify-content-center'>\r\n          <Button\r\n            variant='warning'\r\n            flush\r\n            onClick={() => setTrainingSessionVisible(false)}\r\n          >\r\n            Hide training session\r\n          </Button>\r\n        </Row>\r\n      )}\r\n\r\n      {savedPomodoros &&\r\n        savedPomodoros.pomodoros &&\r\n        savedPomodoros.length !== 0 &&\r\n        trainingSessionVisible === true && (\r\n          <Table stripped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>Name </th>\r\n                <th>\r\n                  <i className='fas fa-dumbbell'></i>{' '}\r\n                  <i className='far fa-clock'></i>\r\n                </th>\r\n                <th>\r\n                  <i className='fas fa-bed'></i>{' '}\r\n                  <i className='far fa-clock'></i>{' '}\r\n                </th>\r\n                <th>Description </th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pomodoros\r\n\r\n                .filter(\r\n                  (savedPomodoro) => pomodoros.indexOf(savedPomodoro) !== 0\r\n                )\r\n                .map((savedPomodoro) => (\r\n                  <tr key={savedPomodoro._id}>\r\n                    <td>{savedPomodoro.name}</td>\r\n                    {savedPomodoro.pomodoroSeconds % 60 === 0 &&\r\n                      savedPomodoro.pomodoroSeconds >= 60 && (\r\n                        <td>\r\n                          {Math.trunc(savedPomodoro.pomodoroSeconds / 60)} min{' '}\r\n                        </td>\r\n                      )}\r\n                    {savedPomodoro.pomodoroSeconds % 60 !== 0 &&\r\n                      savedPomodoro.pomodoroSeconds > 60 && (\r\n                        <td>\r\n                          {Math.trunc(savedPomodoro.pomodoroSeconds / 60)} min{' '}\r\n                          {savedPomodoro.pomodoroSeconds % 60} sec\r\n                        </td>\r\n                      )}\r\n                    {savedPomodoro.pomodoroSeconds % 60 !== 0 &&\r\n                      savedPomodoro.pomodoroSeconds < 60 && (\r\n                        <td>{savedPomodoro.pomodoroSeconds % 60} sec</td>\r\n                      )}\r\n\r\n                    {savedPomodoro.restSeconds % 60 === 0 &&\r\n                      savedPomodoro.restSeconds >= 60 && (\r\n                        <td>\r\n                          {Math.trunc(savedPomodoro.restSeconds / 60)} minutes{' '}\r\n                        </td>\r\n                      )}\r\n                    {savedPomodoro.restSeconds % 60 !== 0 &&\r\n                      savedPomodoro.restSeconds > 60 && (\r\n                        <td>\r\n                          {Math.trunc(savedPomodoro.restSeconds / 60)} min{' '}\r\n                          {savedPomodoro.restSeconds % 60} sec\r\n                        </td>\r\n                      )}\r\n                    {savedPomodoro.restSeconds % 60 !== 0 &&\r\n                      savedPomodoro.restSeconds < 60 && (\r\n                        <td>{savedPomodoro.restSeconds % 60} sec</td>\r\n                      )}\r\n\r\n                    <td>{savedPomodoro.description}</td>\r\n                    <td>\r\n                      {' '}\r\n                      <Button\r\n                        variant='danger'\r\n                        onClick={() => deleteHandler(savedPomodoro._id)}\r\n                        size='sm'\r\n                      >\r\n                        <i className='fas fa-times'></i>\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomTrainingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Card, Table } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getMyPomodoros,\r\n  updateMyPomodoro,\r\n  createMyPomodoro,\r\n  deletePomodoro,\r\n} from '../actions/pomodoroActions'\r\n\r\nconst CreateNewExerciseScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const savedPomodoros = useSelector((state) => state.getPomodoroInfo)\r\n  const { pomodoros } = savedPomodoros\r\n\r\n  const updatedPomodoro = useSelector((state) => state.pomodoroUpdate)\r\n\r\n  const pomodoroDelete = useSelector((state) => state.pomodoroDelete)\r\n\r\n  const pomodoroCreate = useSelector((state) => state.pomodoroCreate)\r\n\r\n  const [deleteDone, setDeleteDone] = useState(false)\r\n  const [createDone, setCreateDone] = useState(false)\r\n  const [updateDone, setUpdateDone] = useState(false)\r\n\r\n  const [name, setName] = useState('New exercise')\r\n  const [description, setDescription] = useState('Best one yet')\r\n  const [exerciseDuration, setExerciseDuration] = useState(30)\r\n  const [exerciseNumber, setExerciseNumber] = useState(1)\r\n  const [restDuration, setRestDuration] = useState(10)\r\n\r\n  const nextExerciseHandler = () => {\r\n    if (savedPomodoros.pomodoros.length > exerciseNumber + 1) {\r\n      setExerciseNumber(exerciseNumber + 1)\r\n      setName(savedPomodoros.pomodoros[exerciseNumber].name)\r\n      setDescription(savedPomodoros.pomodoros[exerciseNumber].description)\r\n      setExerciseDuration(\r\n        savedPomodoros.pomodoros[exerciseNumber].pomodoroSeconds\r\n      )\r\n      setRestDuration(savedPomodoros.pomodoros[exerciseNumber].restSeconds)\r\n    }\r\n  }\r\n  const previousExerciseHandler = () => {\r\n    if (exerciseNumber >= 1) {\r\n      setExerciseNumber(exerciseNumber - 1)\r\n      setName(savedPomodoros.pomodoros[exerciseNumber].name)\r\n      setDescription(savedPomodoros.pomodoros[exerciseNumber].description)\r\n      setExerciseDuration(\r\n        savedPomodoros.pomodoros[exerciseNumber].pomodoroSeconds\r\n      )\r\n      setRestDuration(savedPomodoros.pomodoros[exerciseNumber].restSeconds)\r\n    }\r\n  }\r\n\r\n  const createPomodoroHandler = () => {\r\n    dispatch(\r\n      createMyPomodoro({\r\n        pomodoroSeconds: exerciseDuration,\r\n        restSeconds: restDuration,\r\n        name: name,\r\n        description: description,\r\n      })\r\n    )\r\n    setCreateDone(true)\r\n  }\r\n\r\n  const submitDescriptionHandler = (e) => {\r\n    e.preventDefault()\r\n    setDescription(e.target.value)\r\n  }\r\n  const submitNameHandler = (e) => {\r\n    e.preventDefault()\r\n    setName(e.target.value)\r\n  }\r\n  const submitExerciseDurationHandler = (e) => {\r\n    e.preventDefault()\r\n    setExerciseDuration(e.target.value)\r\n  }\r\n  const submitRestDurationHandler = (e) => {\r\n    e.preventDefault()\r\n    setRestDuration(e.target.value)\r\n  }\r\n  // functions for local state duration of exe and rest\r\n  const exerciseDurationPlusFive = () => {\r\n    setExerciseDuration((exerciseDuration) => exerciseDuration + 5)\r\n  }\r\n  const exerciseDurationPlusTen = () => {\r\n    setExerciseDuration((exerciseDuration) => exerciseDuration + 10)\r\n  }\r\n  const exerciseDurationPlusThirty = () => {\r\n    setExerciseDuration((exerciseDuration) => exerciseDuration + 30)\r\n  }\r\n  const exerciseDurationMinusFive = () => {\r\n    if (exerciseDuration > 4) {\r\n      setExerciseDuration((exerciseDuration) => exerciseDuration - 5)\r\n    }\r\n  }\r\n\r\n  const exerciseDurationMinusTen = () => {\r\n    if (exerciseDuration > 9) {\r\n      setExerciseDuration((exerciseDuration) => exerciseDuration - 10)\r\n    }\r\n  }\r\n  const exerciseDurationMinusThirty = () => {\r\n    if (exerciseDuration > 29) {\r\n      setExerciseDuration((exerciseDuration) => exerciseDuration - 30)\r\n    }\r\n  }\r\n\r\n  const restDurationPlusFive = () => {\r\n    setRestDuration((restDuration) => restDuration + 5)\r\n  }\r\n  const restDurationPlusTen = () => {\r\n    setRestDuration((restDuration) => restDuration + 10)\r\n  }\r\n  const restDurationPlusThirty = () => {\r\n    setRestDuration((restDuration) => restDuration + 30)\r\n  }\r\n  const restDurationMinusFive = () => {\r\n    if (restDuration > 4) {\r\n      setRestDuration((restDuration) => restDuration - 5)\r\n    }\r\n  }\r\n  const restDurationMinusTen = () => {\r\n    if (restDuration > 9) {\r\n      setRestDuration((restDuration) => restDuration - 10)\r\n    }\r\n  }\r\n  const restDurationMinusThirty = () => {\r\n    if (restDuration > 29) {\r\n      setRestDuration((restDuration) => restDuration - 30)\r\n    }\r\n  }\r\n  const restDurationReset = () => {\r\n    setRestDuration(0)\r\n  }\r\n  const exerciseDurationReset = () => {\r\n    setExerciseDuration(0)\r\n  }\r\n\r\n  //\r\n  const trainingUpdateHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(\r\n        updateMyPomodoro({\r\n          _id: id,\r\n          pomodoroSeconds: exerciseDuration,\r\n          restSeconds: restDuration,\r\n          name: name,\r\n          description: description,\r\n        })\r\n      )\r\n      setUpdateDone(true)\r\n    }\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deletePomodoro(id))\r\n      setDeleteDone(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (deleteDone === true && pomodoroDelete.success === true) {\r\n      dispatch(getMyPomodoros())\r\n      setDeleteDone(false)\r\n    }\r\n    if (createDone === true && pomodoroCreate.success === true) {\r\n      dispatch(getMyPomodoros())\r\n      setCreateDone(false)\r\n    }\r\n    if (updateDone === true && updatedPomodoro.success === true) {\r\n      dispatch(getMyPomodoros())\r\n      setUpdateDone(false)\r\n    }\r\n  }, [\r\n    deleteDone,\r\n    createDone,\r\n    dispatch,\r\n    userInfo,\r\n    history,\r\n    savedPomodoros,\r\n    updatedPomodoro,\r\n    updateDone,\r\n    pomodoroCreate,\r\n    pomodoroDelete,\r\n  ])\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Name of an exercise'\r\n                value={name}\r\n                onChange={submitNameHandler}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Description of an exercise'\r\n                value={description}\r\n                onChange={submitDescriptionHandler}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId='exercise duration'>\r\n              <Form.Label>Excercise duration</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter excercise duration'\r\n                value={exerciseDuration}\r\n                onChange={submitExerciseDurationHandler}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Row>\r\n              <Button size='sm' onClick={exerciseDurationPlusFive}>\r\n                <b>+ 5</b>\r\n              </Button>\r\n              <Button size='sm' onClick={exerciseDurationPlusTen}>\r\n                <b>+ 10</b>\r\n              </Button>\r\n              <Button size='sm' onClick={exerciseDurationPlusThirty}>\r\n                <b>+ 30</b>\r\n              </Button>\r\n            </Row>\r\n            <Row>\r\n              <Button onClick={exerciseDurationMinusFive}>\r\n                <b>- 5</b>\r\n              </Button>\r\n              <Button size='sm' onClick={exerciseDurationMinusTen}>\r\n                <b>- 10</b>\r\n              </Button>\r\n              <Button size='sm' onClick={exerciseDurationMinusThirty}>\r\n                <b>- 30</b>\r\n              </Button>\r\n              <Button size='sm' onClick={exerciseDurationReset}>\r\n                <b>set to 0</b>\r\n              </Button>\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId='rest duration'>\r\n              <Form.Label>Rest duration</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter rest duration'\r\n                value={restDuration}\r\n                onChange={submitRestDurationHandler}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Row>\r\n              <Button size='sm' onClick={restDurationPlusFive}>\r\n                <b>+ 5</b>\r\n              </Button>\r\n              <Button size='sm' onClick={restDurationPlusTen}>\r\n                <b>+ 10</b>\r\n              </Button>\r\n              <Button size='sm' onClick={restDurationPlusThirty}>\r\n                <b>+ 30</b>\r\n              </Button>\r\n            </Row>\r\n            <Row>\r\n              <Button size='sm' onClick={restDurationMinusFive}>\r\n                <b>- 5</b>\r\n              </Button>\r\n              <Button size='sm' onClick={restDurationMinusTen}>\r\n                <b>- 10</b>\r\n              </Button>\r\n              <Button size='sm' onClick={restDurationMinusThirty}>\r\n                <b>- 30</b>\r\n              </Button>\r\n              <Button size='sm' onClick={restDurationReset}>\r\n                <b>set to 0</b>\r\n              </Button>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <FormContainer>\r\n        {savedPomodoros.pomodoros && savedPomodoros.pomodoros.length !== 0 ? (\r\n          <Card className='p-3'>\r\n            <Row className='justify-content-center'>\r\n              <Button\r\n                variant='success'\r\n                onClick={createPomodoroHandler}\r\n                size='sm'\r\n              >\r\n                <i className='fas fa-plus-square'></i> Add new excercise\r\n              </Button>\r\n            </Row>\r\n            <Row className='justify-content-center'>\r\n              <Link to='/training' className='btn btn-dark my-3'>\r\n                <i className='fas fa-undo-alt'></i> Back to training\r\n              </Link>\r\n            </Row>\r\n\r\n            <Row className='justify-content-center'>\r\n              <Button variant='warning' flush onClick={previousExerciseHandler}>\r\n                <i className='fas fa-arrow-left'></i> Previous exercise\r\n              </Button>\r\n              <Button variant='info' flush onClick={nextExerciseHandler}>\r\n                Next exercise <i className='fas fa-arrow-right'></i>\r\n              </Button>\r\n            </Row>\r\n          </Card>\r\n        ) : (\r\n          <Card className='p-3'>\r\n            <Button\r\n              variant='info'\r\n              flush\r\n              onClick={() => {\r\n                dispatch(getMyPomodoros())\r\n              }}\r\n            >\r\n              Load Data\r\n            </Button>\r\n            <Button\r\n              variant='success'\r\n              onClick={createPomodoroHandler}\r\n              size='sm'\r\n              className='my-3'\r\n            >\r\n              <i className='fas fa-plus-square'></i> Add new excercise\r\n            </Button>\r\n          </Card>\r\n        )}\r\n      </FormContainer>\r\n\r\n      {savedPomodoros &&\r\n        savedPomodoros.pomodoros &&\r\n        savedPomodoros.length !== 0 && (\r\n          <Table bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>Name </th>\r\n                <th>Description </th>\r\n                <th>\r\n                  <i className='fas fa-dumbbell'></i>{' '}\r\n                  <i className='far fa-clock'></i>\r\n                </th>\r\n                <th>\r\n                  <i className='fas fa-bed'></i>{' '}\r\n                  <i className='far fa-clock'></i>{' '}\r\n                </th>\r\n                <th>Delete or Update</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pomodoros.map((savedPomodoro) => (\r\n                <tr\r\n                  key={savedPomodoro._id}\r\n                  onClick={() => {\r\n                    console.log(pomodoros.indexOf(savedPomodoro))\r\n                    setExerciseNumber(pomodoros.indexOf(savedPomodoro))\r\n                    setName(savedPomodoro.name)\r\n                    setDescription(savedPomodoro.description)\r\n                    setExerciseDuration(savedPomodoro.pomodoroSeconds)\r\n\r\n                    setRestDuration(savedPomodoro.restSeconds)\r\n                  }}\r\n                >\r\n                  <td>{savedPomodoro.name}</td>\r\n                  <td>{savedPomodoro.description}</td>\r\n                  {savedPomodoro.pomodoroSeconds % 60 === 0 &&\r\n                    savedPomodoro.pomodoroSeconds >= 60 && (\r\n                      <td>\r\n                        {Math.trunc(savedPomodoro.pomodoroSeconds / 60)} min{' '}\r\n                      </td>\r\n                    )}\r\n                  {savedPomodoro.pomodoroSeconds % 60 !== 0 &&\r\n                    savedPomodoro.pomodoroSeconds > 60 && (\r\n                      <td>\r\n                        {Math.trunc(savedPomodoro.pomodoroSeconds / 60)} min{' '}\r\n                        {savedPomodoro.pomodoroSeconds % 60} sec\r\n                      </td>\r\n                    )}\r\n                  {savedPomodoro.pomodoroSeconds % 60 !== 0 &&\r\n                    savedPomodoro.pomodoroSeconds < 60 && (\r\n                      <td>{savedPomodoro.pomodoroSeconds % 60} sec</td>\r\n                    )}\r\n\r\n                  {savedPomodoro.restSeconds % 60 === 0 &&\r\n                    savedPomodoro.restSeconds >= 60 && (\r\n                      <td>{Math.trunc(savedPomodoro.restSeconds / 60)} min </td>\r\n                    )}\r\n                  {savedPomodoro.restSeconds % 60 !== 0 &&\r\n                    savedPomodoro.restSeconds > 60 && (\r\n                      <td>\r\n                        {Math.trunc(savedPomodoro.restSeconds / 60)} min{' '}\r\n                        {savedPomodoro.restSeconds % 60} sec\r\n                      </td>\r\n                    )}\r\n                  {savedPomodoro.restSeconds % 60 !== 0 &&\r\n                    savedPomodoro.restSeconds < 60 && (\r\n                      <td>{savedPomodoro.restSeconds % 60} sec</td>\r\n                    )}\r\n\r\n                  <td>\r\n                    {' '}\r\n                    <Button\r\n                      variant='danger'\r\n                      onClick={() => deleteHandler(savedPomodoro._id)}\r\n                      size='sm'\r\n                    >\r\n                      <i className='fas fa-times'></i>\r\n                    </Button>\r\n                    <Button\r\n                      variant='info'\r\n                      onClick={() => trainingUpdateHandler(savedPomodoro._id)}\r\n                      size='sm'\r\n                    >\r\n                      update {savedPomodoro.name}\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateNewExerciseScreen\r\n","import React from 'react'\nimport { Container } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport PomodoroDisplayScreen from './screens/PomodoroDisplayScreen'\nimport CustomPomodoroScreen from './screens/CustomPomodoroScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport UserStatsScreen from './screens/UserStatsScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport CustomTrainingScreen from './screens/CustomTrainingScreen'\nimport CreateNewExerciseScreen from './screens/CreateNewExerciseScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Container>\n        <Route path='/login' component={LoginScreen} />\n        <Route path='/register' component={RegisterScreen} />\n        <Route path='/training' component={CustomTrainingScreen} />\n        <Route path='/custom' component={CustomPomodoroScreen} />\n        <Route path='/create' component={CreateNewExerciseScreen} />\n        <Route path='/stats' component={UserStatsScreen} />\n        <Route path='/' component={PomodoroDisplayScreen} exact />\n      </Container>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css'\nimport './bootstrap.min.css'\nimport App from './App'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n// import reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorkerRegistration.register()\n"],"sourceRoot":""}