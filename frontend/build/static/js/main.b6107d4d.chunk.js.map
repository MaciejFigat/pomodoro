{"version":3,"sources":["constants/userConstants.js","constants/pomodoroConstants.js","constants/pomodoroDoneConstants.js","store.js","reducers/userReducers.js","reducers/pomodoroReducers.js","reducers/pomodoroDoneReducers.js","components/Header.js","actions/userActions.js","components/FormContainer.js","screens/PomodoroDisplayScreen.js","actions/pomodoroActions.js","actions/pomodoroDoneActions.js","screens/CustomPomodoroScreen.js","screens/LoginScreen.js","screens/UserStatsScreen.js","components/Message.js","screens/RegisterScreen.js","screens/CustomTrainingScreen.js","screens/CreateNewExerciseScreen.js","App.js","serviceWorker.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","POMODORO_SECONDS_DECREMENT","POMODORO_SECONDS_RESET","REST_SECONDS_DECREMENT","REST_SECONDS_RESET","SET_REST_ZERO","REST_SECONDS_SET","POMODORO_SECONDS_SET","POMODORO_MINUTES_INCREMENT","POMODORO_MINUTES_DECREMENT","REST_MINUTES_INCREMENT","REST_MINUTES_DECREMENT","SAVED_POMODORO_MINUTES_INCREMENT","SAVED_POMODORO_MINUTES_DECREMENT","SAVED_REST_MINUTES_INCREMENT","SAVED_REST_MINUTES_DECREMENT","POMODORO_GET_REQUEST","POMODORO_GET_SUCCESS","POMODORO_GET_FAIL","POMODORO_GET_RESET","POMODORO_UPDATE_REQUEST","POMODORO_UPDATE_SUCCESS","POMODORO_UPDATE_FAIL","POMODORO_UPDATE_RESET","POMODORO_CREATE_REQUEST","POMODORO_CREATE_SUCCESS","POMODORO_CREATE_FAIL","POMODORO_CREATE_RESET","POMODORO_DELETE_REQUEST","POMODORO_DELETE_SUCCESS","POMODORO_DELETE_FAIL","POMODORO_DONE_CREATE_REQUEST","POMODORO_DONE_CREATE_SUCCESS","POMODORO_DONE_CREATE_FAIL","POMODORO_DONE_CREATE_RESET","POMODORO_DONE_GET_REQUEST","POMODORO_DONE_GET_SUCCESS","POMODORO_DONE_GET_FAIL","POMODORO_DONE_GET_RESET","POMODORO_DONE_DELETE_REQUEST","POMODORO_DONE_DELETE_SUCCESS","POMODORO_DONE_DELETE_FAIL","reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userRegister","getPomodoroInfo","pomodoros","pomodoroCreate","success","pomodoro","counterPomodoro","pomodoroSeconds","pomodoroSecondsFromStorage","counterRest","restSeconds","restSecondsFromStorage","savedPomodoro","pomodoroInfo","savedRestSeconds","savedPomodoroSeconds","pomodoroUpdate","pomodoroDoneCreate","pomodoroDone","getPomodoroDone","pomodorosDone","pomodoroDoneDelete","pomodoroDelete","userInfoFromStorage","localStorage","getItem","JSON","parse","pomodoroInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","dispatch","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Nav","Link","className","Brand","NavDropdown","title","name","id","Item","onClick","removeItem","FormContainer","children","Row","Col","xs","md","PomodoroDisplayScreen","useState","pomodoroDuration","setPomodoroDuration","setPomodoroDone","restDuration","setRestDuration","seconds","setSeconds","setRestSeconds","isActive","setIsActive","optionsToggle","setOptionsToggle","toggle","useEffect","timer","setInterval","clearInterval","Card","Badge","font-weight-bolder","Math","trunc","Button","size","flush","getMyPomodoros","getState","a","config","headers","Authorization","token","axios","get","data","response","message","createMyPomodoro","post","updateMyPomodoro","put","_id","decreasePomodoro","resetPomodoro","pomodoroSecondsSet","restSecondsSet","decreaseRest","resetRest","setZeroRest","deletePomodoro","delete","getMyDonePomodoros","saveMyDonePomodoro","CustomPomodoroScreen","history","savedPomodoros","updatedPomodoro","createdPomodoro","updatedVisible","setUpdatedVisible","push","length","pomodoroType","secondsDone","description","console","log","LoginScreen","location","email","setEmail","password","setPassword","redirect","search","split","Form","onSubmit","e","preventDefault","setItem","stringify","login","Group","controlId","Label","Control","placeholder","value","onChange","target","UserStatsScreen","deleteDone","setDeleteDone","trainingStatsToggle","setTrainingStatsToggle","pomodoroStatsToggle","setPomodoroStatsToggle","deleteHandler","window","confirm","deletePomodoroDone","Table","stripped","bordered","hover","responsive","filter","map","createdAt","substring","Message","Alert","defaultProps","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","CustomTrainingScreen","trainingSessionVisible","setTrainingSessionVisible","createDone","setCreateDone","excerciseNumber","setExcerciseNumber","trainingSessionDone","setTrainingSessionDone","descriptionToggle","setDescriptionToggle","indexOf","CreateNewExerciseScreen","updateDone","setUpdateDone","setDescription","exerciseDuration","setExerciseDuration","exerciseNumber","setExerciseNumber","App","path","component","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b6107d4d.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n","export const POMODORO_SECONDS_DECREMENT = 'POMODORO_SECONDS_DECREMENT'\r\nexport const POMODORO_SECONDS_RESET = 'POMODORO_SECONDS_RESET'\r\n\r\nexport const REST_SECONDS_DECREMENT = 'REST_SECONDS_DECREMENT'\r\nexport const REST_SECONDS_RESET = 'REST_SECONDS_RESET'\r\nexport const SET_REST_ZERO = 'SET_REST_ZERO'\r\n\r\nexport const REST_SECONDS_SET = 'REST_SECONDS_SET'\r\nexport const POMODORO_SECONDS_SET = 'POMODORO_SECONDS_SET'\r\n\r\nexport const POMODORO_MINUTES_INCREMENT = 'POMODORO_MINUTES_INCREMENT'\r\nexport const POMODORO_MINUTES_DECREMENT = 'POMODORO_MINUTES_DECREMENT'\r\n\r\nexport const REST_MINUTES_INCREMENT = 'REST_MINUTES_INCREMENT'\r\nexport const REST_MINUTES_DECREMENT = 'REST_MINUTES_DECREMENT'\r\n\r\nexport const SAVED_POMODORO_MINUTES_INCREMENT =\r\n  'SAVED_POMODORO_MINUTES_INCREMENT'\r\nexport const SAVED_POMODORO_MINUTES_DECREMENT =\r\n  'SAVED_POMODORO_MINUTES_DECREMENT'\r\n\r\nexport const SAVED_REST_MINUTES_INCREMENT = 'SAVED_REST_MINUTES_INCREMENT'\r\nexport const SAVED_REST_MINUTES_DECREMENT = 'SAVED_REST_MINUTES_DECREMENT'\r\n\r\n// export const POMODORO_DURATION_CHANGE_REQUEST =\r\n//   'POMODORO_DURATION_CHANGE_REQUEST'\r\n// export const POMODORO_DURATION_CHANGE_SUCCESS =\r\n//   'POMODORO_DURATION_CHANGE_SUCCESS'\r\n// export const POMODORO_DURATION_CHANGE_FAIL = 'POMODORO_DURATION_CHANGE_FAIL'\r\n\r\n// export const REST_DURATION_CHANGE_REQUEST = 'REST_DURATION_CHANGE_REQUEST'\r\n// export const REST_DURATION_CHANGE_SUCCESS = 'REST_DURATION_CHANGE_SUCCESS'\r\n// export const REST_DURATION_CHANGE_FAIL = 'REST_DURATION_CHANGE_FAIL'\r\n\r\nexport const POMODORO_GET_REQUEST = 'POMODORO_GET_REQUEST'\r\nexport const POMODORO_GET_SUCCESS = 'POMODORO_GET_SUCCESS'\r\nexport const POMODORO_GET_FAIL = 'POMODORO_GET_FAIL'\r\nexport const POMODORO_GET_RESET = 'POMODORO_GET_RESET'\r\n\r\nexport const POMODORO_UPDATE_REQUEST = 'POMODORO_UPDATE_REQUEST'\r\nexport const POMODORO_UPDATE_SUCCESS = 'POMODORO_UPDATE_SUCCESS'\r\nexport const POMODORO_UPDATE_FAIL = 'POMODORO_UPDATE_FAIL'\r\nexport const POMODORO_UPDATE_RESET = 'POMODORO_UPDATE_RESET'\r\n\r\nexport const POMODORO_CREATE_REQUEST = 'POMODORO_CREATE_REQUEST'\r\nexport const POMODORO_CREATE_SUCCESS = 'POMODORO_CREATE_SUCCESS'\r\nexport const POMODORO_CREATE_FAIL = 'POMODORO_CREATE_FAIL'\r\nexport const POMODORO_CREATE_RESET = 'POMODORO_CREATE_RESET'\r\n\r\nexport const POMODORO_DURATION_CHANGE = 'POMODORO_DURATION_CHANGE'\r\nexport const POMODORO_DURATION_RESET = 'POMODORO_DURATION_RESET'\r\nexport const REST_DURATION_CHANGE = 'REST_DURATION_CHANGE'\r\nexport const REST_DURATION_RESET = 'REST_DURATION_RESET'\r\n\r\nexport const POMODORO_DELETE_REQUEST = 'POMODORO_DELETE_REQUEST'\r\nexport const POMODORO_DELETE_SUCCESS = 'POMODORO_DELETE_SUCCESS'\r\nexport const POMODORO_DELETE_FAIL = 'POMODORO_DELETE_FAIL'\r\n","export const POMODORO_DONE_CREATE_REQUEST = 'POMODORO_DONE_CREATE_REQUEST'\r\nexport const POMODORO_DONE_CREATE_SUCCESS = 'POMODORO_DONE_CREATE_SUCCESS'\r\nexport const POMODORO_DONE_CREATE_FAIL = 'POMODORO_DONE_CREATE_FAIL'\r\nexport const POMODORO_DONE_CREATE_RESET = 'POMODORO_DONE_CREATE_RESET'\r\n\r\nexport const POMODORO_DONE_GET_REQUEST = 'POMODORO_DONE_GET_REQUEST'\r\nexport const POMODORO_DONE_GET_SUCCESS = 'POMODORO_DONE_GET_SUCCESS'\r\nexport const POMODORO_DONE_GET_FAIL = 'POMODORO_DONE_GET_FAIL'\r\nexport const POMODORO_DONE_GET_RESET = 'POMODORO_DONE_GET_RESET'\r\n\r\nexport const POMODORO_DONE_DELETE_REQUEST = 'POMODORO_DONE_DELETE_REQUEST'\r\nexport const POMODORO_DONE_DELETE_SUCCESS = 'POMODORO_DONE_DELETE_SUCCESS'\r\nexport const POMODORO_DONE_DELETE_FAIL = 'POMODORO_DONE_DELETE_FAIL'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers'\r\nimport {\r\n  getPomodoroInfoReducer,\r\n  pomodoroCreateReducer,\r\n  counterPomodoroReducer,\r\n  counterRestReducer,\r\n  savedPomodoroReducer,\r\n  pomodoroUpdateReducer,\r\n  pomodoroDeleteReducer,\r\n} from './reducers/pomodoroReducers'\r\nimport {\r\n  pomodoroDoneCreateReducer,\r\n  getPomodoroDoneReducer,\r\n  pomodoroDoneDeleteReducer,\r\n} from './reducers/pomodoroDoneReducers'\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  getPomodoroInfo: getPomodoroInfoReducer,\r\n  pomodoroCreate: pomodoroCreateReducer,\r\n  counterPomodoro: counterPomodoroReducer,\r\n  counterRest: counterRestReducer,\r\n  savedPomodoro: savedPomodoroReducer,\r\n  pomodoroUpdate: pomodoroUpdateReducer,\r\n  pomodoroDoneCreate: pomodoroDoneCreateReducer,\r\n  getPomodoroDone: getPomodoroDoneReducer,\r\n  pomodoroDoneDelete: pomodoroDoneDeleteReducer,\r\n  pomodoroDelete: pomodoroDeleteReducer,\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nexport const pomodoroInfoFromStorage = localStorage.getItem('pomodoros')\r\n  ? JSON.parse(localStorage.getItem('pomodoros'))\r\n  : { savedPomodoroSeconds: 5, savedRestSeconds: 1 }\r\n\r\nexport const pomodoroSecondsFromStorage = localStorage.getItem(\r\n  'pomodoroSeconds'\r\n)\r\n  ? JSON.parse(localStorage.getItem('pomodoroSeconds'))\r\n  : pomodoroInfoFromStorage.savedPomodoroSeconds\r\n\r\nexport const restSecondsFromStorage = localStorage.getItem('restSeconds')\r\n  ? JSON.parse(localStorage.getItem('restSeconds'))\r\n  : pomodoroInfoFromStorage.savedRestSeconds\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n  getPomodoroInfo: pomodoroInfoFromStorage,\r\n  counterPomodoro: { pomodoroSeconds: pomodoroSecondsFromStorage },\r\n  counterRest: { restSeconds: restSecondsFromStorage },\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  POMODORO_GET_REQUEST,\r\n  POMODORO_GET_SUCCESS,\r\n  POMODORO_GET_FAIL,\r\n  POMODORO_GET_RESET,\r\n  POMODORO_CREATE_REQUEST,\r\n  POMODORO_CREATE_SUCCESS,\r\n  POMODORO_CREATE_FAIL,\r\n  POMODORO_CREATE_RESET,\r\n  POMODORO_UPDATE_REQUEST,\r\n  POMODORO_UPDATE_SUCCESS,\r\n  POMODORO_UPDATE_FAIL,\r\n  POMODORO_UPDATE_RESET,\r\n  POMODORO_SECONDS_DECREMENT,\r\n  POMODORO_SECONDS_RESET,\r\n  REST_SECONDS_DECREMENT,\r\n  REST_SECONDS_RESET,\r\n  SET_REST_ZERO,\r\n  POMODORO_MINUTES_INCREMENT,\r\n  POMODORO_MINUTES_DECREMENT,\r\n  REST_MINUTES_INCREMENT,\r\n  REST_MINUTES_DECREMENT,\r\n  SAVED_POMODORO_MINUTES_INCREMENT,\r\n  SAVED_POMODORO_MINUTES_DECREMENT,\r\n  SAVED_REST_MINUTES_INCREMENT,\r\n  SAVED_REST_MINUTES_DECREMENT,\r\n  REST_SECONDS_SET,\r\n  POMODORO_SECONDS_SET,\r\n  POMODORO_DELETE_REQUEST,\r\n  POMODORO_DELETE_SUCCESS,\r\n  POMODORO_DELETE_FAIL,\r\n} from '../constants/pomodoroConstants'\r\nimport { pomodoroSecondsFromStorage, restSecondsFromStorage } from '../store'\r\n\r\nexport const getPomodoroInfoReducer = (state = { pomodoros: [] }, action) => {\r\n  switch (action.type) {\r\n    case POMODORO_GET_REQUEST:\r\n      return { loading: true }\r\n    case POMODORO_GET_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        pomodoros: action.payload,\r\n      }\r\n    case POMODORO_GET_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case POMODORO_GET_RESET:\r\n      return { pomodoros: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const pomodoroCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POMODORO_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case POMODORO_CREATE_SUCCESS:\r\n      return { loading: false, success: true, pomodoro: action.payload }\r\n    case POMODORO_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case POMODORO_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const savedPomodoroReducer = (state = { pomodoroInfo: {} }, action) => {\r\n  if (\r\n    action.type === SAVED_REST_MINUTES_INCREMENT &&\r\n    state.savedRestSeconds <= 3600\r\n  ) {\r\n    return { ...state, savedRestSeconds: state.savedRestSeconds + 60 }\r\n  } else if (\r\n    action.type === SAVED_REST_MINUTES_DECREMENT &&\r\n    state.savedRestSeconds >= 60\r\n  ) {\r\n    return { ...state, savedRestSeconds: state.savedRestSeconds - 60 }\r\n  } else if (\r\n    action.type === SAVED_POMODORO_MINUTES_INCREMENT &&\r\n    state.savedPomodoroSeconds <= 3600\r\n  ) {\r\n    return { ...state, savedPomodoroSeconds: state.savedPomodoroSeconds + 60 }\r\n  } else if (\r\n    action.type === SAVED_POMODORO_MINUTES_DECREMENT &&\r\n    state.savedPomodoroSeconds >= 60\r\n  ) {\r\n    return { ...state, savedPomodoroSeconds: state.savedPomodoroSeconds - 60 }\r\n  }\r\n  return state\r\n}\r\n\r\nexport const counterRestReducer = (state = { restSeconds: {} }, action) => {\r\n  if (action.type === REST_SECONDS_SET) {\r\n    return { ...state, restSeconds: action.payload }\r\n  } else if (action.type === REST_SECONDS_DECREMENT && state.restSeconds > 0) {\r\n    return {\r\n      ...state,\r\n      restSeconds: state.restSeconds - 1,\r\n    }\r\n  } else if (action.type === REST_SECONDS_RESET) {\r\n    return (state = { restSeconds: restSecondsFromStorage })\r\n  } else if (\r\n    action.type === REST_MINUTES_INCREMENT &&\r\n    state.restSeconds <= 3600\r\n  ) {\r\n    return { ...state, restSeconds: state.restSeconds + 60 }\r\n  } else if (action.type === REST_MINUTES_DECREMENT && state.restSeconds > 60) {\r\n    return { ...state, restSeconds: state.restSeconds - 60 }\r\n  } else if (action.type === REST_MINUTES_DECREMENT && state.restSeconds < 60) {\r\n    return { ...state, restSeconds: 0 }\r\n  } else if (action.type === SET_REST_ZERO) {\r\n    return { ...state, restSeconds: 0 }\r\n  }\r\n  return state\r\n}\r\n\r\nexport const counterPomodoroReducer = (\r\n  state = { pomodoroSeconds: {} },\r\n  action\r\n) => {\r\n  if (action.type === POMODORO_SECONDS_SET) {\r\n    return { ...state, pomodoroSeconds: action.payload }\r\n  } else if (\r\n    action.type === POMODORO_SECONDS_DECREMENT &&\r\n    state.pomodoroSeconds > 0\r\n  ) {\r\n    return {\r\n      ...state,\r\n      pomodoroSeconds: state.pomodoroSeconds - 1,\r\n    }\r\n  } else if (action.type === POMODORO_SECONDS_RESET) {\r\n    return (state = { pomodoroSeconds: pomodoroSecondsFromStorage })\r\n  } else if (\r\n    action.type === POMODORO_MINUTES_INCREMENT &&\r\n    state.pomodoroSeconds <= 3600\r\n  ) {\r\n    return { ...state, pomodoroSeconds: state.pomodoroSeconds + 60 }\r\n  } else if (\r\n    action.type === POMODORO_MINUTES_DECREMENT &&\r\n    state.pomodoroSeconds > 60\r\n  ) {\r\n    return { ...state, pomodoroSeconds: state.pomodoroSeconds - 60 }\r\n  } else if (\r\n    action.type === POMODORO_MINUTES_DECREMENT &&\r\n    state.pomodoroSeconds < 60\r\n  ) {\r\n    return { ...state, pomodoroSeconds: 0 }\r\n  }\r\n\r\n  return state\r\n}\r\n\r\nexport const pomodoroUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POMODORO_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case POMODORO_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, pomodoros: action.payload }\r\n    case POMODORO_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case POMODORO_UPDATE_RESET:\r\n      return {}\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// to attempt deleting the pomodoro\r\nexport const pomodoroDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POMODORO_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case POMODORO_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case POMODORO_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  POMODORO_DONE_CREATE_REQUEST,\r\n  POMODORO_DONE_CREATE_SUCCESS,\r\n  POMODORO_DONE_CREATE_FAIL,\r\n  POMODORO_DONE_CREATE_RESET,\r\n  POMODORO_DONE_GET_REQUEST,\r\n  POMODORO_DONE_GET_SUCCESS,\r\n  POMODORO_DONE_GET_FAIL,\r\n  POMODORO_DONE_GET_RESET,\r\n  POMODORO_DONE_DELETE_REQUEST,\r\n  POMODORO_DONE_DELETE_SUCCESS,\r\n  POMODORO_DONE_DELETE_FAIL,\r\n} from '../constants/pomodoroDoneConstants'\r\n\r\n// to create a new pomodoroDone\r\n\r\nexport const pomodoroDoneCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POMODORO_DONE_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case POMODORO_DONE_CREATE_SUCCESS:\r\n      return { loading: false, success: true, pomodoroDone: action.payload }\r\n    case POMODORO_DONE_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case POMODORO_DONE_CREATE_RESET:\r\n      return {}\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// to get all a user did\r\nexport const getPomodoroDoneReducer = (\r\n  state = { pomodorosDone: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case POMODORO_DONE_GET_REQUEST:\r\n      return { loading: true }\r\n    case POMODORO_DONE_GET_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        pomodorosDone: action.payload,\r\n      }\r\n    case POMODORO_DONE_GET_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case POMODORO_DONE_GET_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// to attempt deleting the pomodoroDone\r\nexport const pomodoroDoneDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POMODORO_DONE_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case POMODORO_DONE_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case POMODORO_DONE_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='light' variant='light' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          {userInfo ? (\r\n            <LinkContainer to='/training'>\r\n              <Nav.Link>\r\n                <i className='fas fa-dumbbell'></i> Training\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <LinkContainer to='/'>\r\n              <Navbar.Brand>Pomodoro Timer</Navbar.Brand>\r\n            </LinkContainer>\r\n          )}\r\n          {userInfo ? (\r\n            <LinkContainer to='/custom'>\r\n              <Nav.Link>\r\n                <i className='fas fa-clock'></i> Pomodoro\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          {userInfo ? (\r\n            <NavDropdown title={userInfo.name} id='username'>\r\n              <LinkContainer to={'/stats'}>\r\n                <NavDropdown.Item>\r\n                  <i className='fas fa-database'></i> Stats\r\n                </NavDropdown.Item>\r\n              </LinkContainer>\r\n              <LinkContainer to='/create'>\r\n                <NavDropdown.Item>\r\n                  <i className='fas fa-cogs'></i> Settings\r\n                </NavDropdown.Item>\r\n              </LinkContainer>\r\n              <NavDropdown.Item onClick={logoutHandler}>\r\n                <i className='fas fa-sign-out-alt'></i> Logout\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          ) : (\r\n            <LinkContainer to='/login'>\r\n              <Nav.Link>\r\n                <i className='fas fa-user-ninja'></i> Log in\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios'\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n} from '../constants/userConstants'\r\nimport {\r\n  POMODORO_GET_RESET,\r\n  POMODORO_UPDATE_RESET,\r\n} from '../constants/pomodoroConstants'\r\nimport {\r\n  POMODORO_DONE_GET_RESET,\r\n  POMODORO_DONE_CREATE_RESET,\r\n} from '../constants/pomodoroDoneConstants'\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: POMODORO_GET_RESET })\r\n  dispatch({ type: POMODORO_UPDATE_RESET })\r\n  dispatch({ type: POMODORO_DONE_GET_RESET })\r\n  dispatch({ type: POMODORO_DONE_CREATE_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container className='my-3'>\r\n      <Row className='justify-content-md-center '>\r\n        <Col xs={16} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, Badge, Card } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nconst PomodoroDisplayScreen = () => {\r\n  const [pomodoroDuration, setPomodoroDuration] = useState(25)\r\n  const [pomodoroDone, setPomodoroDone] = useState(0)\r\n  const [restDuration, setRestDuration] = useState(5)\r\n  const [seconds, setSeconds] = useState(25 * 60)\r\n  const [restSeconds, setRestSeconds] = useState(5 * 60)\r\n  const [isActive, setIsActive] = useState(false)\r\n  const [optionsToggle, setOptionsToggle] = useState(false)\r\n\r\n  const toggle = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n\r\n  const reset = () => {\r\n    setSeconds(pomodoroDuration * 60)\r\n    setRestSeconds(restDuration * 60)\r\n  }\r\n\r\n  const pomodoroDurationPlus = () => {\r\n    if (pomodoroDuration < 60) {\r\n      setPomodoroDuration((pomodoroDuration) => pomodoroDuration + 1)\r\n    }\r\n  }\r\n\r\n  const pomodoroDurationMinus = () => {\r\n    if (pomodoroDuration > 0) {\r\n      setPomodoroDuration((pomodoroDuration) => pomodoroDuration - 1)\r\n    }\r\n  }\r\n\r\n  const restDurationPlus = () => {\r\n    if (restDuration < 60) {\r\n      setRestDuration((restDuration) => restDuration + 1)\r\n    }\r\n  }\r\n\r\n  const restDurationMinus = () => {\r\n    if (restDuration > 0) {\r\n      setRestDuration((restDuration) => restDuration - 1)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (isActive && restSeconds === 0 && seconds === 0) {\r\n      setSeconds(pomodoroDuration * 60)\r\n      setRestSeconds(restDuration * 60)\r\n      setPomodoroDone((pomodoroDone) => pomodoroDone + 1)\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      if (isActive && seconds > 0) {\r\n        setSeconds((seconds) => seconds - 1)\r\n      } else if (isActive && restSeconds > 0 && seconds === 0) {\r\n        setRestSeconds((restSeconds) => restSeconds - 1)\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timer)\r\n  }, [isActive, seconds, restSeconds, pomodoroDuration, restDuration])\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Row className='justify-content-center'>\r\n        <Col>\r\n          <Card className='p-3'>\r\n            <Row className='justify-content-center'>\r\n              {' '}\r\n              {isActive && seconds > 0 ? <h1>Work</h1> : <h1>Rest</h1>}\r\n            </Row>\r\n            <Row className='justify-content-center'>\r\n              {seconds === 0 ? (\r\n                <Badge variant='success'>\r\n                  <h2 font-weight-bolder>\r\n                    {' '}\r\n                    {Math.trunc(restSeconds / 60)} : {restSeconds % 60}\r\n                  </h2>\r\n                </Badge>\r\n              ) : (\r\n                <Badge variant='danger' className='justify-content-md-center'>\r\n                  <h2 font-weight-bolder>\r\n                    {Math.trunc(seconds / 60)} : {seconds % 60}\r\n                  </h2>\r\n                </Badge>\r\n              )}\r\n            </Row>\r\n            <Row className='justify-content-center'>\r\n              {isActive ? (\r\n                <Button variant='info' onClick={toggle} size='lg'>\r\n                  Pause\r\n                </Button>\r\n              ) : (\r\n                <Button variant='success' onClick={toggle} size='lg'>\r\n                  Start\r\n                </Button>\r\n              )}\r\n              {isActive && seconds === 0 && (\r\n                <Button onClick={() => setRestSeconds(0)}>Skip rest</Button>\r\n              )}\r\n            </Row>\r\n          </Card>\r\n\r\n          {optionsToggle === false && (\r\n            <Row className='justify-content-center my-3'>\r\n              <Button\r\n                variant='dark'\r\n                flush\r\n                onClick={() => {\r\n                  setOptionsToggle(true)\r\n                }}\r\n              >\r\n                <i className='fas fa-cogs'></i> Options\r\n              </Button>\r\n            </Row>\r\n          )}\r\n          {optionsToggle === true && (\r\n            <Card className='p-3'>\r\n              <Row className='justify-content-center'>\r\n                <Button\r\n                  variant='dark'\r\n                  flush\r\n                  onClick={() => {\r\n                    setOptionsToggle(false)\r\n                  }}\r\n                >\r\n                  <i className='fas fa-cogs'></i> Hide\r\n                </Button>\r\n              </Row>\r\n\r\n              <Row className='justify-content-center my-3'>\r\n                <h5>\r\n                  <i className='fas fa-user-tie'></i>{' '}\r\n                  <i className='fas fa-hourglass-start'></i>:{' '}\r\n                  <Button size='sm' onClick={pomodoroDurationMinus}>\r\n                    <b>-</b>\r\n                  </Button>{' '}\r\n                  <b>{pomodoroDuration}</b>{' '}\r\n                  <Button size='sm' onClick={pomodoroDurationPlus}>\r\n                    <b>+</b>\r\n                  </Button>{' '}\r\n                  min{' '}\r\n                </h5>\r\n              </Row>\r\n              <Row className='justify-content-center '>\r\n                <h5>\r\n                  <i className='fas fa-bed'></i>{' '}\r\n                  <i className='fas fa-hourglass-end'></i>:{' '}\r\n                  <Button size='sm' onClick={restDurationMinus}>\r\n                    <b>-</b>\r\n                  </Button>{' '}\r\n                  <b>{restDuration}</b>{' '}\r\n                  <Button size='sm' onClick={restDurationPlus}>\r\n                    <b>+</b>\r\n                  </Button>{' '}\r\n                  min{' '}\r\n                </h5>\r\n              </Row>\r\n              <Row className='justify-content-center my-3'>\r\n                <h5>\r\n                  Pomodoros done: <b>{pomodoroDone}</b>{' '}\r\n                </h5>\r\n              </Row>\r\n              <Row className='justify-content-center '>\r\n                <Button variant='warning' flush onClick={reset}>\r\n                  Reset timer\r\n                </Button>\r\n              </Row>\r\n            </Card>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PomodoroDisplayScreen\r\n","import axios from 'axios'\r\nimport {\r\n  POMODORO_GET_REQUEST,\r\n  POMODORO_GET_SUCCESS,\r\n  POMODORO_GET_FAIL,\r\n  POMODORO_CREATE_REQUEST,\r\n  POMODORO_CREATE_SUCCESS,\r\n  POMODORO_CREATE_FAIL,\r\n  POMODORO_UPDATE_REQUEST,\r\n  POMODORO_UPDATE_SUCCESS,\r\n  POMODORO_UPDATE_FAIL,\r\n  POMODORO_SECONDS_DECREMENT,\r\n  POMODORO_SECONDS_RESET,\r\n  REST_SECONDS_DECREMENT,\r\n  REST_SECONDS_RESET,\r\n  POMODORO_MINUTES_INCREMENT,\r\n  POMODORO_MINUTES_DECREMENT,\r\n  REST_MINUTES_INCREMENT,\r\n  REST_MINUTES_DECREMENT,\r\n  SET_REST_ZERO,\r\n  SAVED_POMODORO_MINUTES_INCREMENT,\r\n  SAVED_POMODORO_MINUTES_DECREMENT,\r\n  SAVED_REST_MINUTES_INCREMENT,\r\n  SAVED_REST_MINUTES_DECREMENT,\r\n  REST_SECONDS_SET,\r\n  POMODORO_SECONDS_SET,\r\n  POMODORO_DELETE_REQUEST,\r\n  POMODORO_DELETE_SUCCESS,\r\n  POMODORO_DELETE_FAIL,\r\n} from '../constants/pomodoroConstants'\r\n\r\nexport const getMyPomodoros = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_GET_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/pomodoros/mypomodoros`, config)\r\n\r\n    dispatch({\r\n      type: POMODORO_GET_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_GET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createMyPomodoro = (pomodoro) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/pomodoros`, pomodoro, config)\r\n\r\n    dispatch({\r\n      type: POMODORO_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n// action to update the pomodoro the user created by id\r\nexport const updateMyPomodoro = (pomodoro) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/pomodoros/${pomodoro._id}`,\r\n      pomodoro,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: POMODORO_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const decreasePomodoro = () => {\r\n  return {\r\n    type: POMODORO_SECONDS_DECREMENT,\r\n    payload: 1,\r\n  }\r\n}\r\nexport const resetPomodoro = () => {\r\n  return {\r\n    type: POMODORO_SECONDS_RESET,\r\n  }\r\n}\r\n// 2 actions to set the timer to my object I've gotten from the server\r\nexport const pomodoroSecondsSet = (data) => {\r\n  return {\r\n    type: POMODORO_SECONDS_SET,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const restSecondsSet = (data) => {\r\n  return {\r\n    type: REST_SECONDS_SET,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const decreaseRest = () => {\r\n  return {\r\n    type: REST_SECONDS_DECREMENT,\r\n  }\r\n}\r\nexport const resetRest = () => {\r\n  return {\r\n    type: REST_SECONDS_RESET,\r\n  }\r\n}\r\nexport const setZeroRest = () => {\r\n  return {\r\n    type: SET_REST_ZERO,\r\n  }\r\n}\r\n\r\n// pomodoro duration that is displayed in the timer + 1 min\r\n\r\nexport const increasePomodoroMinutes = () => {\r\n  return {\r\n    type: POMODORO_MINUTES_INCREMENT,\r\n  }\r\n}\r\n// pomodoro duration that is displayed in the timer - 1 min\r\n\r\nexport const decreasePomodoroMinutes = () => {\r\n  return {\r\n    type: POMODORO_MINUTES_DECREMENT,\r\n  }\r\n}\r\n\r\n// rest duration that is displayed in the timer + 1 min\r\n\r\nexport const increaseRestMinutes = () => {\r\n  return {\r\n    type: REST_MINUTES_INCREMENT,\r\n  }\r\n}\r\n\r\n// rest duration that is displayed in the timer - 1 min\r\n\r\nexport const decreaseRestMinutes = () => {\r\n  return {\r\n    type: REST_MINUTES_DECREMENT,\r\n  }\r\n}\r\n\r\n// savedRestSeconds + 1 min\r\n\r\nexport const increaseSavedRestMinutes = () => {\r\n  return {\r\n    type: SAVED_REST_MINUTES_INCREMENT,\r\n  }\r\n}\r\n\r\n// savedRestSeconds - 1 min\r\n\r\nexport const decreaseSavedRestMinutes = () => {\r\n  return {\r\n    type: SAVED_REST_MINUTES_DECREMENT,\r\n  }\r\n}\r\n\r\n// savedPomodoroSeconds + 1 min\r\n\r\nexport const increaseSavedPomodoroMinutes = () => {\r\n  return {\r\n    type: SAVED_POMODORO_MINUTES_INCREMENT,\r\n  }\r\n}\r\n// savedPomodoroSeconds - 1 min\r\n\r\nexport const decreaseSavedPomodoroMinutes = () => {\r\n  return {\r\n    type: SAVED_POMODORO_MINUTES_DECREMENT,\r\n  }\r\n}\r\n\r\nexport const deletePomodoro = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/pomodoros/${id}`, config)\r\n\r\n    dispatch({\r\n      type: POMODORO_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport {\r\n  POMODORO_DONE_CREATE_REQUEST,\r\n  POMODORO_DONE_CREATE_SUCCESS,\r\n  POMODORO_DONE_CREATE_FAIL,\r\n  POMODORO_DONE_GET_REQUEST,\r\n  POMODORO_DONE_GET_SUCCESS,\r\n  POMODORO_DONE_GET_FAIL,\r\n  POMODORO_DONE_DELETE_REQUEST,\r\n  POMODORO_DONE_DELETE_SUCCESS,\r\n  POMODORO_DONE_DELETE_FAIL,\r\n} from '../constants/pomodoroDoneConstants'\r\n\r\nexport const getMyDonePomodoros = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_DONE_GET_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      `/api/donepomodoros/mydonepomodoros`,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: POMODORO_DONE_GET_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_DONE_GET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const saveMyDonePomodoro = (pomodoroDone) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_DONE_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      `/api/donepomodoros`,\r\n      pomodoroDone,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: POMODORO_DONE_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_DONE_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deletePomodoroDone = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_DONE_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/donepomodoros/${id}`, config)\r\n\r\n    dispatch({\r\n      type: POMODORO_DONE_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_DONE_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, Badge, Card } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  decreasePomodoro,\r\n  resetPomodoro,\r\n  decreaseRest,\r\n  resetRest,\r\n  increasePomodoroMinutes,\r\n  decreasePomodoroMinutes,\r\n  increaseRestMinutes,\r\n  decreaseRestMinutes,\r\n  setZeroRest,\r\n  getMyPomodoros,\r\n  updateMyPomodoro,\r\n  createMyPomodoro,\r\n  pomodoroSecondsSet,\r\n  restSecondsSet,\r\n} from '../actions/pomodoroActions'\r\nimport { saveMyDonePomodoro } from '../actions/pomodoroDoneActions'\r\n\r\nconst CustomPomodoroScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  // const getPomodoroDone = useSelector((state) => state.getPomodoroDone)\r\n  // const { pomodorosDone } = getPomodoroDone\r\n\r\n  const counterPomodoro = useSelector((state) => state.counterPomodoro)\r\n  const { pomodoroSeconds } = counterPomodoro\r\n\r\n  const counterRest = useSelector((state) => state.counterRest)\r\n  const { restSeconds } = counterRest\r\n\r\n  const savedPomodoros = useSelector((state) => state.getPomodoroInfo)\r\n\r\n  const updatedPomodoro = useSelector((state) => state.pomodoroUpdate)\r\n  const createdPomodoro = useSelector((state) => state.pomodoroCreate)\r\n\r\n  const [pomodoroDone, setPomodoroDone] = useState(0)\r\n  const [updatedVisible, setUpdatedVisible] = useState(false)\r\n  const [isActive, setIsActive] = useState(false)\r\n  const [optionsToggle, setOptionsToggle] = useState(false)\r\n\r\n  const toggle = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n\r\n  const reset = () => {\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      userInfo &&\r\n      savedPomodoros.pomodoros.length !== 0\r\n    ) {\r\n      dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds))\r\n      dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds))\r\n    } else {\r\n      dispatch(resetPomodoro())\r\n      dispatch(resetRest())\r\n    }\r\n    console.log(updatedVisible)\r\n  }\r\n\r\n  const pomodoroDurationPlus = () => {\r\n    dispatch(increasePomodoroMinutes())\r\n  }\r\n\r\n  const pomodoroDurationMinus = () => {\r\n    dispatch(decreasePomodoroMinutes())\r\n  }\r\n\r\n  const restDurationPlus = () => {\r\n    dispatch(increaseRestMinutes())\r\n  }\r\n\r\n  const restDurationMinus = () => {\r\n    dispatch(decreaseRestMinutes())\r\n  }\r\n\r\n  const restZero = () => {\r\n    dispatch(setZeroRest())\r\n  }\r\n\r\n  const createPomodoroHandler = () => {\r\n    dispatch(\r\n      createMyPomodoro({\r\n        pomodoroSeconds: pomodoroSeconds,\r\n        restSeconds: restSeconds,\r\n      })\r\n    )\r\n  }\r\n\r\n  const savePreferencesHandler = () => {\r\n    dispatch(\r\n      updateMyPomodoro({\r\n        name: `${userInfo.name}'s Pomodoro`,\r\n        description: 'be well my friend',\r\n        _id: savedPomodoros.pomodoros[0]._id,\r\n        pomodoroSeconds: pomodoroSeconds,\r\n        restSeconds: restSeconds,\r\n      })\r\n    )\r\n    if (updatedVisible === true) {\r\n      setUpdatedVisible(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (\r\n      userInfo &&\r\n      createdPomodoro.pomodoro &&\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n    if (!savedPomodoros.pomodoros && isActive === false) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0 &&\r\n      updatedPomodoro.pomodoros &&\r\n      userInfo\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      isActive &&\r\n      restSeconds === 0 &&\r\n      pomodoroSeconds === 0\r\n    ) {\r\n      setPomodoroDone((pomodoroDone) => pomodoroDone + 1)\r\n      dispatch(\r\n        saveMyDonePomodoro({\r\n          pomodoroType: true,\r\n          secondsDone: savedPomodoros.pomodoros[0].pomodoroSeconds,\r\n        })\r\n      )\r\n      if (savedPomodoros.pomodoros) {\r\n        dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds))\r\n        dispatch(\r\n          pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds)\r\n        )\r\n      } else {\r\n        dispatch(resetPomodoro())\r\n        dispatch(resetRest())\r\n      }\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      if (isActive && pomodoroSeconds > 0) {\r\n        dispatch(decreasePomodoro())\r\n      } else if (isActive && restSeconds > 0 && pomodoroSeconds === 0) {\r\n        dispatch(decreaseRest())\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timer)\r\n  }, [\r\n    isActive,\r\n    restSeconds,\r\n    dispatch,\r\n    pomodoroSeconds,\r\n    savedPomodoros.pomodoros,\r\n    updatedPomodoro,\r\n    createdPomodoro,\r\n    userInfo,\r\n    history,\r\n  ])\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Row className='justify-content-center'>\r\n        <Col>\r\n          <Card className='p-3'>\r\n            <Row className='justify-content-center'>\r\n              {' '}\r\n              {isActive && pomodoroSeconds > 0 ? <h1>Work</h1> : <h1>Rest</h1>}\r\n            </Row>\r\n            <Row className='justify-content-center'>\r\n              {pomodoroSeconds === 0 ? (\r\n                <Badge variant='success'>\r\n                  <h2 font-weight-bolder>\r\n                    {' '}\r\n                    {Math.trunc(restSeconds / 60)} : {restSeconds % 60}\r\n                  </h2>\r\n                </Badge>\r\n              ) : (\r\n                <Badge variant='danger' className='justify-content-center'>\r\n                  <h2 font-weight-bolder>\r\n                    {Math.trunc(pomodoroSeconds / 60)} : {pomodoroSeconds % 60}\r\n                  </h2>\r\n                </Badge>\r\n              )}\r\n            </Row>\r\n            <Row className='justify-content-center'>\r\n              {isActive ? (\r\n                <Button variant='info' onClick={toggle} size='lg'>\r\n                  Pause\r\n                </Button>\r\n              ) : (\r\n                <Button variant='success' onClick={toggle} size='lg'>\r\n                  Start\r\n                </Button>\r\n              )}\r\n              {isActive && pomodoroSeconds === 0 && (\r\n                <Button onClick={restZero}>Skip rest</Button>\r\n              )}\r\n            </Row>\r\n          </Card>\r\n\r\n          {optionsToggle === false && (\r\n            <Row className='justify-content-center my-3'>\r\n              <Button\r\n                variant='dark'\r\n                flush\r\n                onClick={() => {\r\n                  setOptionsToggle(true)\r\n                }}\r\n              >\r\n                <i className='fas fa-cogs'></i> Options\r\n              </Button>\r\n            </Row>\r\n          )}\r\n          {optionsToggle === true && (\r\n            <Card className='p-3'>\r\n              <Row className='justify-content-center'>\r\n                <Button\r\n                  variant='dark'\r\n                  flush\r\n                  onClick={() => {\r\n                    setOptionsToggle(false)\r\n                  }}\r\n                >\r\n                  <i className='fas fa-cogs'></i> Hide\r\n                </Button>\r\n              </Row>\r\n              <Row className='justify-content-center my-3'>\r\n                <h5>\r\n                  <i className='fas fa-user-tie'></i>{' '}\r\n                  <i className='fas fa-hourglass-start'></i>:{' '}\r\n                  <Button size='sm' onClick={pomodoroDurationMinus}>\r\n                    <b>-</b>\r\n                  </Button>{' '}\r\n                  <b>{Math.trunc(pomodoroSeconds / 60)}</b>{' '}\r\n                  <Button size='sm' onClick={pomodoroDurationPlus}>\r\n                    <b>+</b>\r\n                  </Button>{' '}\r\n                  min\r\n                </h5>\r\n              </Row>\r\n              <Row className='justify-content-center'>\r\n                <h5>\r\n                  <i className='fas fa-bed'></i>{' '}\r\n                  <i className='fas fa-hourglass-end'></i>:{' '}\r\n                  <Button size='sm' onClick={restDurationMinus}>\r\n                    <b>-</b>\r\n                  </Button>{' '}\r\n                  <b>{Math.trunc(restSeconds / 60)}</b>{' '}\r\n                  <Button size='sm' onClick={restDurationPlus}>\r\n                    <b>+</b>\r\n                  </Button>{' '}\r\n                  min\r\n                </h5>\r\n              </Row>\r\n\r\n              <Row className='justify-content-center my-3'>\r\n                <h5>\r\n                  Pomodoros done: <b>{pomodoroDone}</b>{' '}\r\n                </h5>\r\n              </Row>\r\n              {userInfo &&\r\n                savedPomodoros.pomodoros &&\r\n                savedPomodoros.pomodoros.length === 0 &&\r\n                !createdPomodoro.pomodoro && (\r\n                  <Button variant='info' flush onClick={createPomodoroHandler}>\r\n                    Create New\r\n                  </Button>\r\n                )}\r\n              {userInfo &&\r\n                savedPomodoros.pomodoros &&\r\n                savedPomodoros.pomodoros.length !== 0 && (\r\n                  <Row className='justify-content-center '>\r\n                    <Button\r\n                      variant='info'\r\n                      flush\r\n                      onClick={savePreferencesHandler}\r\n                    >\r\n                      Save Changes\r\n                    </Button>\r\n                  </Row>\r\n                )}\r\n              {updatedPomodoro.pomodoros && updatedVisible === false && (\r\n                <Row className='justify-content-center'>\r\n                  <Button\r\n                    variant='success'\r\n                    flush\r\n                    onClick={() =>\r\n                      dispatch(\r\n                        getMyPomodoros(),\r\n                        setUpdatedVisible(!updatedVisible)\r\n                      )\r\n                    }\r\n                  >\r\n                    Set updated as current\r\n                  </Button>\r\n                </Row>\r\n              )}\r\n              <Row className='justify-content-center'>\r\n                <Button variant='warning' flush onClick={reset}>\r\n                  Reset timer\r\n                </Button>\r\n              </Row>\r\n            </Card>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default CustomPomodoroScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Row, Col } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\nimport {\r\n  restSecondsSet,\r\n  pomodoroSecondsSet,\r\n  getMyPomodoros,\r\n} from '../actions/pomodoroActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  const savedPomodoros = useSelector((state) => state.getPomodoroInfo)\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/training')\r\n    }\r\n    if (\r\n      userInfo &&\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n\r\n    if (\r\n      userInfo &&\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length !== 0\r\n    ) {\r\n      dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds))\r\n      dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds))\r\n    }\r\n  }, [userInfo, dispatch, savedPomodoros.pomodoros, history])\r\n  return (\r\n    <FormContainer>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <h1>Log in</h1>\r\n          <Form.Label>Enter your email:</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter your email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId='email'>\r\n          <p>Enter your password:</p>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter your password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <button type='submit'>Login</button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New user?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Card, Table } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getMyDonePomodoros,\r\n  deletePomodoroDone,\r\n} from '../actions/pomodoroDoneActions'\r\n\r\nconst UserStatsScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const getPomodoroDone = useSelector((state) => state.getPomodoroDone)\r\n  const { pomodorosDone } = getPomodoroDone\r\n\r\n  const pomodoroDoneDelete = useSelector((state) => state.pomodoroDoneDelete)\r\n  const { success } = pomodoroDoneDelete\r\n\r\n  const [deleteDone, setDeleteDone] = useState(false)\r\n  const [trainingStatsToggle, setTrainingStatsToggle] = useState(false)\r\n  const [pomodoroStatsToggle, setPomodoroStatsToggle] = useState(false)\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deletePomodoroDone(id))\r\n      setDeleteDone(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    if (deleteDone === true) {\r\n      dispatch(getMyDonePomodoros())\r\n      setDeleteDone(false)\r\n    }\r\n    if (userInfo && pomodorosDone && pomodorosDone.length === 0) {\r\n      dispatch(getMyDonePomodoros())\r\n    }\r\n  }, [dispatch, pomodorosDone, userInfo, success, history, deleteDone])\r\n\r\n  return (\r\n    <FormContainer>\r\n      {pomodorosDone && pomodorosDone.length === 0 && (\r\n        <Card className='p-3'>\r\n          <Button\r\n            variant='info'\r\n            flush\r\n            onClick={() => {\r\n              dispatch(getMyDonePomodoros())\r\n            }}\r\n          >\r\n            Load Data\r\n          </Button>\r\n        </Card>\r\n      )}\r\n\r\n      <Card className='p-3'>\r\n        <Row className='justify-content-center'>\r\n          <Button\r\n            variant='success'\r\n            flush\r\n            onClick={() => {\r\n              setPomodoroStatsToggle(false)\r\n              setTrainingStatsToggle(true)\r\n            }}\r\n          >\r\n            <i className='fas fa-dumbbell'></i> Your training data\r\n          </Button>\r\n          <Button\r\n            variant='info'\r\n            flush\r\n            onClick={() => {\r\n              setPomodoroStatsToggle(true)\r\n              setTrainingStatsToggle(false)\r\n            }}\r\n          >\r\n            <i className='fas fa-pizza-slice'></i> Your pomodoro data\r\n          </Button>\r\n        </Row>\r\n      </Card>\r\n\r\n      {pomodorosDone &&\r\n        pomodorosDone.length !== 0 &&\r\n        pomodoroStatsToggle === true && (\r\n          <Table stripped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>Duration of pomodoro </th>\r\n                <th>Date of creation</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pomodorosDone\r\n                .filter((pomodoroDone) => pomodoroDone.pomodoroType === true)\r\n                .map((pomodoroDone) => (\r\n                  <tr key={pomodoroDone._id}>\r\n                    <td>\r\n                      {Math.trunc(pomodoroDone.secondsDone / 60)} minutes{' '}\r\n                      {pomodoroDone.secondsDone % 60} seconds\r\n                    </td>\r\n                    <td>\r\n                      {pomodoroDone.createdAt.substring(0, 10)} at{' '}\r\n                      {pomodoroDone.createdAt.substring(11, 16)}{' '}\r\n                    </td>\r\n                    <td>\r\n                      {' '}\r\n                      <Button\r\n                        variant='danger'\r\n                        onClick={() => deleteHandler(pomodoroDone._id)}\r\n                        size='sm'\r\n                      >\r\n                        delete\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n\r\n      {pomodorosDone &&\r\n        pomodorosDone.length !== 0 &&\r\n        trainingStatsToggle === true && (\r\n          <Table stripped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>Name </th>\r\n                <th>Exercise Duration </th>\r\n                <th>Date of creation</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pomodorosDone\r\n                .filter(\r\n                  (pomodoroDone) =>\r\n                    pomodoroDone.pomodoroType === false ||\r\n                    !pomodoroDone.pomodoroType\r\n                )\r\n                .map((pomodoroDone) => (\r\n                  <tr key={pomodoroDone._id}>\r\n                    <td>{pomodoroDone.name}</td>\r\n                    <td>\r\n                      {Math.trunc(pomodoroDone.secondsDone / 60)} minutes{' '}\r\n                      {pomodoroDone.secondsDone % 60} seconds\r\n                    </td>\r\n                    <td>\r\n                      {pomodoroDone.createdAt.substring(0, 10)} at{' '}\r\n                      {pomodoroDone.createdAt.substring(11, 16)}{' '}\r\n                    </td>\r\n                    <td>\r\n                      {' '}\r\n                      <Button\r\n                        variant='danger'\r\n                        onClick={() => deleteHandler(pomodoroDone._id)}\r\n                        size='sm'\r\n                      >\r\n                        delete\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default UserStatsScreen\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { register } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst RegisterScreen = () => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password and confirm password don't match\")\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Form onSubmit={submitHandler}>\r\n        <h1>Register new user</h1>\r\n        {message && <Message variant='warning'>{message}</Message>}\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name:</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter your name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email:</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter your email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password:</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm password:</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm your password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button type='submit'>Register</Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Badge, Card, Table } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  decreasePomodoro,\r\n  resetPomodoro,\r\n  decreaseRest,\r\n  resetRest,\r\n  setZeroRest,\r\n  getMyPomodoros,\r\n  updateMyPomodoro,\r\n  pomodoroSecondsSet,\r\n  restSecondsSet,\r\n  deletePomodoro,\r\n} from '../actions/pomodoroActions'\r\nimport { saveMyDonePomodoro } from '../actions/pomodoroDoneActions'\r\n\r\nconst CustomTrainingScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  // const getPomodoroDone = useSelector((state) => state.getPomodoroDone)\r\n\r\n  const counterPomodoro = useSelector((state) => state.counterPomodoro)\r\n  const { pomodoroSeconds } = counterPomodoro\r\n\r\n  const counterRest = useSelector((state) => state.counterRest)\r\n  const { restSeconds } = counterRest\r\n\r\n  const savedPomodoros = useSelector((state) => state.getPomodoroInfo)\r\n  const { pomodoros } = savedPomodoros\r\n\r\n  const updatedPomodoro = useSelector((state) => state.pomodoroUpdate)\r\n\r\n  const createdPomodoro = useSelector((state) => state.pomodoroCreate)\r\n\r\n  const [trainingSessionVisible, setTrainingSessionVisible] = useState(false)\r\n  const [isActive, setIsActive] = useState(false)\r\n  const [deleteDone, setDeleteDone] = useState(false)\r\n  const [createDone, setCreateDone] = useState(false)\r\n  const [excerciseNumber, setExcerciseNumber] = useState(1)\r\n  const [trainingSessionDone, setTrainingSessionDone] = useState(false)\r\n  const [optionsToggle, setOptionsToggle] = useState(false)\r\n  const [descriptionToggle, setDescriptionToggle] = useState(false)\r\n\r\n  const toggle = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n\r\n  const reset = () => {\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      userInfo &&\r\n      savedPomodoros.pomodoros.length !== 0\r\n    ) {\r\n      dispatch(\r\n        restSecondsSet(savedPomodoros.pomodoros[excerciseNumber].restSeconds)\r\n      )\r\n      dispatch(\r\n        pomodoroSecondsSet(\r\n          savedPomodoros.pomodoros[excerciseNumber].pomodoroSeconds\r\n        )\r\n      )\r\n    } else {\r\n      dispatch(resetPomodoro())\r\n      dispatch(resetRest())\r\n    }\r\n    setTrainingSessionDone(false)\r\n  }\r\n\r\n  const restZero = () => {\r\n    dispatch(setZeroRest())\r\n  }\r\n\r\n  const trainingUpdateHandler = (id) => {\r\n    dispatch(\r\n      updateMyPomodoro({\r\n        _id: id,\r\n        pomodoroSeconds: pomodoroSeconds,\r\n        restSeconds: restSeconds,\r\n      })\r\n    )\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deletePomodoro(id))\r\n      setDeleteDone(true)\r\n    }\r\n  }\r\n\r\n  const nextExerciseHandler = () => {\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length > excerciseNumber + 1\r\n    ) {\r\n      setExcerciseNumber(excerciseNumber + 1)\r\n      dispatch(\r\n        restSecondsSet(savedPomodoros.pomodoros[excerciseNumber].restSeconds)\r\n      )\r\n      dispatch(\r\n        pomodoroSecondsSet(\r\n          savedPomodoros.pomodoros[excerciseNumber].pomodoroSeconds\r\n        )\r\n      )\r\n    }\r\n  }\r\n  const previousExerciseHandler = () => {\r\n    if (savedPomodoros.pomodoros && excerciseNumber > 1) {\r\n      setExcerciseNumber(excerciseNumber - 1)\r\n      dispatch(\r\n        restSecondsSet(savedPomodoros.pomodoros[excerciseNumber].restSeconds)\r\n      )\r\n      dispatch(\r\n        pomodoroSecondsSet(\r\n          savedPomodoros.pomodoros[excerciseNumber].pomodoroSeconds\r\n        )\r\n      )\r\n    }\r\n  }\r\n  const doItAgainHandler = () => {\r\n    setTrainingSessionDone(false)\r\n    setExcerciseNumber(1)\r\n    dispatch(restSecondsSet(savedPomodoros.pomodoros[1].restSeconds))\r\n    dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[1].pomodoroSeconds))\r\n    setIsActive(false)\r\n  }\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    if (deleteDone === true) {\r\n      dispatch(getMyPomodoros())\r\n      setDeleteDone(false)\r\n    }\r\n    if (createDone === true) {\r\n      dispatch(getMyPomodoros())\r\n      setCreateDone(false)\r\n    }\r\n\r\n    if (\r\n      userInfo &&\r\n      createdPomodoro.pomodoro &&\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n    if (!savedPomodoros.pomodoros && isActive === false) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0 &&\r\n      updatedPomodoro.pomodoros &&\r\n      userInfo\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      isActive &&\r\n      restSeconds === 0 &&\r\n      pomodoroSeconds === 0\r\n    ) {\r\n      dispatch(\r\n        saveMyDonePomodoro({\r\n          name: savedPomodoros.pomodoros[excerciseNumber].name,\r\n          secondsDone:\r\n            savedPomodoros.pomodoros[excerciseNumber].pomodoroSeconds,\r\n        })\r\n      )\r\n      if (savedPomodoros.pomodoros.length > excerciseNumber + 1) {\r\n        setExcerciseNumber(excerciseNumber + 1)\r\n        if (savedPomodoros.pomodoros.length !== excerciseNumber + 1) {\r\n          dispatch(\r\n            restSecondsSet(\r\n              savedPomodoros.pomodoros[excerciseNumber].restSeconds\r\n            )\r\n          )\r\n          dispatch(\r\n            pomodoroSecondsSet(\r\n              savedPomodoros.pomodoros[excerciseNumber].pomodoroSeconds\r\n            )\r\n          )\r\n        }\r\n      } else {\r\n        setTrainingSessionDone(true)\r\n      }\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      if (isActive && pomodoroSeconds > 0) {\r\n        dispatch(decreasePomodoro())\r\n      } else if (isActive && restSeconds > 0 && pomodoroSeconds === 0) {\r\n        dispatch(decreaseRest())\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timer)\r\n  }, [\r\n    isActive,\r\n    restSeconds,\r\n    dispatch,\r\n    pomodoroSeconds,\r\n    savedPomodoros.pomodoros,\r\n    updatedPomodoro,\r\n    createdPomodoro,\r\n    userInfo,\r\n    history,\r\n    deleteDone,\r\n    createDone,\r\n    excerciseNumber,\r\n  ])\r\n\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <Card className='p-3'>\r\n          {trainingSessionDone === false && (\r\n            <Row className='justify-content-center'>\r\n              {' '}\r\n              {isActive && pomodoroSeconds > 0 ? <h1>Work</h1> : <h1>Rest</h1>}\r\n            </Row>\r\n          )}\r\n          {trainingSessionDone === true && (\r\n            <>\r\n              {' '}\r\n              <Row className='justify-content-center'>\r\n                {' '}\r\n                <Badge className='p-3' variant='success'>\r\n                  <h3> Well done {userInfo.name}! </h3>\r\n                </Badge>\r\n              </Row>\r\n              <Row className='justify-content-center'>\r\n                <Button onClick={doItAgainHandler}>Do it Again</Button>\r\n              </Row>\r\n            </>\r\n          )}\r\n          <Row className='justify-content-center'>\r\n            {' '}\r\n            {trainingSessionDone === false &&\r\n              savedPomodoros.pomodoros &&\r\n              savedPomodoros.pomodoros.length !== 0 && (\r\n                <p>\r\n                  <h3\r\n                    onClick={() => {\r\n                      setDescriptionToggle(!descriptionToggle)\r\n                    }}\r\n                  >\r\n                    {savedPomodoros.pomodoros[excerciseNumber].name}{' '}\r\n                    {descriptionToggle === false && (\r\n                      <Button\r\n                        variant='light'\r\n                        flush\r\n                        onClick={() => {\r\n                          setDescriptionToggle(true)\r\n                        }}\r\n                      >\r\n                        <i className='far fa-plus-square'></i>\r\n                      </Button>\r\n                    )}\r\n                    {descriptionToggle === true && (\r\n                      <>\r\n                        <Button\r\n                          variant='light'\r\n                          flush\r\n                          onClick={() => {\r\n                            setDescriptionToggle(false)\r\n                          }}\r\n                        >\r\n                          <i className='far fa-minus-square'></i>\r\n                        </Button>\r\n                      </>\r\n                    )}\r\n                  </h3>\r\n\r\n                  {descriptionToggle === true && (\r\n                    <h4>\r\n                      {savedPomodoros.pomodoros[excerciseNumber].description}\r\n                    </h4>\r\n                  )}\r\n                </p>\r\n              )}\r\n          </Row>\r\n\r\n          <Row className='justify-content-center'>\r\n            {pomodoroSeconds === 0 ? (\r\n              <Badge variant='success'>\r\n                <h2 font-weight-bolder>\r\n                  {' '}\r\n                  {Math.trunc(restSeconds / 60)} : {restSeconds % 60}\r\n                </h2>\r\n              </Badge>\r\n            ) : (\r\n              <Badge variant='danger' className='justify-content-center'>\r\n                <h2 font-weight-bolder>\r\n                  {Math.trunc(pomodoroSeconds / 60)} : {pomodoroSeconds % 60}\r\n                </h2>\r\n              </Badge>\r\n            )}\r\n          </Row>\r\n          {trainingSessionDone === false && (\r\n            <Row className='justify-content-center'>\r\n              {trainingSessionDone === false && isActive ? (\r\n                <Button variant='info' onClick={toggle} size='lg'>\r\n                  Pause\r\n                </Button>\r\n              ) : (\r\n                <Button variant='success' onClick={toggle} size='lg'>\r\n                  Start\r\n                </Button>\r\n              )}\r\n              {trainingSessionDone === false &&\r\n                isActive &&\r\n                pomodoroSeconds === 0 && (\r\n                  <Button onClick={restZero}>Skip rest</Button>\r\n                )}\r\n            </Row>\r\n          )}\r\n        </Card>\r\n\r\n        <Card className='p-3'>\r\n          <Row className='justify-content-center'>\r\n            <Button variant='danger' flush onClick={reset}>\r\n              Reset this exercise\r\n            </Button>\r\n          </Row>\r\n          {trainingSessionDone === false && optionsToggle === false && (\r\n            <Row className='justify-content-center my-3'>\r\n              <Button variant='warning' flush onClick={previousExerciseHandler}>\r\n                <i className='fas fa-arrow-left'></i> Previous\r\n              </Button>\r\n              <Button variant='info' flush onClick={nextExerciseHandler}>\r\n                Next <i className='fas fa-arrow-right'></i>\r\n              </Button>\r\n            </Row>\r\n          )}\r\n\r\n          {optionsToggle === false && (\r\n            <Row className='justify-content-center '>\r\n              <Button\r\n                variant='dark'\r\n                flush\r\n                onClick={() => {\r\n                  setOptionsToggle(true)\r\n                }}\r\n              >\r\n                <i className='fas fa-cogs'></i> Options\r\n              </Button>\r\n            </Row>\r\n          )}\r\n          {optionsToggle === true && (\r\n            <>\r\n              <Row className='justify-content-center'>\r\n                {' '}\r\n                <Link to='/create' className='btn btn-info my-3'>\r\n                  Create new or Update\r\n                </Link>\r\n              </Row>\r\n              <Row className='justify-content-center'>\r\n                {' '}\r\n                <Button\r\n                  variant='dark'\r\n                  flush\r\n                  onClick={() => {\r\n                    setOptionsToggle(false)\r\n                  }}\r\n                >\r\n                  <i className='fas fa-times'></i> Close options\r\n                </Button>\r\n              </Row>\r\n            </>\r\n          )}\r\n        </Card>\r\n      </FormContainer>\r\n      {trainingSessionVisible === false ? (\r\n        <Row className='justify-content-center'>\r\n          <Button\r\n            variant='info'\r\n            flush\r\n            onClick={() => setTrainingSessionVisible(true)}\r\n          >\r\n            Show training session\r\n          </Button>\r\n        </Row>\r\n      ) : (\r\n        <Row className='justify-content-center'>\r\n          <Button\r\n            variant='warning'\r\n            flush\r\n            onClick={() => setTrainingSessionVisible(false)}\r\n          >\r\n            Hide training session\r\n          </Button>\r\n        </Row>\r\n      )}\r\n\r\n      {savedPomodoros &&\r\n        savedPomodoros.pomodoros &&\r\n        savedPomodoros.length !== 0 &&\r\n        trainingSessionVisible === true && (\r\n          <Table stripped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>Name </th>\r\n                <th>Excercise duration</th>\r\n                <th>Rest duration </th>\r\n                <th>Description </th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pomodoros\r\n\r\n                .filter(\r\n                  (savedPomodoro) => pomodoros.indexOf(savedPomodoro) !== 0\r\n                )\r\n                .map((savedPomodoro) => (\r\n                  <tr key={savedPomodoro._id}>\r\n                    <td>{savedPomodoro.name}</td>\r\n                    {savedPomodoro.pomodoroSeconds % 60 === 0 &&\r\n                      savedPomodoro.pomodoroSeconds > 60 && (\r\n                        <td>\r\n                          {Math.trunc(savedPomodoro.pomodoroSeconds / 60)} min{' '}\r\n                        </td>\r\n                      )}\r\n                    {savedPomodoro.pomodoroSeconds % 60 !== 0 &&\r\n                      savedPomodoro.pomodoroSeconds > 60 && (\r\n                        <td>\r\n                          {Math.trunc(savedPomodoro.pomodoroSeconds / 60)} min{' '}\r\n                          {savedPomodoro.pomodoroSeconds % 60} sec\r\n                        </td>\r\n                      )}\r\n                    {savedPomodoro.pomodoroSeconds % 60 !== 0 &&\r\n                      savedPomodoro.pomodoroSeconds < 60 && (\r\n                        <td>{savedPomodoro.pomodoroSeconds % 60} sec</td>\r\n                      )}\r\n\r\n                    {savedPomodoro.restSeconds % 60 === 0 &&\r\n                      savedPomodoro.restSeconds > 60 && (\r\n                        <td>\r\n                          {Math.trunc(savedPomodoro.restSeconds / 60)} minutes{' '}\r\n                        </td>\r\n                      )}\r\n                    {savedPomodoro.restSeconds % 60 !== 0 &&\r\n                      savedPomodoro.restSeconds > 60 && (\r\n                        <td>\r\n                          {Math.trunc(savedPomodoro.restSeconds / 60)} min{' '}\r\n                          {savedPomodoro.restSeconds % 60} sec\r\n                        </td>\r\n                      )}\r\n                    {savedPomodoro.restSeconds % 60 !== 0 &&\r\n                      savedPomodoro.restSeconds < 60 && (\r\n                        <td>{savedPomodoro.restSeconds % 60} sec</td>\r\n                      )}\r\n\r\n                    <td>{savedPomodoro.description}</td>\r\n                    <td>\r\n                      {' '}\r\n                      <Button\r\n                        variant='danger'\r\n                        onClick={() => deleteHandler(savedPomodoro._id)}\r\n                        size='sm'\r\n                      >\r\n                        delete\r\n                      </Button>\r\n                      <Button\r\n                        variant='info'\r\n                        onClick={() => trainingUpdateHandler(savedPomodoro._id)}\r\n                        size='sm'\r\n                      >\r\n                        update\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomTrainingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Card, Table } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getMyPomodoros,\r\n  updateMyPomodoro,\r\n  createMyPomodoro,\r\n  deletePomodoro,\r\n} from '../actions/pomodoroActions'\r\n\r\nconst CreateNewExerciseScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const savedPomodoros = useSelector((state) => state.getPomodoroInfo)\r\n  const { pomodoros } = savedPomodoros\r\n\r\n  const updatedPomodoro = useSelector((state) => state.pomodoroUpdate)\r\n\r\n  const pomodoroDelete = useSelector((state) => state.pomodoroDelete)\r\n\r\n  const pomodoroCreate = useSelector((state) => state.pomodoroCreate)\r\n\r\n  const [deleteDone, setDeleteDone] = useState(false)\r\n  const [createDone, setCreateDone] = useState(false)\r\n  const [updateDone, setUpdateDone] = useState(false)\r\n\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [exerciseDuration, setExerciseDuration] = useState(0)\r\n  const [exerciseNumber, setExerciseNumber] = useState(1)\r\n  const [restDuration, setRestDuration] = useState(0)\r\n\r\n  const nextExerciseHandler = () => {\r\n    if (savedPomodoros.pomodoros.length > exerciseNumber + 1) {\r\n      setExerciseNumber(exerciseNumber + 1)\r\n      setName(savedPomodoros.pomodoros[exerciseNumber].name)\r\n      setDescription(savedPomodoros.pomodoros[exerciseNumber].description)\r\n      setExerciseDuration(\r\n        savedPomodoros.pomodoros[exerciseNumber].pomodoroSeconds\r\n      )\r\n      setRestDuration(savedPomodoros.pomodoros[exerciseNumber].restSeconds)\r\n    }\r\n  }\r\n  const previousExerciseHandler = () => {\r\n    if (exerciseNumber >= 1) {\r\n      setExerciseNumber(exerciseNumber - 1)\r\n      setName(savedPomodoros.pomodoros[exerciseNumber].name)\r\n      setDescription(savedPomodoros.pomodoros[exerciseNumber].description)\r\n      setExerciseDuration(\r\n        savedPomodoros.pomodoros[exerciseNumber].pomodoroSeconds\r\n      )\r\n      setRestDuration(savedPomodoros.pomodoros[exerciseNumber].restSeconds)\r\n    }\r\n  }\r\n\r\n  const createPomodoroHandler = () => {\r\n    dispatch(\r\n      createMyPomodoro({\r\n        pomodoroSeconds: exerciseDuration,\r\n        restSeconds: restDuration,\r\n        name: name,\r\n        description: description,\r\n      })\r\n    )\r\n    setCreateDone(true)\r\n  }\r\n\r\n  const submitDescriptionHandler = (e) => {\r\n    e.preventDefault()\r\n    setDescription(e.target.value)\r\n  }\r\n  const submitNameHandler = (e) => {\r\n    e.preventDefault()\r\n    setName(e.target.value)\r\n  }\r\n  const submitExerciseDurationHandler = (e) => {\r\n    e.preventDefault()\r\n    setExerciseDuration(e.target.value)\r\n  }\r\n  const submitRestDurationHandler = (e) => {\r\n    e.preventDefault()\r\n    setRestDuration(e.target.value)\r\n  }\r\n  // functions for local state duration of exe and rest\r\n  const exerciseDurationPlusFive = () => {\r\n    setExerciseDuration((exerciseDuration) => exerciseDuration + 5)\r\n  }\r\n  const exerciseDurationPlusTen = () => {\r\n    setExerciseDuration((exerciseDuration) => exerciseDuration + 10)\r\n  }\r\n  const exerciseDurationPlusThirty = () => {\r\n    setExerciseDuration((exerciseDuration) => exerciseDuration + 30)\r\n  }\r\n  const exerciseDurationMinusFive = () => {\r\n    if (exerciseDuration > 4) {\r\n      setExerciseDuration((exerciseDuration) => exerciseDuration - 5)\r\n    }\r\n  }\r\n\r\n  const exerciseDurationMinusTen = () => {\r\n    if (exerciseDuration > 9) {\r\n      setExerciseDuration((exerciseDuration) => exerciseDuration - 10)\r\n    }\r\n  }\r\n  const exerciseDurationMinusThirty = () => {\r\n    if (exerciseDuration > 29) {\r\n      setExerciseDuration((exerciseDuration) => exerciseDuration - 30)\r\n    }\r\n  }\r\n\r\n  const restDurationPlusFive = () => {\r\n    setRestDuration((restDuration) => restDuration + 5)\r\n  }\r\n  const restDurationPlusTen = () => {\r\n    setRestDuration((restDuration) => restDuration + 10)\r\n  }\r\n  const restDurationPlusThirty = () => {\r\n    setRestDuration((restDuration) => restDuration + 30)\r\n  }\r\n  const restDurationMinusFive = () => {\r\n    if (restDuration > 4) {\r\n      setRestDuration((restDuration) => restDuration - 5)\r\n    }\r\n  }\r\n  const restDurationMinusTen = () => {\r\n    if (restDuration > 9) {\r\n      setRestDuration((restDuration) => restDuration - 10)\r\n    }\r\n  }\r\n  const restDurationMinusThirty = () => {\r\n    if (restDuration > 29) {\r\n      setRestDuration((restDuration) => restDuration - 30)\r\n    }\r\n  }\r\n  const restDurationReset = () => {\r\n    setRestDuration(0)\r\n  }\r\n  const exerciseDurationReset = () => {\r\n    setExerciseDuration(0)\r\n  }\r\n\r\n  //\r\n  const trainingUpdateHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(\r\n        updateMyPomodoro({\r\n          _id: id,\r\n          pomodoroSeconds: exerciseDuration,\r\n          restSeconds: restDuration,\r\n          name: name,\r\n          description: description,\r\n        })\r\n      )\r\n      setUpdateDone(true)\r\n    }\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deletePomodoro(id))\r\n      setDeleteDone(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0 &&\r\n      updatedPomodoro.pomodoros &&\r\n      userInfo\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n    if (deleteDone === true && pomodoroDelete.success === true) {\r\n      dispatch(getMyPomodoros())\r\n      setDeleteDone(false)\r\n    }\r\n    if (createDone === true && pomodoroCreate.success === true) {\r\n      dispatch(getMyPomodoros())\r\n      setCreateDone(false)\r\n    }\r\n    if (updateDone === true && updatedPomodoro.success === true) {\r\n      dispatch(getMyPomodoros())\r\n      setUpdateDone(false)\r\n    }\r\n  }, [\r\n    deleteDone,\r\n    createDone,\r\n    dispatch,\r\n    userInfo,\r\n    history,\r\n    savedPomodoros,\r\n    updatedPomodoro,\r\n    updateDone,\r\n    pomodoroCreate,\r\n    pomodoroDelete,\r\n  ])\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Name of an exercise'\r\n                value={name}\r\n                onChange={submitNameHandler}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Description of an exercise'\r\n                value={description}\r\n                onChange={submitDescriptionHandler}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId='exercise duration'>\r\n              <Form.Label>Excercise duration</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter excercise duration'\r\n                value={exerciseDuration}\r\n                onChange={submitExerciseDurationHandler}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Row>\r\n              <Button size='sm' onClick={exerciseDurationPlusFive}>\r\n                <b>+ 5</b>\r\n              </Button>\r\n              <Button size='sm' onClick={exerciseDurationPlusTen}>\r\n                <b>+ 10</b>\r\n              </Button>\r\n              <Button size='sm' onClick={exerciseDurationPlusThirty}>\r\n                <b>+ 30</b>\r\n              </Button>\r\n            </Row>\r\n            <Row>\r\n              <Button onClick={exerciseDurationMinusFive}>\r\n                <b>- 5</b>\r\n              </Button>\r\n              <Button size='sm' onClick={exerciseDurationMinusTen}>\r\n                <b>- 10</b>\r\n              </Button>\r\n              <Button size='sm' onClick={exerciseDurationMinusThirty}>\r\n                <b>- 30</b>\r\n              </Button>\r\n              <Button size='sm' onClick={exerciseDurationReset}>\r\n                <b>set to 0</b>\r\n              </Button>\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId='rest duration'>\r\n              <Form.Label>Rest duration</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter rest duration'\r\n                value={restDuration}\r\n                onChange={submitRestDurationHandler}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Row>\r\n              <Button size='sm' onClick={restDurationPlusFive}>\r\n                <b>+ 5</b>\r\n              </Button>\r\n              <Button size='sm' onClick={restDurationPlusTen}>\r\n                <b>+ 10</b>\r\n              </Button>\r\n              <Button size='sm' onClick={restDurationPlusThirty}>\r\n                <b>+ 30</b>\r\n              </Button>\r\n            </Row>\r\n            <Row>\r\n              <Button size='sm' onClick={restDurationMinusFive}>\r\n                <b>- 5</b>\r\n              </Button>\r\n              <Button size='sm' onClick={restDurationMinusTen}>\r\n                <b>- 10</b>\r\n              </Button>\r\n              <Button size='sm' onClick={restDurationMinusThirty}>\r\n                <b>- 30</b>\r\n              </Button>\r\n              <Button size='sm' onClick={restDurationReset}>\r\n                <b>set to 0</b>\r\n              </Button>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <FormContainer>\r\n        {savedPomodoros.pomodoros && savedPomodoros.pomodoros.length !== 0 ? (\r\n          <Card className='p-3'>\r\n            <Row className='justify-content-center'>\r\n              <Button\r\n                variant='success'\r\n                onClick={createPomodoroHandler}\r\n                size='sm'\r\n              >\r\n                <i className='fas fa-plus-square'></i> Add new excercise\r\n              </Button>\r\n            </Row>\r\n            <Row className='justify-content-center'>\r\n              <Link to='/training' className='btn btn-dark my-3'>\r\n                <i className='fas fa-undo-alt'></i> Back to training\r\n              </Link>\r\n            </Row>\r\n\r\n            <Row className='justify-content-center'>\r\n              <Button variant='warning' flush onClick={previousExerciseHandler}>\r\n                <i className='fas fa-arrow-left'></i> Previous exercise\r\n              </Button>\r\n              <Button variant='info' flush onClick={nextExerciseHandler}>\r\n                Next exercise <i className='fas fa-arrow-right'></i>\r\n              </Button>\r\n            </Row>\r\n          </Card>\r\n        ) : (\r\n          <Card className='p-3'>\r\n            <Button\r\n              variant='info'\r\n              flush\r\n              onClick={() => {\r\n                dispatch(getMyPomodoros())\r\n              }}\r\n            >\r\n              Load Data\r\n            </Button>\r\n          </Card>\r\n        )}\r\n      </FormContainer>\r\n\r\n      {savedPomodoros &&\r\n        savedPomodoros.pomodoros &&\r\n        savedPomodoros.length !== 0 && (\r\n          <Table bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>Name </th>\r\n                <th>Description </th>\r\n                <th>\r\n                  Excercise <i className='far fa-clock'></i>\r\n                </th>\r\n                <th>\r\n                  Rest <i className='far fa-clock'></i>{' '}\r\n                </th>\r\n                <th>Delete or Update</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pomodoros.map((savedPomodoro) => (\r\n                <tr\r\n                  key={savedPomodoro._id}\r\n                  onClick={() => {\r\n                    console.log(pomodoros.indexOf(savedPomodoro))\r\n                    setExerciseNumber(pomodoros.indexOf(savedPomodoro))\r\n                    setName(savedPomodoro.name)\r\n                    setDescription(savedPomodoro.description)\r\n                    setExerciseDuration(savedPomodoro.pomodoroSeconds)\r\n\r\n                    setRestDuration(savedPomodoro.restSeconds)\r\n                  }}\r\n                >\r\n                  <td>{savedPomodoro.name}</td>\r\n                  <td>{savedPomodoro.description}</td>\r\n                  {savedPomodoro.pomodoroSeconds % 60 === 0 &&\r\n                    savedPomodoro.pomodoroSeconds > 60 && (\r\n                      <td>\r\n                        {Math.trunc(savedPomodoro.pomodoroSeconds / 60)} min{' '}\r\n                      </td>\r\n                    )}\r\n                  {savedPomodoro.pomodoroSeconds % 60 !== 0 &&\r\n                    savedPomodoro.pomodoroSeconds > 60 && (\r\n                      <td>\r\n                        {Math.trunc(savedPomodoro.pomodoroSeconds / 60)} min{' '}\r\n                        {savedPomodoro.pomodoroSeconds % 60} sec\r\n                      </td>\r\n                    )}\r\n                  {savedPomodoro.pomodoroSeconds % 60 !== 0 &&\r\n                    savedPomodoro.pomodoroSeconds < 60 && (\r\n                      <td>{savedPomodoro.pomodoroSeconds % 60} sec</td>\r\n                    )}\r\n\r\n                  {savedPomodoro.restSeconds % 60 === 0 &&\r\n                    savedPomodoro.restSeconds > 60 && (\r\n                      <td>{Math.trunc(savedPomodoro.restSeconds / 60)} min </td>\r\n                    )}\r\n                  {savedPomodoro.restSeconds % 60 !== 0 &&\r\n                    savedPomodoro.restSeconds > 60 && (\r\n                      <td>\r\n                        {Math.trunc(savedPomodoro.restSeconds / 60)} min{' '}\r\n                        {savedPomodoro.restSeconds % 60} sec\r\n                      </td>\r\n                    )}\r\n                  {savedPomodoro.restSeconds % 60 !== 0 &&\r\n                    savedPomodoro.restSeconds < 60 && (\r\n                      <td>{savedPomodoro.restSeconds % 60} sec</td>\r\n                    )}\r\n\r\n                  <td>\r\n                    {' '}\r\n                    <Button\r\n                      variant='danger'\r\n                      onClick={() => deleteHandler(savedPomodoro._id)}\r\n                      size='sm'\r\n                    >\r\n                      delete\r\n                    </Button>\r\n                    <Button\r\n                      variant='info'\r\n                      onClick={() => trainingUpdateHandler(savedPomodoro._id)}\r\n                      size='sm'\r\n                    >\r\n                      update {savedPomodoro.name}\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateNewExerciseScreen\r\n","import React from 'react'\nimport { Container } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport PomodoroDisplayScreen from './screens/PomodoroDisplayScreen'\nimport CustomPomodoroScreen from './screens/CustomPomodoroScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport UserStatsScreen from './screens/UserStatsScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport CustomTrainingScreen from './screens/CustomTrainingScreen'\nimport CreateNewExerciseScreen from './screens/CreateNewExerciseScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Container>\n        <Route path='/login' component={LoginScreen} />\n        <Route path='/register' component={RegisterScreen} />\n        <Route path='/training' component={CustomTrainingScreen} />\n        <Route path='/custom' component={CustomPomodoroScreen} />\n        <Route path='/create' component={CreateNewExerciseScreen} />\n        <Route path='/stats' component={UserStatsScreen} />\n        <Route path='/' component={PomodoroDisplayScreen} exact />\n      </Container>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister()\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css'\nimport './bootstrap.min.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n// import reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n\nserviceWorker.register()\n"],"sourceRoot":""}