{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\48500\\\\Desktop\\\\MERN\\\\pomodoro\\\\frontend\\\\src\\\\screens\\\\CustomTrainingScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Container, Button, Row, Col, Badge, Card, Table } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { decreasePomodoro, resetPomodoro, decreaseRest, resetRest, increasePomodoroMinutes, decreasePomodoroMinutes, increaseRestMinutes, decreaseRestMinutes, setZeroRest, getMyPomodoros, updateMyPomodoro, createMyPomodoro, pomodoroSecondsSet, restSecondsSet, deletePomodoro } from '../actions/pomodoroActions';\nimport { saveMyDonePomodoro, getMyDonePomodoros } from '../actions/pomodoroDoneActions';\n\nconst CustomTrainingScreen = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const getPomodoroDone = useSelector(state => state.getPomodoroDone);\n  const {\n    pomodorosDone\n  } = getPomodoroDone;\n  const counterPomodoro = useSelector(state => state.counterPomodoro);\n  const {\n    pomodoroSeconds\n  } = counterPomodoro;\n  const counterRest = useSelector(state => state.counterRest);\n  const {\n    restSeconds\n  } = counterRest;\n  const savedPomodoros = useSelector(state => state.getPomodoroInfo);\n  const {\n    pomodoros\n  } = savedPomodoros;\n  const updatedPomodoro = useSelector(state => state.pomodoroUpdate);\n  const createdPomodoro = useSelector(state => state.pomodoroCreate);\n  const [pomodoroDone, setPomodoroDone] = useState(0);\n  const [updatedVisible, setUpdatedVisible] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n  const [deleteDone, setDeleteDone] = useState(false);\n  const [createDone, setCreateDone] = useState(false);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  const toggle = () => {\n    setIsActive(!isActive);\n  };\n\n  const reset = () => {\n    if (savedPomodoros.pomodoros && userInfo && savedPomodoros.pomodoros.length !== 0) {\n      dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds));\n      dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds));\n    } else {\n      dispatch(resetPomodoro());\n      dispatch(resetRest());\n    }\n\n    console.log(updatedVisible);\n  };\n\n  const pomodoroDurationPlus = () => {\n    dispatch(increasePomodoroMinutes());\n  };\n\n  const pomodoroDurationMinus = () => {\n    dispatch(decreasePomodoroMinutes());\n  };\n\n  const restDurationPlus = () => {\n    dispatch(increaseRestMinutes());\n  };\n\n  const restDurationMinus = () => {\n    dispatch(decreaseRestMinutes());\n  };\n\n  const restZero = () => {\n    dispatch(setZeroRest());\n  };\n\n  const createPomodoroHandler = () => {\n    dispatch(createMyPomodoro({\n      pomodoroSeconds: pomodoroSeconds,\n      restSeconds: restSeconds\n    }));\n    setDeleteDone(true);\n  };\n\n  const submitDescriptionHandler = e => {\n    e.preventDefault();\n    setName(e.target.value);\n  };\n\n  const submitNameHandler = e => {\n    e.preventDefault();\n    setDescription(e.target.value);\n  };\n\n  const savePreferencesHandler = () => {\n    dispatch(updateMyPomodoro({\n      _id: savedPomodoros.pomodoros[0]._id,\n      pomodoroSeconds: pomodoroSeconds,\n      restSeconds: restSeconds\n    }));\n\n    if (updatedVisible === true) {\n      setUpdatedVisible(false);\n    }\n  };\n\n  const trainingUpdateHandler = id => {\n    dispatch(updateMyPomodoro({\n      _id: id,\n      pomodoroSeconds: pomodoroSeconds,\n      restSeconds: restSeconds\n    }));\n  };\n\n  const saveDonePomodoroHandler = () => {\n    if (savedPomodoros.pomodoros && savedPomodoros.pomodoros.length !== 0) {\n      dispatch(saveMyDonePomodoro({\n        pomodoroNumber: 1,\n        secondsDone: savedPomodoros.pomodoros[0].pomodoroSeconds\n      }));\n    }\n  };\n\n  const deleteHandler = id => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deletePomodoro(id));\n      setDeleteDone(true);\n    }\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n\n    if (deleteDone === true) {\n      dispatch(getMyPomodoros());\n      setDeleteDone(false);\n    }\n\n    if (createDone === true) {\n      dispatch(getMyPomodoros());\n      setCreateDone(false);\n    }\n\n    if (userInfo && createdPomodoro.pomodoro && savedPomodoros.pomodoros && savedPomodoros.pomodoros.length === 0) {\n      dispatch(getMyPomodoros());\n    }\n\n    if (!savedPomodoros.pomodoros && isActive === false) {\n      dispatch(getMyPomodoros());\n    }\n\n    if (savedPomodoros.pomodoros && savedPomodoros.pomodoros.length === 0 && updatedPomodoro.pomodoros && userInfo) {\n      dispatch(getMyPomodoros());\n    }\n\n    if (isActive && restSeconds === 0 && pomodoroSeconds === 0) {\n      setPomodoroDone(pomodoroDone => pomodoroDone + 1);\n      dispatch(saveMyDonePomodoro({\n        pomodoroNumber: 1,\n        secondsDone: savedPomodoros.pomodoros[0].pomodoroSeconds\n      }));\n\n      if (savedPomodoros.pomodoros) {\n        dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds));\n        dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds));\n      } else {\n        dispatch(resetPomodoro());\n        dispatch(resetRest());\n      }\n    }\n\n    const timer = setInterval(() => {\n      if (isActive && pomodoroSeconds > 0) {\n        dispatch(decreasePomodoro());\n      } else if (isActive && restSeconds > 0 && pomodoroSeconds === 0) {\n        dispatch(decreaseRest());\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [isActive, restSeconds, dispatch, pomodoroSeconds, savedPomodoros.pomodoros, updatedPomodoro, createdPomodoro, userInfo, history, deleteDone]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, \"Nazwa\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"name\",\n    placeholder: \"Wpisz nazw\\u0119 produktu\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, \"Description of a new excercise \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Description of an excercise\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, ' ', isActive && pomodoroSeconds > 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 19\n    }\n  }, \"Work\") : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }\n  }, \"Rest\")), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 15\n    }\n  }, pomodoroSeconds === 0 ? /*#__PURE__*/React.createElement(Badge, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"font-weight-bolder\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  }, ' ', Math.trunc(restSeconds / 60), \" : \", restSeconds % 60)) : /*#__PURE__*/React.createElement(Badge, {\n    variant: \"danger\",\n    className: \"justify-content-md-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"font-weight-bolder\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }\n  }, Math.trunc(pomodoroSeconds / 60), \" :\", ' ', pomodoroSeconds % 60))), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }, isActive ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    onClick: toggle,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 19\n    }\n  }, \"Pause\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: toggle,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 19\n    }\n  }, \"Start\"), isActive && pomodoroSeconds === 0 && /*#__PURE__*/React.createElement(Button, {\n    onClick: restZero,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 19\n    }\n  }, \"Skip rest\"))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  }, \"Number of Pomodoros done: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 49\n    }\n  }, pomodoroDone), ' '))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 21\n    }\n  }, \"Rest period: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 36\n    }\n  }, Math.trunc(restSeconds / 60)), \" minutes\")), /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 19\n    }\n  }, ' ', /*#__PURE__*/React.createElement(Button, {\n    onClick: restDurationPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 23\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: restDurationMinus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 23\n    }\n  }, \"-\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }\n  }, \"Duration of a pomodoro:\", ' ', /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 23\n    }\n  }, Math.trunc(pomodoroSeconds / 60)), \" minutes\")), /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 19\n    }\n  }, ' ', /*#__PURE__*/React.createElement(Button, {\n    onClick: pomodoroDurationPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 23\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: pomodoroDurationMinus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 23\n    }\n  }, \"-\")))), userInfo && savedPomodoros.pomodoros && savedPomodoros.pomodoros.length === 0 && !createdPomodoro.pomodoro && /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    flush: true,\n    onClick: createPomodoroHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 21\n    }\n  }, \"Create your own pomodoro\"), userInfo && savedPomodoros.pomodoros && savedPomodoros.pomodoros.length !== 0 && /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    flush: true,\n    onClick: savePreferencesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 21\n    }\n  }, \"Save preferences\"), updatedPomodoro.pomodoros && updatedVisible === false ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    flush: true,\n    onClick: () => dispatch(getMyPomodoros(), setUpdatedVisible(!updatedVisible)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 19\n    }\n  }, \"Set updated as current\") : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Button, {\n    variant: \"warning\",\n    flush: true,\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 17\n    }\n  }, \"Reset timer\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    flush: true,\n    onClick: saveDonePomodoroHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 17\n    }\n  }, \"saveMyDonePomodoro test\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"warning\",\n    flush: true,\n    onClick: () => dispatch(getMyDonePomodoros()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 17\n    }\n  }, \"getMyDonePomodoros\")))))), savedPomodoros && savedPomodoros.pomodoros && savedPomodoros.length !== 0 && /*#__PURE__*/React.createElement(Table, {\n    stripped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    className: \"table-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 17\n    }\n  }, \"Duration of an excercise \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 17\n    }\n  }, \"Rest duration \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 17\n    }\n  }, \"Name \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 17\n    }\n  }, \"Description \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: createPomodoroHandler,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 19\n    }\n  }, \"Add a new excercise \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus-square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 41\n    }\n  }))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 13\n    }\n  }, pomodoros.map(savedPomodoro => /*#__PURE__*/React.createElement(\"tr\", {\n    key: savedPomodoro._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 17\n    }\n  }, savedPomodoro.pomodoroSeconds % 60 === 0 && savedPomodoro.pomodoroSeconds > 60 && /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 23\n    }\n  }, Math.trunc(savedPomodoro.pomodoroSeconds / 60), \" minutes\", ' '), savedPomodoro.pomodoroSeconds % 60 !== 0 && savedPomodoro.pomodoroSeconds > 60 && /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 23\n    }\n  }, Math.trunc(savedPomodoro.pomodoroSeconds / 60), \" minutes\", ' ', savedPomodoro.pomodoroSeconds % 60, \" seconds\"), savedPomodoro.pomodoroSeconds % 60 !== 0 && savedPomodoro.pomodoroSeconds < 60 && /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 23\n    }\n  }, savedPomodoro.pomodoroSeconds % 60, \" seconds\"), savedPomodoro.restSeconds % 60 === 0 && savedPomodoro.restSeconds > 60 && /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 23\n    }\n  }, Math.trunc(savedPomodoro.restSeconds / 60), \" minutes\", ' '), savedPomodoro.restSeconds % 60 !== 0 && savedPomodoro.restSeconds > 60 && /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 23\n    }\n  }, Math.trunc(savedPomodoro.restSeconds / 60), \" minutes\", ' ', savedPomodoro.restSeconds % 60, \" seconds\"), savedPomodoro.restSeconds % 60 !== 0 && savedPomodoro.restSeconds < 60 && /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 23\n    }\n  }, savedPomodoro.restSeconds % 60, \" seconds\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 19\n    }\n  }, savedPomodoro.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 19\n    }\n  }, savedPomodoro.description), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 19\n    }\n  }, ' ', /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: () => deleteHandler(savedPomodoro._id),\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 21\n    }\n  }, \"delete\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    onClick: () => trainingUpdateHandler(savedPomodoro._id),\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 21\n    }\n  }, \"update\")))))));\n};\n\nexport default CustomTrainingScreen;","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/frontend/src/screens/CustomTrainingScreen.js"],"names":["React","useState","useEffect","Form","Container","Button","Row","Col","Badge","Card","Table","FormContainer","useDispatch","useSelector","decreasePomodoro","resetPomodoro","decreaseRest","resetRest","increasePomodoroMinutes","decreasePomodoroMinutes","increaseRestMinutes","decreaseRestMinutes","setZeroRest","getMyPomodoros","updateMyPomodoro","createMyPomodoro","pomodoroSecondsSet","restSecondsSet","deletePomodoro","saveMyDonePomodoro","getMyDonePomodoros","CustomTrainingScreen","history","dispatch","userLogin","state","userInfo","getPomodoroDone","pomodorosDone","counterPomodoro","pomodoroSeconds","counterRest","restSeconds","savedPomodoros","getPomodoroInfo","pomodoros","updatedPomodoro","pomodoroUpdate","createdPomodoro","pomodoroCreate","pomodoroDone","setPomodoroDone","updatedVisible","setUpdatedVisible","isActive","setIsActive","deleteDone","setDeleteDone","createDone","setCreateDone","name","setName","description","setDescription","toggle","reset","length","console","log","pomodoroDurationPlus","pomodoroDurationMinus","restDurationPlus","restDurationMinus","restZero","createPomodoroHandler","submitDescriptionHandler","e","preventDefault","target","value","submitNameHandler","savePreferencesHandler","_id","trainingUpdateHandler","id","saveDonePomodoroHandler","pomodoroNumber","secondsDone","deleteHandler","window","confirm","push","pomodoro","timer","setInterval","clearInterval","Math","trunc","map","savedPomodoro"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Form,\r\n  Container,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Badge,\r\n  Card,\r\n  Table,\r\n} from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  decreasePomodoro,\r\n  resetPomodoro,\r\n  decreaseRest,\r\n  resetRest,\r\n  increasePomodoroMinutes,\r\n  decreasePomodoroMinutes,\r\n  increaseRestMinutes,\r\n  decreaseRestMinutes,\r\n  setZeroRest,\r\n  getMyPomodoros,\r\n  updateMyPomodoro,\r\n  createMyPomodoro,\r\n  pomodoroSecondsSet,\r\n  restSecondsSet,\r\n  deletePomodoro,\r\n} from '../actions/pomodoroActions'\r\nimport {\r\n  saveMyDonePomodoro,\r\n  getMyDonePomodoros,\r\n} from '../actions/pomodoroDoneActions'\r\n\r\nconst CustomTrainingScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const getPomodoroDone = useSelector((state) => state.getPomodoroDone)\r\n  const { pomodorosDone } = getPomodoroDone\r\n\r\n  const counterPomodoro = useSelector((state) => state.counterPomodoro)\r\n  const { pomodoroSeconds } = counterPomodoro\r\n\r\n  const counterRest = useSelector((state) => state.counterRest)\r\n  const { restSeconds } = counterRest\r\n\r\n  const savedPomodoros = useSelector((state) => state.getPomodoroInfo)\r\n  const { pomodoros } = savedPomodoros\r\n\r\n  const updatedPomodoro = useSelector((state) => state.pomodoroUpdate)\r\n\r\n  const createdPomodoro = useSelector((state) => state.pomodoroCreate)\r\n\r\n  const [pomodoroDone, setPomodoroDone] = useState(0)\r\n\r\n  const [updatedVisible, setUpdatedVisible] = useState(false)\r\n  const [isActive, setIsActive] = useState(false)\r\n  const [deleteDone, setDeleteDone] = useState(false)\r\n  const [createDone, setCreateDone] = useState(false)\r\n\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n\r\n  const toggle = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n\r\n  const reset = () => {\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      userInfo &&\r\n      savedPomodoros.pomodoros.length !== 0\r\n    ) {\r\n      dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds))\r\n      dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds))\r\n    } else {\r\n      dispatch(resetPomodoro())\r\n      dispatch(resetRest())\r\n    }\r\n    console.log(updatedVisible)\r\n  }\r\n\r\n  const pomodoroDurationPlus = () => {\r\n    dispatch(increasePomodoroMinutes())\r\n  }\r\n\r\n  const pomodoroDurationMinus = () => {\r\n    dispatch(decreasePomodoroMinutes())\r\n  }\r\n\r\n  const restDurationPlus = () => {\r\n    dispatch(increaseRestMinutes())\r\n  }\r\n\r\n  const restDurationMinus = () => {\r\n    dispatch(decreaseRestMinutes())\r\n  }\r\n\r\n  const restZero = () => {\r\n    dispatch(setZeroRest())\r\n  }\r\n\r\n  const createPomodoroHandler = () => {\r\n    dispatch(\r\n      createMyPomodoro({\r\n        pomodoroSeconds: pomodoroSeconds,\r\n        restSeconds: restSeconds,\r\n      })\r\n    )\r\n    setDeleteDone(true)\r\n  }\r\n\r\n  const submitDescriptionHandler = (e) => {\r\n    e.preventDefault()\r\n    setName(e.target.value)\r\n  }\r\n  const submitNameHandler = (e) => {\r\n    e.preventDefault()\r\n    setDescription(e.target.value)\r\n  }\r\n\r\n  const savePreferencesHandler = () => {\r\n    dispatch(\r\n      updateMyPomodoro({\r\n        _id: savedPomodoros.pomodoros[0]._id,\r\n        pomodoroSeconds: pomodoroSeconds,\r\n        restSeconds: restSeconds,\r\n      })\r\n    )\r\n    if (updatedVisible === true) {\r\n      setUpdatedVisible(false)\r\n    }\r\n  }\r\n\r\n  const trainingUpdateHandler = (id) => {\r\n    dispatch(\r\n      updateMyPomodoro({\r\n        _id: id,\r\n        pomodoroSeconds: pomodoroSeconds,\r\n        restSeconds: restSeconds,\r\n      })\r\n    )\r\n  }\r\n  const saveDonePomodoroHandler = () => {\r\n    if (savedPomodoros.pomodoros && savedPomodoros.pomodoros.length !== 0) {\r\n      dispatch(\r\n        saveMyDonePomodoro({\r\n          pomodoroNumber: 1,\r\n          secondsDone: savedPomodoros.pomodoros[0].pomodoroSeconds,\r\n        })\r\n      )\r\n    }\r\n  }\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deletePomodoro(id))\r\n      setDeleteDone(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    if (deleteDone === true) {\r\n      dispatch(getMyPomodoros())\r\n      setDeleteDone(false)\r\n    }\r\n    if (createDone === true) {\r\n      dispatch(getMyPomodoros())\r\n      setCreateDone(false)\r\n    }\r\n\r\n    if (\r\n      userInfo &&\r\n      createdPomodoro.pomodoro &&\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n    if (!savedPomodoros.pomodoros && isActive === false) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0 &&\r\n      updatedPomodoro.pomodoros &&\r\n      userInfo\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n\r\n    if (isActive && restSeconds === 0 && pomodoroSeconds === 0) {\r\n      setPomodoroDone((pomodoroDone) => pomodoroDone + 1)\r\n      dispatch(\r\n        saveMyDonePomodoro({\r\n          pomodoroNumber: 1,\r\n          secondsDone: savedPomodoros.pomodoros[0].pomodoroSeconds,\r\n        })\r\n      )\r\n      if (savedPomodoros.pomodoros) {\r\n        dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds))\r\n        dispatch(\r\n          pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds)\r\n        )\r\n      } else {\r\n        dispatch(resetPomodoro())\r\n        dispatch(resetRest())\r\n      }\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      if (isActive && pomodoroSeconds > 0) {\r\n        dispatch(decreasePomodoro())\r\n      } else if (isActive && restSeconds > 0 && pomodoroSeconds === 0) {\r\n        dispatch(decreaseRest())\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timer)\r\n  }, [\r\n    isActive,\r\n    restSeconds,\r\n    dispatch,\r\n    pomodoroSeconds,\r\n    savedPomodoros.pomodoros,\r\n    updatedPomodoro,\r\n    createdPomodoro,\r\n    userInfo,\r\n    history,\r\n    deleteDone,\r\n  ])\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Nazwa</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Wpisz nazwę produktu'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='description'>\r\n          <Form.Label>Description of a new excercise </Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Description of an excercise'\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n      </Form>\r\n      <FormContainer>\r\n        <Row className='justify-content-lg-center'>\r\n          <Col xs={12} md={8}>\r\n            <Card className='p-3'>\r\n              <Row className='justify-content-lg-center'>\r\n                {' '}\r\n                {isActive && pomodoroSeconds > 0 ? (\r\n                  <h1>Work</h1>\r\n                ) : (\r\n                  <h1>Rest</h1>\r\n                )}\r\n              </Row>\r\n              <Row className='justify-content-lg-center'>\r\n                {pomodoroSeconds === 0 ? (\r\n                  <Badge variant='success'>\r\n                    <h2 font-weight-bolder>\r\n                      {' '}\r\n                      {Math.trunc(restSeconds / 60)} : {restSeconds % 60}\r\n                    </h2>\r\n                  </Badge>\r\n                ) : (\r\n                  <Badge variant='danger' className='justify-content-md-center'>\r\n                    <h2 font-weight-bolder>\r\n                      {Math.trunc(pomodoroSeconds / 60)} :{' '}\r\n                      {pomodoroSeconds % 60}\r\n                    </h2>\r\n                  </Badge>\r\n                )}\r\n              </Row>\r\n              <Row className='justify-content-lg-center'>\r\n                {isActive ? (\r\n                  <Button variant='info' onClick={toggle} size='lg'>\r\n                    Pause\r\n                  </Button>\r\n                ) : (\r\n                  <Button variant='success' onClick={toggle} size='lg'>\r\n                    Start\r\n                  </Button>\r\n                )}\r\n                {isActive && pomodoroSeconds === 0 && (\r\n                  <Button onClick={restZero}>Skip rest</Button>\r\n                )}\r\n              </Row>\r\n            </Card>\r\n            <Col>\r\n              <Card className='p-3'>\r\n                <Row>\r\n                  <Col>\r\n                    <h3>\r\n                      Number of Pomodoros done: <b>{pomodoroDone}</b>{' '}\r\n                    </h3>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={8}>\r\n                    <h3>\r\n                      Rest period: <b>{Math.trunc(restSeconds / 60)}</b> minutes\r\n                    </h3>\r\n                  </Col>\r\n                  <Col sm={4}>\r\n                    {' '}\r\n                    <Button onClick={restDurationPlus}>\r\n                      <b>+</b>\r\n                    </Button>\r\n                    <Button onClick={restDurationMinus}>\r\n                      <b>-</b>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={8}>\r\n                    <h3>\r\n                      Duration of a pomodoro:{' '}\r\n                      <b>{Math.trunc(pomodoroSeconds / 60)}</b> minutes\r\n                    </h3>\r\n                  </Col>\r\n                  <Col sm={4}>\r\n                    {' '}\r\n                    <Button onClick={pomodoroDurationPlus}>\r\n                      <b>+</b>\r\n                    </Button>\r\n                    <Button onClick={pomodoroDurationMinus}>\r\n                      <b>-</b>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                {userInfo &&\r\n                  savedPomodoros.pomodoros &&\r\n                  savedPomodoros.pomodoros.length === 0 &&\r\n                  !createdPomodoro.pomodoro && (\r\n                    <Button\r\n                      variant='info'\r\n                      flush\r\n                      onClick={createPomodoroHandler}\r\n                    >\r\n                      Create your own pomodoro\r\n                    </Button>\r\n                  )}\r\n                {userInfo &&\r\n                  savedPomodoros.pomodoros &&\r\n                  savedPomodoros.pomodoros.length !== 0 && (\r\n                    <Button\r\n                      variant='info'\r\n                      flush\r\n                      onClick={savePreferencesHandler}\r\n                    >\r\n                      Save preferences\r\n                    </Button>\r\n                  )}\r\n                {updatedPomodoro.pomodoros && updatedVisible === false ? (\r\n                  <Button\r\n                    variant='success'\r\n                    flush\r\n                    onClick={() =>\r\n                      dispatch(\r\n                        getMyPomodoros(),\r\n                        setUpdatedVisible(!updatedVisible)\r\n                      )\r\n                    }\r\n                  >\r\n                    Set updated as current\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                <Button variant='warning' flush onClick={reset}>\r\n                  Reset timer\r\n                </Button>\r\n\r\n                <Button\r\n                  variant='danger'\r\n                  flush\r\n                  onClick={saveDonePomodoroHandler}\r\n                >\r\n                  saveMyDonePomodoro test\r\n                </Button>\r\n                <Button\r\n                  variant='warning'\r\n                  flush\r\n                  onClick={() => dispatch(getMyDonePomodoros())}\r\n                >\r\n                  getMyDonePomodoros\r\n                </Button>\r\n              </Card>\r\n            </Col>\r\n          </Col>\r\n        </Row>\r\n      </FormContainer>\r\n      {savedPomodoros &&\r\n        savedPomodoros.pomodoros &&\r\n        savedPomodoros.length !== 0 && (\r\n          <Table stripped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>Duration of an excercise </th>\r\n                <th>Rest duration </th>\r\n                <th>Name </th>\r\n                <th>Description </th>\r\n                <th>\r\n                  <Button\r\n                    variant='success'\r\n                    onClick={createPomodoroHandler}\r\n                    size='sm'\r\n                  >\r\n                    Add a new excercise <i className='fas fa-plus-square'></i>\r\n                  </Button>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pomodoros.map((savedPomodoro) => (\r\n                <tr key={savedPomodoro._id}>\r\n                  {savedPomodoro.pomodoroSeconds % 60 === 0 &&\r\n                    savedPomodoro.pomodoroSeconds > 60 && (\r\n                      <td>\r\n                        {Math.trunc(savedPomodoro.pomodoroSeconds / 60)} minutes{' '}\r\n                      </td>\r\n                    )}\r\n                  {savedPomodoro.pomodoroSeconds % 60 !== 0 &&\r\n                    savedPomodoro.pomodoroSeconds > 60 && (\r\n                      <td>\r\n                        {Math.trunc(savedPomodoro.pomodoroSeconds / 60)} minutes{' '}\r\n                        {savedPomodoro.pomodoroSeconds % 60} seconds\r\n                      </td>\r\n                    )}\r\n                  {savedPomodoro.pomodoroSeconds % 60 !== 0 &&\r\n                    savedPomodoro.pomodoroSeconds < 60 && (\r\n                      <td>{savedPomodoro.pomodoroSeconds % 60} seconds</td>\r\n                    )}\r\n\r\n                  {savedPomodoro.restSeconds % 60 === 0 &&\r\n                    savedPomodoro.restSeconds > 60 && (\r\n                      <td>\r\n                        {Math.trunc(savedPomodoro.restSeconds / 60)} minutes{' '}\r\n                      </td>\r\n                    )}\r\n                  {savedPomodoro.restSeconds % 60 !== 0 &&\r\n                    savedPomodoro.restSeconds > 60 && (\r\n                      <td>\r\n                        {Math.trunc(savedPomodoro.restSeconds / 60)} minutes{' '}\r\n                        {savedPomodoro.restSeconds % 60} seconds\r\n                      </td>\r\n                    )}\r\n                  {savedPomodoro.restSeconds % 60 !== 0 &&\r\n                    savedPomodoro.restSeconds < 60 && (\r\n                      <td>{savedPomodoro.restSeconds % 60} seconds</td>\r\n                    )}\r\n\r\n                  <td>{savedPomodoro.name}</td>\r\n                  <td>{savedPomodoro.description}</td>\r\n                  <td>\r\n                    {' '}\r\n                    <Button\r\n                      variant='danger'\r\n                      onClick={() => deleteHandler(savedPomodoro._id)}\r\n                      size='sm'\r\n                    >\r\n                      delete\r\n                    </Button>\r\n                    <Button\r\n                      variant='info'\r\n                      onClick={() => trainingUpdateHandler(savedPomodoro._id)}\r\n                      size='sm'\r\n                    >\r\n                      update\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomTrainingScreen\r\n"]},"metadata":{},"sourceType":"module"}