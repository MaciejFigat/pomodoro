{"ast":null,"code":"import { useEffect } from 'react';\n/**\n * Run's an effect on mount, and is cleaned up on unmount. Generally\n * useful for interop with non-react plugins or components\n *\n * ```ts\n *  useMountEffect(() => {\n *    const plugin = $.myPlugin(ref.current)\n *\n *    return () => {\n *      plugin.destroy()\n *    }\n *  })\n * ```\n * @param effect An effect to run on mount\n *\n *  @category effects\n */\n\nfunction useMountEffect(effect) {\n  return useEffect(effect, []);\n}\n\nexport default useMountEffect;","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/node_modules/@restart/hooks/esm/useMountEffect.js"],"names":["useEffect","useMountEffect","effect"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AAC9B,SAAOF,SAAS,CAACE,MAAD,EAAS,EAAT,CAAhB;AACD;;AAED,eAAeD,cAAf","sourcesContent":["import { useEffect } from 'react';\n/**\n * Run's an effect on mount, and is cleaned up on unmount. Generally\n * useful for interop with non-react plugins or components\n *\n * ```ts\n *  useMountEffect(() => {\n *    const plugin = $.myPlugin(ref.current)\n *\n *    return () => {\n *      plugin.destroy()\n *    }\n *  })\n * ```\n * @param effect An effect to run on mount\n *\n *  @category effects\n */\n\nfunction useMountEffect(effect) {\n  return useEffect(effect, []);\n}\n\nexport default useMountEffect;"]},"metadata":{},"sourceType":"module"}