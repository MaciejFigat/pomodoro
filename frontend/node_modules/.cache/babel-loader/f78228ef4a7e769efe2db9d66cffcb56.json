{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\48500\\\\Desktop\\\\MERN\\\\pomodoro\\\\frontend\\\\src\\\\screens\\\\UserStatsScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Button, Row, Col, Badge, Card, Table } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMyDonePomodoros, deletePomodoroDone } from '../actions/pomodoroDoneActions';\n\nconst UserStatsScreen = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const getPomodoroDone = useSelector(state => state.getPomodoroDone);\n  const {\n    pomodorosDone\n  } = getPomodoroDone;\n  const pomodoroDoneDelete = useSelector(state => state.pomodoroDoneDelete);\n  const {\n    success\n  } = pomodoroDoneDelete;\n  const [deleteDone, setDeleteDone] = useState(false);\n\n  const deleteHandler = id => {\n    // if (window.confirm('Are you sure?')) {\n    dispatch(deletePomodoroDone(id));\n    setDeleteDone(true); // }\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n\n    if (deleteDone === true) {\n      dispatch(getMyDonePomodoros());\n      setDeleteDone(false);\n    }\n\n    if (userInfo && pomodorosDone && pomodorosDone.length === 0) {\n      dispatch(getMyDonePomodoros());\n    }\n\n    if (pomodorosDone && pomodorosDone.length !== 0) {\n      let pomodorosOnly = pomodorosDone.filter(pomodoroDone => pomodoroDone.pomodoroType === true);\n    }\n  }, [dispatch, pomodorosDone, userInfo, success, history]);\n  return /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, pomodorosDone && pomodorosDone.length !== 0 && /*#__PURE__*/React.createElement(Table, {\n    stripped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    className: \"table-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"Name \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Duration of pomodoro \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Date of creation\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, pomodorosOnly.map(pomodoroDone => /*#__PURE__*/React.createElement(\"tr\", {\n    key: pomodoroDone._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, pomodoroDone.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, Math.trunc(pomodoroDone.secondsDone / 60), \" minutes\", ' ', pomodoroDone.secondsDone % 60, \" seconds\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, pomodoroDone.createdAt.substring(0, 10), \" at\", ' ', pomodoroDone.createdAt.substring(11, 16), ' '), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, ' ', /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: () => deleteHandler(pomodoroDone._id),\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, \"delete\")))))));\n};\n\nexport default UserStatsScreen;","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/frontend/src/screens/UserStatsScreen.js"],"names":["React","useState","useEffect","Container","Button","Row","Col","Badge","Card","Table","FormContainer","useDispatch","useSelector","getMyDonePomodoros","deletePomodoroDone","UserStatsScreen","history","dispatch","userLogin","state","userInfo","getPomodoroDone","pomodorosDone","pomodoroDoneDelete","success","deleteDone","setDeleteDone","deleteHandler","id","push","length","pomodorosOnly","filter","pomodoroDone","pomodoroType","map","_id","name","Math","trunc","secondsDone","createdAt","substring"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Container,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Badge,\r\n  Card,\r\n  Table,\r\n} from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getMyDonePomodoros,\r\n  deletePomodoroDone,\r\n} from '../actions/pomodoroDoneActions'\r\n\r\nconst UserStatsScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const getPomodoroDone = useSelector((state) => state.getPomodoroDone)\r\n  const { pomodorosDone } = getPomodoroDone\r\n\r\n  const pomodoroDoneDelete = useSelector((state) => state.pomodoroDoneDelete)\r\n  const { success } = pomodoroDoneDelete\r\n\r\n  const [deleteDone, setDeleteDone] = useState(false)\r\n\r\n  const deleteHandler = (id) => {\r\n    // if (window.confirm('Are you sure?')) {\r\n    dispatch(deletePomodoroDone(id))\r\n    setDeleteDone(true)\r\n    // }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    if (deleteDone === true) {\r\n      dispatch(getMyDonePomodoros())\r\n      setDeleteDone(false)\r\n    }\r\n    if (userInfo && pomodorosDone && pomodorosDone.length === 0) {\r\n      dispatch(getMyDonePomodoros())\r\n    }\r\n    if (pomodorosDone && pomodorosDone.length !== 0) {\r\n      let pomodorosOnly = pomodorosDone.filter(\r\n        (pomodoroDone) => pomodoroDone.pomodoroType === true\r\n      )\r\n    }\r\n  }, [dispatch, pomodorosDone, userInfo, success, history])\r\n\r\n  return (\r\n    <FormContainer>\r\n      {pomodorosDone && pomodorosDone.length !== 0 && (\r\n        <Table stripped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>Name </th>\r\n              <th>Duration of pomodoro </th>\r\n              <th>Date of creation</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {pomodorosOnly.map((pomodoroDone) => (\r\n              <tr key={pomodoroDone._id}>\r\n                <td>{pomodoroDone.name}</td>\r\n                <td>\r\n                  {Math.trunc(pomodoroDone.secondsDone / 60)} minutes{' '}\r\n                  {pomodoroDone.secondsDone % 60} seconds\r\n                </td>\r\n                <td>\r\n                  {pomodoroDone.createdAt.substring(0, 10)} at{' '}\r\n                  {pomodoroDone.createdAt.substring(11, 16)}{' '}\r\n                </td>\r\n                <td>\r\n                  {' '}\r\n                  <Button\r\n                    variant='danger'\r\n                    onClick={() => deleteHandler(pomodoroDone._id)}\r\n                    size='sm'\r\n                  >\r\n                    delete\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default UserStatsScreen\r\n"]},"metadata":{},"sourceType":"module"}