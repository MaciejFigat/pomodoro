{"ast":null,"code":"import axios from 'axios';\nimport { POMODORO_DONE_CREATE_REQUEST, POMODORO_DONE_CREATE_SUCCESS, POMODORO_DONE_CREATE_FAIL, POMODORO_DONE_GET_REQUEST, POMODORO_DONE_GET_SUCCESS, POMODORO_DONE_GET_FAIL, POMODORO_DONE_DELETE_REQUEST, POMODORO_DONE_DELETE_SUCCESS, POMODORO_DONE_DELETE_FAIL } from '../constants/pomodoroDoneConstants';\nexport const getMyDonePomodoros = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POMODORO_DONE_GET_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/donepomodoros/mydonepomodoros`, config);\n    dispatch({\n      type: POMODORO_DONE_GET_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POMODORO_DONE_GET_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const saveMyDonePomodoro = pomodoroDone => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POMODORO_DONE_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/donepomodoros`, pomodoroDone, config);\n    dispatch({\n      type: POMODORO_DONE_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POMODORO_DONE_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deletePomodoroDone = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POMODORO_DONE_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/donepomodoros/${id}`, config);\n    dispatch({\n      type: POMODORO_DONE_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: POMODORO_DONE_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // POMODORO_DELETE_REQUEST,\n//   POMODORO_DELETE_SUCCESS,\n//   POMODORO_DELETE_FAIL,","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/frontend/src/actions/pomodoroDoneActions.js"],"names":["axios","POMODORO_DONE_CREATE_REQUEST","POMODORO_DONE_CREATE_SUCCESS","POMODORO_DONE_CREATE_FAIL","POMODORO_DONE_GET_REQUEST","POMODORO_DONE_GET_SUCCESS","POMODORO_DONE_GET_FAIL","POMODORO_DONE_DELETE_REQUEST","POMODORO_DONE_DELETE_SUCCESS","POMODORO_DONE_DELETE_FAIL","getMyDonePomodoros","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","response","message","saveMyDonePomodoro","pomodoroDone","post","deletePomodoroDone","id","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {\r\n  POMODORO_DONE_CREATE_REQUEST,\r\n  POMODORO_DONE_CREATE_SUCCESS,\r\n  POMODORO_DONE_CREATE_FAIL,\r\n  POMODORO_DONE_GET_REQUEST,\r\n  POMODORO_DONE_GET_SUCCESS,\r\n  POMODORO_DONE_GET_FAIL,\r\n  POMODORO_DONE_DELETE_REQUEST,\r\n  POMODORO_DONE_DELETE_SUCCESS,\r\n  POMODORO_DONE_DELETE_FAIL,\r\n} from '../constants/pomodoroDoneConstants'\r\n\r\nexport const getMyDonePomodoros = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_DONE_GET_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      `/api/donepomodoros/mydonepomodoros`,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: POMODORO_DONE_GET_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_DONE_GET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const saveMyDonePomodoro = (pomodoroDone) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_DONE_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      `/api/donepomodoros`,\r\n      pomodoroDone,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: POMODORO_DONE_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_DONE_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deletePomodoroDone = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_DONE_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/donepomodoros/${id}`, config)\r\n\r\n    dispatch({\r\n      type: POMODORO_DONE_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_DONE_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n// POMODORO_DELETE_REQUEST,\r\n//   POMODORO_DELETE_SUCCESS,\r\n//   POMODORO_DELETE_FAIL,\r\n"]},"metadata":{},"sourceType":"module"}