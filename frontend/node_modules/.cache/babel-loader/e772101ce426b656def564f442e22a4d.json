{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\48500\\\\Desktop\\\\MERN\\\\pomodoro\\\\frontend\\\\src\\\\screens\\\\PomodoroDisplayScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Button, Row, Col, Badge } from 'react-bootstrap';\n\nconst PomodoroDisplayScreen = () => {\n  const [pomodoroDuration, setPomodoroDuration] = useState(25);\n  const [pomodoroDone, setPomodoroDone] = useState(0);\n  const [restDuration, setRestDuration] = useState(5);\n  const [seconds, setSeconds] = useState(25 * 60);\n  const [restSeconds, setRestSeconds] = useState(5 * 60);\n  const [isActive, setIsActive] = useState(false);\n\n  const toggle = () => {\n    setIsActive(!isActive);\n  };\n\n  const reset = () => {\n    setSeconds(pomodoroDuration * 60);\n    setRestSeconds(restDuration * 60);\n  };\n\n  const pomodoroDurationPlus = () => {\n    if (pomodoroDuration < 60) {\n      setPomodoroDuration(pomodoroDuration => pomodoroDuration + 1);\n    }\n  };\n\n  const pomodoroDurationMinus = () => {\n    if (pomodoroDuration > 0) {\n      setPomodoroDuration(pomodoroDuration => pomodoroDuration - 1);\n    }\n  };\n\n  const restDurationPlus = () => {\n    if (restDuration < 60) {\n      setRestDuration(restDuration => restDuration + 1);\n    }\n  };\n\n  const restDurationMinus = () => {\n    if (restDuration > 0) {\n      setRestDuration(restDuration => restDuration - 1);\n    }\n  };\n\n  useEffect(() => {\n    if (isActive && restSeconds === 0 && seconds === 0) {\n      setSeconds(pomodoroDuration * 60);\n      setRestSeconds(restDuration * 60);\n      setPomodoroDone(pomodoroDone => pomodoroDone + 1);\n    }\n\n    const timer = setInterval(() => {\n      if (isActive && seconds > 0) {\n        setSeconds(seconds => seconds - 1);\n      } else if (isActive && restSeconds > 0 && seconds === 0) {\n        setRestSeconds(restSeconds => restSeconds - 1);\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [isActive, seconds, restSeconds, pomodoroDuration, restDuration]);\n  const style = {\n    display: 'grid',\n    placeItems: 'center'\n  };\n  return /*#__PURE__*/React.createElement(Container, {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-md-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, isActive && seconds > 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 38\n    }\n  }, \"Work\") : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 54\n    }\n  }, \"Rest\"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Number of Pomodoros done: \", pomodoroDone, \" \")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, seconds === 0 ? /*#__PURE__*/React.createElement(Badge, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, Math.trunc(restSeconds / 60), \" : \", restSeconds % 60)) : /*#__PURE__*/React.createElement(Badge, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, Math.trunc(seconds / 60), \" : \", seconds % 60))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, isActive ? 'Pause' : 'Start'), isActive && seconds === 0 && /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setRestSeconds(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"Skip rest\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSeconds(seconds - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"---testing work\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setRestSeconds(restSeconds - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"--- testing rest\"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Rest: \", restDuration), /*#__PURE__*/React.createElement(Button, {\n    onClick: restDurationMinus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Decrease rest period\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: restDurationPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Increase rest period\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Duration of a pomodoro: \", pomodoroDuration), ' ', /*#__PURE__*/React.createElement(Button, {\n    onClick: pomodoroDurationMinus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Decrease pomodoro\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: pomodoroDurationPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Increase pomodoro\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Reset timer\"))));\n};\n\nexport default PomodoroDisplayScreen;","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/frontend/src/screens/PomodoroDisplayScreen.js"],"names":["React","useState","useEffect","Container","Button","Row","Col","Badge","PomodoroDisplayScreen","pomodoroDuration","setPomodoroDuration","pomodoroDone","setPomodoroDone","restDuration","setRestDuration","seconds","setSeconds","restSeconds","setRestSeconds","isActive","setIsActive","toggle","reset","pomodoroDurationPlus","pomodoroDurationMinus","restDurationPlus","restDurationMinus","timer","setInterval","clearInterval","style","display","placeItems","Math","trunc"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,KAAtC,QAAmD,iBAAnD;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AAClC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAK,EAAN,CAAtC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,IAAI,EAAL,CAA9C;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMoB,MAAM,GAAG,MAAM;AACnBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIA,QAAMG,KAAK,GAAG,MAAM;AAClBN,IAAAA,UAAU,CAACP,gBAAgB,GAAG,EAApB,CAAV;AACAS,IAAAA,cAAc,CAACL,YAAY,GAAG,EAAhB,CAAd;AACD,GAHD;;AAKA,QAAMU,oBAAoB,GAAG,MAAM;AACjC,QAAId,gBAAgB,GAAG,EAAvB,EAA2B;AACzBC,MAAAA,mBAAmB,CAAED,gBAAD,IAAsBA,gBAAgB,GAAG,CAA1C,CAAnB;AACD;AACF,GAJD;;AAMA,QAAMe,qBAAqB,GAAG,MAAM;AAClC,QAAIf,gBAAgB,GAAG,CAAvB,EAA0B;AACxBC,MAAAA,mBAAmB,CAAED,gBAAD,IAAsBA,gBAAgB,GAAG,CAA1C,CAAnB;AACD;AACF,GAJD;;AAMA,QAAMgB,gBAAgB,GAAG,MAAM;AAC7B,QAAIZ,YAAY,GAAG,EAAnB,EAAuB;AACrBC,MAAAA,eAAe,CAAED,YAAD,IAAkBA,YAAY,GAAG,CAAlC,CAAf;AACD;AACF,GAJD;;AAMA,QAAMa,iBAAiB,GAAG,MAAM;AAC9B,QAAIb,YAAY,GAAG,CAAnB,EAAsB;AACpBC,MAAAA,eAAe,CAAED,YAAD,IAAkBA,YAAY,GAAG,CAAlC,CAAf;AACD;AACF,GAJD;;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,QAAQ,IAAIF,WAAW,KAAK,CAA5B,IAAiCF,OAAO,KAAK,CAAjD,EAAoD;AAClDC,MAAAA,UAAU,CAACP,gBAAgB,GAAG,EAApB,CAAV;AACAS,MAAAA,cAAc,CAACL,YAAY,GAAG,EAAhB,CAAd;AACAD,MAAAA,eAAe,CAAED,YAAD,IAAkBA,YAAY,GAAG,CAAlC,CAAf;AACD;;AAED,UAAMgB,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9B,UAAIT,QAAQ,IAAIJ,OAAO,GAAG,CAA1B,EAA6B;AAC3BC,QAAAA,UAAU,CAAED,OAAD,IAAaA,OAAO,GAAG,CAAxB,CAAV;AACD,OAFD,MAEO,IAAII,QAAQ,IAAIF,WAAW,GAAG,CAA1B,IAA+BF,OAAO,KAAK,CAA/C,EAAkD;AACvDG,QAAAA,cAAc,CAAED,WAAD,IAAiBA,WAAW,GAAG,CAAhC,CAAd;AACD;AACF,KANwB,EAMtB,IANsB,CAAzB;AAQA,WAAO,MAAMY,aAAa,CAACF,KAAD,CAA1B;AACD,GAhBQ,EAgBN,CAACR,QAAD,EAAWJ,OAAX,EAAoBE,WAApB,EAAiCR,gBAAjC,EAAmDI,YAAnD,CAhBM,CAAT;AAkBA,QAAMiB,KAAK,GAAG;AACZC,IAAAA,OAAO,EAAE,MADG;AAEZC,IAAAA,UAAU,EAAE;AAFA,GAAd;AAKA,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,QAAQ,IAAIJ,OAAO,GAAG,CAAtB,gBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA1B,gBAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD7C,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA+BJ,YAA/B,MADF,CAFF,eAKE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,OAAO,KAAK,CAAZ,gBACC,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGkB,IAAI,CAACC,KAAL,CAAWjB,WAAW,GAAG,EAAzB,CADH,SACoCA,WAAW,GAAG,EADlD,CADF,CADD,gBAOC,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGgB,IAAI,CAACC,KAAL,CAAWnB,OAAO,GAAG,EAArB,CADH,SACgCA,OAAO,GAAG,EAD1C,CADF,CARJ,CALF,eAoBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEM,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BF,QAAQ,GAAG,OAAH,GAAa,OAA/C,CADF,EAEGA,QAAQ,IAAIJ,OAAO,KAAK,CAAxB,iBACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMG,cAAc,CAAC,CAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CApBF,eA0BE;AAAQ,IAAA,OAAO,EAAE,MAAMF,UAAU,CAACD,OAAO,GAAG,CAAX,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA1BF,eA6BE;AAAQ,IAAA,OAAO,EAAE,MAAMG,cAAc,CAACD,WAAW,GAAG,CAAf,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA7BF,eAiCE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWJ,YAAX,CADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEa,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHF,CAjCF,eAsCE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA6BhB,gBAA7B,CADF,EACsD,GADtD,eAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEe,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,CAtCF,eA2CE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA3CF,CADF,CADF,CADF;AAmDD,CAlHD;;AAoHA,eAAed,qBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Container, Button, Row, Col, Badge } from 'react-bootstrap'\r\n\r\nconst PomodoroDisplayScreen = () => {\r\n  const [pomodoroDuration, setPomodoroDuration] = useState(25)\r\n  const [pomodoroDone, setPomodoroDone] = useState(0)\r\n  const [restDuration, setRestDuration] = useState(5)\r\n  const [seconds, setSeconds] = useState(25 * 60)\r\n  const [restSeconds, setRestSeconds] = useState(5 * 60)\r\n  const [isActive, setIsActive] = useState(false)\r\n\r\n  const toggle = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n\r\n  const reset = () => {\r\n    setSeconds(pomodoroDuration * 60)\r\n    setRestSeconds(restDuration * 60)\r\n  }\r\n\r\n  const pomodoroDurationPlus = () => {\r\n    if (pomodoroDuration < 60) {\r\n      setPomodoroDuration((pomodoroDuration) => pomodoroDuration + 1)\r\n    }\r\n  }\r\n\r\n  const pomodoroDurationMinus = () => {\r\n    if (pomodoroDuration > 0) {\r\n      setPomodoroDuration((pomodoroDuration) => pomodoroDuration - 1)\r\n    }\r\n  }\r\n\r\n  const restDurationPlus = () => {\r\n    if (restDuration < 60) {\r\n      setRestDuration((restDuration) => restDuration + 1)\r\n    }\r\n  }\r\n\r\n  const restDurationMinus = () => {\r\n    if (restDuration > 0) {\r\n      setRestDuration((restDuration) => restDuration - 1)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (isActive && restSeconds === 0 && seconds === 0) {\r\n      setSeconds(pomodoroDuration * 60)\r\n      setRestSeconds(restDuration * 60)\r\n      setPomodoroDone((pomodoroDone) => pomodoroDone + 1)\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      if (isActive && seconds > 0) {\r\n        setSeconds((seconds) => seconds - 1)\r\n      } else if (isActive && restSeconds > 0 && seconds === 0) {\r\n        setRestSeconds((restSeconds) => restSeconds - 1)\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timer)\r\n  }, [isActive, seconds, restSeconds, pomodoroDuration, restDuration])\r\n\r\n  const style = {\r\n    display: 'grid',\r\n    placeItems: 'center',\r\n  }\r\n\r\n  return (\r\n    <Container style={style}>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={8}>\r\n          {isActive && seconds > 0 ? <h1>Work</h1> : <h1>Rest</h1>}\r\n          <Row>\r\n            <h2>Number of Pomodoros done: {pomodoroDone} </h2>\r\n          </Row>\r\n          <Row>\r\n            {seconds === 0 ? (\r\n              <Badge variant='success'>\r\n                <h2>\r\n                  {Math.trunc(restSeconds / 60)} : {restSeconds % 60}\r\n                </h2>\r\n              </Badge>\r\n            ) : (\r\n              <Badge variant='danger'>\r\n                <h2>\r\n                  {Math.trunc(seconds / 60)} : {seconds % 60}\r\n                </h2>\r\n              </Badge>\r\n            )}\r\n          </Row>\r\n          <Row>\r\n            <Button onClick={toggle}>{isActive ? 'Pause' : 'Start'}</Button>\r\n            {isActive && seconds === 0 && (\r\n              <Button onClick={() => setRestSeconds(0)}>Skip rest</Button>\r\n            )}\r\n          </Row>\r\n          <button onClick={() => setSeconds(seconds - 1)}>\r\n            ---testing work\r\n          </button>\r\n          <button onClick={() => setRestSeconds(restSeconds - 1)}>\r\n            --- testing rest\r\n          </button>\r\n\r\n          <Row>\r\n            <h2>Rest: {restDuration}</h2>\r\n            <Button onClick={restDurationMinus}>Decrease rest period</Button>\r\n            <Button onClick={restDurationPlus}>Increase rest period</Button>\r\n          </Row>\r\n          <Row>\r\n            <h2>Duration of a pomodoro: {pomodoroDuration}</h2>{' '}\r\n            <Button onClick={pomodoroDurationMinus}>Decrease pomodoro</Button>\r\n            <Button onClick={pomodoroDurationPlus}>Increase pomodoro</Button>\r\n          </Row>\r\n          <Button onClick={reset}>Reset timer</Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default PomodoroDisplayScreen\r\n"]},"metadata":{},"sourceType":"module"}