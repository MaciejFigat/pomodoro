{"ast":null,"code":"import axios from 'axios';\nimport { POMODORO_GET_REQUEST, POMODORO_GET_SUCCESS, POMODORO_GET_FAIL, POMODORO_CREATE_REQUEST, POMODORO_CREATE_SUCCESS, POMODORO_CREATE_FAIL, POMODORO_CREATE_RESET, POMODORO_SECONDS_UPDATE, REST_SECONDS_UPDATE, POMODORO_SECONDS_DECREMENT, POMODORO_SECONDS_RESET, REST_SECONDS_DECREMENT, REST_SECONDS_RESET, POMODORO_MINUTES_INCREMENT, POMODORO_MINUTES_DECREMENT, REST_MINUTES_INCREMENT, REST_MINUTES_DECREMENT, SET_REST_ZERO, SAVED_POMODORO_MINUTES_INCREMENT, SAVED_POMODORO_MINUTES_DECREMENT, SAVED_REST_MINUTES_INCREMENT, SAVED_REST_MINUTES_DECREMENT } from '../constants/pomodoroConstants'; // export const getPomodoro = () => async (dispatch) => {\n//   try {\n//     dispatch({ type: POMODORO_GET_REQUEST })\n//     // const { data } = await axios.get(`/api/pomodoros`)\n//     dispatch({\n//       type: POMODORO_GET_SUCCESS,\n//       payload: data,\n//     })\n//   } catch (error) {\n//     dispatch({\n//       type: POMODORO_GET_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     })\n//   }\n// }\n\nexport const createPomodoro = pomodoro => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POMODORO_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/pomodoros`, config, pomodoro);\n    dispatch({\n      type: POMODORO_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POMODORO_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const decreasePomodoro = () => {\n  return {\n    type: POMODORO_SECONDS_DECREMENT\n  };\n};\nexport const resetPomodoro = () => {\n  return {\n    type: POMODORO_SECONDS_RESET\n  };\n};\nexport const decreaseRest = () => {\n  return {\n    type: REST_SECONDS_DECREMENT\n  };\n};\nexport const resetRest = () => {\n  return {\n    type: REST_SECONDS_RESET\n  };\n};\nexport const setZeroRest = () => {\n  return {\n    type: SET_REST_ZERO\n  };\n}; // pomodoro duration that is displayed in the timer + 1 min\n\nexport const increasePomodoroMinutes = () => {\n  return {\n    type: POMODORO_MINUTES_INCREMENT\n  };\n}; // pomodoro duration that is displayed in the timer - 1 min\n\nexport const decreasePomodoroMinutes = () => {\n  return {\n    type: POMODORO_MINUTES_DECREMENT\n  };\n}; // rest duration that is displayed in the timer + 1 min\n\nexport const increaseRestMinutes = () => {\n  return {\n    type: REST_MINUTES_INCREMENT\n  };\n}; // rest duration that is displayed in the timer - 1 min\n\nexport const decreaseRestMinutes = () => {\n  return {\n    type: REST_MINUTES_DECREMENT\n  };\n}; // savedRestSeconds + 1 min\n\nexport const increaseSavedRestMinutes = () => {\n  return {\n    type: SAVED_REST_MINUTES_INCREMENT\n  };\n}; // savedRestSeconds - 1 min\n\nexport const decreaseSavedRestMinutes = () => {\n  return {\n    type: SAVED_REST_MINUTES_DECREMENT\n  };\n}; // savedPomodoroSeconds + 1 min\n\nexport const increaseSavedPomodoroMinutes = () => {\n  return {\n    type: SAVED_POMODORO_MINUTES_INCREMENT\n  };\n}; // savedPomodoroSeconds - 1 min\n\nexport const decreaseSavedPomodoroMinutes = () => {\n  return {\n    type: SAVED_POMODORO_MINUTES_DECREMENT\n  };\n};","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/frontend/src/actions/pomodoroActions.js"],"names":["axios","POMODORO_GET_REQUEST","POMODORO_GET_SUCCESS","POMODORO_GET_FAIL","POMODORO_CREATE_REQUEST","POMODORO_CREATE_SUCCESS","POMODORO_CREATE_FAIL","POMODORO_CREATE_RESET","POMODORO_SECONDS_UPDATE","REST_SECONDS_UPDATE","POMODORO_SECONDS_DECREMENT","POMODORO_SECONDS_RESET","REST_SECONDS_DECREMENT","REST_SECONDS_RESET","POMODORO_MINUTES_INCREMENT","POMODORO_MINUTES_DECREMENT","REST_MINUTES_INCREMENT","REST_MINUTES_DECREMENT","SET_REST_ZERO","SAVED_POMODORO_MINUTES_INCREMENT","SAVED_POMODORO_MINUTES_DECREMENT","SAVED_REST_MINUTES_INCREMENT","SAVED_REST_MINUTES_DECREMENT","createPomodoro","pomodoro","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","decreasePomodoro","resetPomodoro","decreaseRest","resetRest","setZeroRest","increasePomodoroMinutes","decreasePomodoroMinutes","increaseRestMinutes","decreaseRestMinutes","increaseSavedRestMinutes","decreaseSavedRestMinutes","increaseSavedPomodoroMinutes","decreaseSavedPomodoroMinutes"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {\r\n  POMODORO_GET_REQUEST,\r\n  POMODORO_GET_SUCCESS,\r\n  POMODORO_GET_FAIL,\r\n  POMODORO_CREATE_REQUEST,\r\n  POMODORO_CREATE_SUCCESS,\r\n  POMODORO_CREATE_FAIL,\r\n  POMODORO_CREATE_RESET,\r\n  POMODORO_SECONDS_UPDATE,\r\n  REST_SECONDS_UPDATE,\r\n  POMODORO_SECONDS_DECREMENT,\r\n  POMODORO_SECONDS_RESET,\r\n  REST_SECONDS_DECREMENT,\r\n  REST_SECONDS_RESET,\r\n  POMODORO_MINUTES_INCREMENT,\r\n  POMODORO_MINUTES_DECREMENT,\r\n  REST_MINUTES_INCREMENT,\r\n  REST_MINUTES_DECREMENT,\r\n  SET_REST_ZERO,\r\n  SAVED_POMODORO_MINUTES_INCREMENT,\r\n  SAVED_POMODORO_MINUTES_DECREMENT,\r\n  SAVED_REST_MINUTES_INCREMENT,\r\n  SAVED_REST_MINUTES_DECREMENT,\r\n} from '../constants/pomodoroConstants'\r\n\r\n// export const getPomodoro = () => async (dispatch) => {\r\n//   try {\r\n//     dispatch({ type: POMODORO_GET_REQUEST })\r\n\r\n//     // const { data } = await axios.get(`/api/pomodoros`)\r\n\r\n//     dispatch({\r\n//       type: POMODORO_GET_SUCCESS,\r\n//       payload: data,\r\n//     })\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: POMODORO_GET_FAIL,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     })\r\n//   }\r\n// }\r\n\r\nexport const createPomodoro = (pomodoro) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_CREATE_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/pomodoros`, config, pomodoro)\r\n\r\n    dispatch({\r\n      type: POMODORO_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const decreasePomodoro = () => {\r\n  return {\r\n    type: POMODORO_SECONDS_DECREMENT,\r\n  }\r\n}\r\nexport const resetPomodoro = () => {\r\n  return {\r\n    type: POMODORO_SECONDS_RESET,\r\n  }\r\n}\r\n\r\nexport const decreaseRest = () => {\r\n  return {\r\n    type: REST_SECONDS_DECREMENT,\r\n  }\r\n}\r\nexport const resetRest = () => {\r\n  return {\r\n    type: REST_SECONDS_RESET,\r\n  }\r\n}\r\nexport const setZeroRest = () => {\r\n  return {\r\n    type: SET_REST_ZERO,\r\n  }\r\n}\r\n\r\n// pomodoro duration that is displayed in the timer + 1 min\r\n\r\nexport const increasePomodoroMinutes = () => {\r\n  return {\r\n    type: POMODORO_MINUTES_INCREMENT,\r\n  }\r\n}\r\n// pomodoro duration that is displayed in the timer - 1 min\r\n\r\nexport const decreasePomodoroMinutes = () => {\r\n  return {\r\n    type: POMODORO_MINUTES_DECREMENT,\r\n  }\r\n}\r\n\r\n// rest duration that is displayed in the timer + 1 min\r\n\r\nexport const increaseRestMinutes = () => {\r\n  return {\r\n    type: REST_MINUTES_INCREMENT,\r\n  }\r\n}\r\n\r\n// rest duration that is displayed in the timer - 1 min\r\n\r\nexport const decreaseRestMinutes = () => {\r\n  return {\r\n    type: REST_MINUTES_DECREMENT,\r\n  }\r\n}\r\n\r\n// savedRestSeconds + 1 min\r\n\r\nexport const increaseSavedRestMinutes = () => {\r\n  return {\r\n    type: SAVED_REST_MINUTES_INCREMENT,\r\n  }\r\n}\r\n\r\n// savedRestSeconds - 1 min\r\n\r\nexport const decreaseSavedRestMinutes = () => {\r\n  return {\r\n    type: SAVED_REST_MINUTES_DECREMENT,\r\n  }\r\n}\r\n\r\n// savedPomodoroSeconds + 1 min\r\n\r\nexport const increaseSavedPomodoroMinutes = () => {\r\n  return {\r\n    type: SAVED_POMODORO_MINUTES_INCREMENT,\r\n  }\r\n}\r\n// savedPomodoroSeconds - 1 min\r\n\r\nexport const decreaseSavedPomodoroMinutes = () => {\r\n  return {\r\n    type: SAVED_POMODORO_MINUTES_DECREMENT,\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}