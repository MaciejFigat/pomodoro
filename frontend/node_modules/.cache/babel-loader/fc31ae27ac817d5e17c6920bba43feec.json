{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\48500\\\\Desktop\\\\MERN\\\\pomodoro\\\\frontend\\\\src\\\\screens\\\\CustomPomodoroScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Button, Row, Col, Badge, Card } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { decreasePomodoro, resetPomodoro, decreaseRest, resetRest } from '../actions/pomodoroActions';\n\nconst CustomPomodoroScreen = () => {\n  const dispatch = useDispatch();\n  const counterPomodoro = useSelector(state => state.counterPomodoro);\n  const {\n    pomodoroSeconds\n  } = counterPomodoro;\n  const counterRest = useSelector(state => state.counterRest);\n  const {\n    restSeconds\n  } = counterRest; // const [pomodoroDuration, setPomodoroDuration] = useState(25)\n\n  const [pomodoroDone, setPomodoroDone] = useState(0); // const [restDuration, setRestDuration] = useState(5)\n  // const [seconds, setSeconds] = useState(25 * 60)\n  // const [restSeconds, setRestSeconds] = useState(5 * 60)\n\n  const [isActive, setIsActive] = useState(false);\n\n  const toggle = () => {\n    setIsActive(!isActive);\n  };\n\n  const reset = () => {// setSeconds(pomodoroDuration * 60)\n    // setRestSeconds(restDuration * 60)\n  };\n\n  const pomodoroDurationPlus = () => {\n    if (pomodoroDuration < 60) {// setPomodoroDuration((pomodoroDuration) => pomodoroDuration + 1)\n    }\n  };\n\n  const pomodoroDurationMinus = () => {\n    if (pomodoroDuration > 0) {// setPomodoroDuration((pomodoroDuration) => pomodoroDuration - 1)\n    }\n  };\n\n  const restDurationPlus = () => {\n    if (restDuration < 60) {// setRestDuration((restDuration) => restDuration + 1)\n    }\n  };\n\n  const restDurationMinus = () => {\n    if (restDuration > 0) {// setRestDuration((restDuration) => restDuration - 1)\n    }\n  };\n\n  useEffect(() => {\n    if (isActive && restSeconds === 0 && seconds === 0) {\n      // setSeconds(pomodoroDuration * 60)\n      // setRestSeconds(restDuration * 60)\n      setPomodoroDone(pomodoroDone => pomodoroDone + 1);\n    }\n\n    const timer = setInterval(() => {\n      if (isActive && pomodoroSeconds > 0) {\n        // setSeconds((seconds) => seconds - 1)\n        dispatch(decreasePomodoro());\n      } else if (isActive && restSeconds > 0 && pomodoroSeconds === 0) {\n        // setRestSeconds((restSeconds) => restSeconds - 1)\n        dispatch(decreaseRest());\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [isActive, seconds, restSeconds, pomodoroDuration, restDuration, dispatch, pomodoroSeconds]);\n  return /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, ' ', isActive && pomodoroSeconds > 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 50\n    }\n  }, \"Work\") : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 66\n    }\n  }, \"Rest\")), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, seconds === 0 ? /*#__PURE__*/React.createElement(Badge, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"font-weight-bolder\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, ' ', Math.trunc(restSeconds / 60), \" : \", restSeconds % 60)) : /*#__PURE__*/React.createElement(Badge, {\n    variant: \"danger\",\n    className: \"justify-content-md-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"font-weight-bolder\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, Math.trunc(pomodoroSeconds / 60), \" : \", pomodoroSeconds % 60))), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, isActive ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    onClick: toggle,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Pause\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: toggle,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"Start\"), isActive && seconds === 0 && /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setRestSeconds(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"Skip rest\"))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, \"Number of Pomodoros done: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 47\n    }\n  }, pomodoroDone), ' '))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, \"Rest period: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 34\n    }\n  }, restDuration), \" minutes\")), /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, ' ', /*#__PURE__*/React.createElement(Button, {\n    onClick: restDurationPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: restDurationMinus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, \"-\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }, \"Duration of a pomodoro: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 45\n    }\n  }, pomodoroDuration), \" minutes\")), /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, ' ', /*#__PURE__*/React.createElement(Button, {\n    onClick: pomodoroDurationPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: pomodoroDurationMinus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, \"-\")))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"warning\",\n    flush: true,\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, \"Reset timer\"))))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSeconds(seconds - 10),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, \"---testing work\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setRestSeconds(restSeconds - 10),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, \"--- testing rest\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(decreasePomodoro()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, \"--- testing action decrease pomodoro seconds in store\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(decreaseRest()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, \"--- testing action decrease rest seconds in store\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(resetRest()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, \"--- testing action reset rest\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(resetPomodoro()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, \"--- testing action reset pomodoro\"));\n};\n\nexport default CustomPomodoroScreen;","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/frontend/src/screens/CustomPomodoroScreen.js"],"names":["React","useState","useEffect","Container","Button","Row","Col","Badge","Card","FormContainer","useDispatch","useSelector","decreasePomodoro","resetPomodoro","decreaseRest","resetRest","CustomPomodoroScreen","dispatch","counterPomodoro","state","pomodoroSeconds","counterRest","restSeconds","pomodoroDone","setPomodoroDone","isActive","setIsActive","toggle","reset","pomodoroDurationPlus","pomodoroDuration","pomodoroDurationMinus","restDurationPlus","restDuration","restDurationMinus","seconds","timer","setInterval","clearInterval","Math","trunc","setRestSeconds","setSeconds"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Container, Button, Row, Col, Badge, Card } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  decreasePomodoro,\r\n  resetPomodoro,\r\n  decreaseRest,\r\n  resetRest,\r\n} from '../actions/pomodoroActions'\r\n\r\nconst CustomPomodoroScreen = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const counterPomodoro = useSelector((state) => state.counterPomodoro)\r\n  const { pomodoroSeconds } = counterPomodoro\r\n\r\n  const counterRest = useSelector((state) => state.counterRest)\r\n  const { restSeconds } = counterRest\r\n\r\n  // const [pomodoroDuration, setPomodoroDuration] = useState(25)\r\n  const [pomodoroDone, setPomodoroDone] = useState(0)\r\n  // const [restDuration, setRestDuration] = useState(5)\r\n  // const [seconds, setSeconds] = useState(25 * 60)\r\n  // const [restSeconds, setRestSeconds] = useState(5 * 60)\r\n  const [isActive, setIsActive] = useState(false)\r\n\r\n  const toggle = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n\r\n  const reset = () => {\r\n    // setSeconds(pomodoroDuration * 60)\r\n    // setRestSeconds(restDuration * 60)\r\n  }\r\n\r\n  const pomodoroDurationPlus = () => {\r\n    if (pomodoroDuration < 60) {\r\n      // setPomodoroDuration((pomodoroDuration) => pomodoroDuration + 1)\r\n    }\r\n  }\r\n\r\n  const pomodoroDurationMinus = () => {\r\n    if (pomodoroDuration > 0) {\r\n      // setPomodoroDuration((pomodoroDuration) => pomodoroDuration - 1)\r\n    }\r\n  }\r\n\r\n  const restDurationPlus = () => {\r\n    if (restDuration < 60) {\r\n      // setRestDuration((restDuration) => restDuration + 1)\r\n    }\r\n  }\r\n\r\n  const restDurationMinus = () => {\r\n    if (restDuration > 0) {\r\n      // setRestDuration((restDuration) => restDuration - 1)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (isActive && restSeconds === 0 && seconds === 0) {\r\n      // setSeconds(pomodoroDuration * 60)\r\n      // setRestSeconds(restDuration * 60)\r\n      setPomodoroDone((pomodoroDone) => pomodoroDone + 1)\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      if (isActive && pomodoroSeconds > 0) {\r\n        // setSeconds((seconds) => seconds - 1)\r\n        dispatch(decreasePomodoro())\r\n      } else if (isActive && restSeconds > 0 && pomodoroSeconds === 0) {\r\n        // setRestSeconds((restSeconds) => restSeconds - 1)\r\n        dispatch(decreaseRest())\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timer)\r\n  }, [\r\n    isActive,\r\n    seconds,\r\n    restSeconds,\r\n    pomodoroDuration,\r\n    restDuration,\r\n    dispatch,\r\n    pomodoroSeconds,\r\n  ])\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Row className='justify-content-lg-center'>\r\n        <Col xs={12} md={8}>\r\n          <Card className='p-3'>\r\n            <Row className='justify-content-lg-center'>\r\n              {' '}\r\n              {isActive && pomodoroSeconds > 0 ? <h1>Work</h1> : <h1>Rest</h1>}\r\n            </Row>\r\n            <Row className='justify-content-lg-center'>\r\n              {seconds === 0 ? (\r\n                <Badge variant='success'>\r\n                  <h2 font-weight-bolder>\r\n                    {' '}\r\n                    {Math.trunc(restSeconds / 60)} : {restSeconds % 60}\r\n                  </h2>\r\n                </Badge>\r\n              ) : (\r\n                <Badge variant='danger' className='justify-content-md-center'>\r\n                  <h2 font-weight-bolder>\r\n                    {Math.trunc(pomodoroSeconds / 60)} : {pomodoroSeconds % 60}\r\n                  </h2>\r\n                </Badge>\r\n              )}\r\n            </Row>\r\n            <Row className='justify-content-lg-center'>\r\n              {isActive ? (\r\n                <Button variant='info' onClick={toggle} size='lg'>\r\n                  Pause\r\n                </Button>\r\n              ) : (\r\n                <Button variant='success' onClick={toggle} size='lg'>\r\n                  Start\r\n                </Button>\r\n              )}\r\n              {isActive && seconds === 0 && (\r\n                <Button onClick={() => setRestSeconds(0)}>Skip rest</Button>\r\n              )}\r\n            </Row>\r\n          </Card>\r\n          <Col>\r\n            <Card className='p-3'>\r\n              <Row>\r\n                <Col>\r\n                  <h3>\r\n                    Number of Pomodoros done: <b>{pomodoroDone}</b>{' '}\r\n                  </h3>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={8}>\r\n                  <h3>\r\n                    Rest period: <b>{restDuration}</b> minutes\r\n                  </h3>\r\n                </Col>\r\n                <Col sm={4}>\r\n                  {' '}\r\n                  <Button onClick={restDurationPlus}>\r\n                    <b>+</b>\r\n                  </Button>\r\n                  <Button onClick={restDurationMinus}>\r\n                    <b>-</b>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={8}>\r\n                  <h3>\r\n                    Duration of a pomodoro: <b>{pomodoroDuration}</b> minutes\r\n                  </h3>\r\n                </Col>\r\n                <Col sm={4}>\r\n                  {' '}\r\n                  <Button onClick={pomodoroDurationPlus}>\r\n                    <b>+</b>\r\n                  </Button>\r\n                  <Button onClick={pomodoroDurationMinus}>\r\n                    <b>-</b>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Button variant='warning' flush onClick={reset}>\r\n                Reset timer\r\n              </Button>\r\n            </Card>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n      <button onClick={() => setSeconds(seconds - 10)}>---testing work</button>\r\n      <button onClick={() => setRestSeconds(restSeconds - 10)}>\r\n        --- testing rest\r\n      </button>\r\n      <button onClick={() => dispatch(decreasePomodoro())}>\r\n        --- testing action decrease pomodoro seconds in store\r\n      </button>\r\n      <button onClick={() => dispatch(decreaseRest())}>\r\n        --- testing action decrease rest seconds in store\r\n      </button>\r\n      <button onClick={() => dispatch(resetRest())}>\r\n        --- testing action reset rest\r\n      </button>\r\n      <button onClick={() => dispatch(resetPomodoro())}>\r\n        --- testing action reset pomodoro\r\n      </button>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default CustomPomodoroScreen\r\n"]},"metadata":{},"sourceType":"module"}