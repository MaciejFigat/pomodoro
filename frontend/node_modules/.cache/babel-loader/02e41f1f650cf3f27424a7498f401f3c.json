{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers';\nimport { getPomodoroInfoReducer, pomodoroCreateReducer, counterPomodoroReducer, counterRestReducer, savedPomodoroReducer, pomodoroUpdateReducer // getMyPomodorosReducer,\n} from './reducers/pomodoroReducers';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  getPomodoroInfo: getPomodoroInfoReducer,\n  pomodoroCreate: pomodoroCreateReducer,\n  counterPomodoro: counterPomodoroReducer,\n  counterRest: counterRestReducer,\n  savedPomodoro: savedPomodoroReducer,\n  pomodoroUpdate: pomodoroUpdateReducer // getMyPomodoros: getMyPomodorosReducer,\n\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nexport const pomodoroInfoFromStorage = localStorage.getItem('pomodoros') ? JSON.parse(localStorage.getItem('pomodoros')) : {\n  savedPomodoroSeconds: 15,\n  savedRestSeconds: 3\n};\nexport const pomodoroSecondsFromStorage = localStorage.getItem('getPomodoroInfo.pomodoros.pomodoroSeconds[0]') ? JSON.parse(localStorage.getItem('pomodoroSeconds')) : pomodoroInfoFromStorage.savedPomodoroSeconds;\nexport const restSecondsFromStorage = localStorage.getItem('restSeconds') ? JSON.parse(localStorage.getItem('restSeconds')) : pomodoroInfoFromStorage.savedRestSeconds;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  },\n  getPomodoroInfo: pomodoroInfoFromStorage,\n  // pomodoros: [],\n  // savedPomodoro: pomodoroInfoFromStorage,\n  counterPomodoro: {\n    pomodoroSeconds: pomodoroSecondsFromStorage\n  },\n  counterRest: {\n    restSeconds: restSecondsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","getPomodoroInfoReducer","pomodoroCreateReducer","counterPomodoroReducer","counterRestReducer","savedPomodoroReducer","pomodoroUpdateReducer","reducer","userLogin","userRegister","getPomodoroInfo","pomodoroCreate","counterPomodoro","counterRest","savedPomodoro","pomodoroUpdate","userInfoFromStorage","localStorage","getItem","JSON","parse","pomodoroInfoFromStorage","savedPomodoroSeconds","savedRestSeconds","pomodoroSecondsFromStorage","restSecondsFromStorage","initialState","userInfo","pomodoroSeconds","restSeconds","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,yBAAtD;AACA,SACEC,sBADF,EAEEC,qBAFF,EAGEC,sBAHF,EAIEC,kBAJF,EAKEC,oBALF,EAMEC,qBANF,CAOE;AAPF,OAQO,6BARP;AASA,MAAMC,OAAO,GAAGZ,eAAe,CAAC;AAC9Ba,EAAAA,SAAS,EAAET,gBADmB;AAE9BU,EAAAA,YAAY,EAAET,mBAFgB;AAG9BU,EAAAA,eAAe,EAAET,sBAHa;AAI9BU,EAAAA,cAAc,EAAET,qBAJc;AAK9BU,EAAAA,eAAe,EAAET,sBALa;AAM9BU,EAAAA,WAAW,EAAET,kBANiB;AAO9BU,EAAAA,aAAa,EAAET,oBAPe;AAQ9BU,EAAAA,cAAc,EAAET,qBARc,CAS9B;;AAT8B,CAAD,CAA/B;AAYA,MAAMU,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,OAAO,MAAMG,uBAAuB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,WAArB,IACnCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADmC,GAEnC;AAAEI,EAAAA,oBAAoB,EAAE,EAAxB;AAA4BC,EAAAA,gBAAgB,EAAE;AAA9C,CAFG;AAIP,OAAO,MAAMC,0BAA0B,GAAGP,YAAY,CAACC,OAAb,CACxC,8CADwC,IAGtCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAHsC,GAItCG,uBAAuB,CAACC,oBAJrB;AAMP,OAAO,MAAMG,sBAAsB,GAAGR,YAAY,CAACC,OAAb,CAAqB,aAArB,IAClCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CADkC,GAElCG,uBAAuB,CAACE,gBAFrB;AAIP,MAAMG,YAAY,GAAG;AACnBlB,EAAAA,SAAS,EAAE;AAAEmB,IAAAA,QAAQ,EAAEX;AAAZ,GADQ;AAEnBN,EAAAA,eAAe,EAAEW,uBAFE;AAGnB;AACA;AACAT,EAAAA,eAAe,EAAE;AAAEgB,IAAAA,eAAe,EAAEJ;AAAnB,GALE;AAMnBX,EAAAA,WAAW,EAAE;AAAEgB,IAAAA,WAAW,EAAEJ;AAAf;AANM,CAArB;AAQA,MAAMK,UAAU,GAAG,CAACjC,KAAD,CAAnB;AAEA,MAAMkC,KAAK,GAAGrC,WAAW,CACvBa,OADuB,EAEvBmB,YAFuB,EAGvB5B,mBAAmB,CAACF,eAAe,CAAC,GAAGkC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers'\r\nimport {\r\n  getPomodoroInfoReducer,\r\n  pomodoroCreateReducer,\r\n  counterPomodoroReducer,\r\n  counterRestReducer,\r\n  savedPomodoroReducer,\r\n  pomodoroUpdateReducer,\r\n  // getMyPomodorosReducer,\r\n} from './reducers/pomodoroReducers'\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  getPomodoroInfo: getPomodoroInfoReducer,\r\n  pomodoroCreate: pomodoroCreateReducer,\r\n  counterPomodoro: counterPomodoroReducer,\r\n  counterRest: counterRestReducer,\r\n  savedPomodoro: savedPomodoroReducer,\r\n  pomodoroUpdate: pomodoroUpdateReducer,\r\n  // getMyPomodoros: getMyPomodorosReducer,\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nexport const pomodoroInfoFromStorage = localStorage.getItem('pomodoros')\r\n  ? JSON.parse(localStorage.getItem('pomodoros'))\r\n  : { savedPomodoroSeconds: 15, savedRestSeconds: 3 }\r\n\r\nexport const pomodoroSecondsFromStorage = localStorage.getItem(\r\n  'getPomodoroInfo.pomodoros.pomodoroSeconds[0]'\r\n)\r\n  ? JSON.parse(localStorage.getItem('pomodoroSeconds'))\r\n  : pomodoroInfoFromStorage.savedPomodoroSeconds\r\n\r\nexport const restSecondsFromStorage = localStorage.getItem('restSeconds')\r\n  ? JSON.parse(localStorage.getItem('restSeconds'))\r\n  : pomodoroInfoFromStorage.savedRestSeconds\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n  getPomodoroInfo: pomodoroInfoFromStorage,\r\n  // pomodoros: [],\r\n  // savedPomodoro: pomodoroInfoFromStorage,\r\n  counterPomodoro: { pomodoroSeconds: pomodoroSecondsFromStorage },\r\n  counterRest: { restSeconds: restSecondsFromStorage },\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n"]},"metadata":{},"sourceType":"module"}