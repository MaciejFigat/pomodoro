{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\48500\\\\Desktop\\\\MERN\\\\pomodoro\\\\frontend\\\\src\\\\screens\\\\PomodoroDisplayScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nconst PomodoroDisplayScreen = () => {\n  _s();\n\n  const [pomodoroDuration, setPomodoroDuration] = useState(25);\n  const [seconds, setSeconds] = useState(25 * 60);\n  const [restSeconds, setRestSeconds] = useState(5 * 60);\n  const [restDuration, setRestDuration] = useState(5);\n  const [isActive, setIsActive] = useState(false);\n\n  const toggle = () => {\n    setIsActive(!isActive);\n  };\n\n  const reset = () => {\n    setSeconds(pomodoroDuration * 60);\n    setRestSeconds(restDuration * 60);\n  };\n\n  const pomodoroDurationPlus = () => {\n    if (pomodoroDuration < 60) {\n      setPomodoroDuration(pomodoroDuration => pomodoroDuration + 1);\n    }\n  };\n\n  const pomodoroDurationMinus = () => {\n    if (pomodoroDuration > 0) {\n      setPomodoroDuration(pomodoroDuration => pomodoroDuration - 1);\n    }\n  };\n\n  const restDurationPlus = () => {\n    if (restDuration < 60) {\n      setRestDuration(restDuration => restDuration + 1);\n    }\n  };\n\n  const restDurationMinus = () => {\n    if (restDuration > 0) {\n      setRestDuration(restDuration => restDuration - 1);\n    }\n  };\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (isActive) {\n        seconds > 0 ? setSeconds(seconds => seconds - 1) : setRestSeconds(restSeconds => restSeconds - 1);\n      } else if (!isActive && seconds === 0 && restSeconds === 0) {\n        console.log('not active work & rest done');\n        setSeconds(pomodoroDuration * 25);\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [isActive, seconds, restSeconds, pomodoroDuration, restDuration]);\n  const style = {\n    display: 'grid',\n    placeItems: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: [isActive && seconds > 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 36\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Rest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 52\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Number of Pomodoros: 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), seconds === 0 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [Math.trunc(restSeconds / 60), \" : \", restSeconds % 60]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [Math.trunc(seconds / 60), \" : \", seconds % 60]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggle,\n        children: isActive ? 'Pause' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rest: \", restDuration, \",\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: restDurationMinus,\n          children: \"Decrease rest period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: restDurationPlus,\n          children: \"Increase rest period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Duration of a pomodoro: \", pomodoroDuration, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: pomodoroDurationMinus,\n          children: \"Decrease pomodoro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: pomodoroDurationPlus,\n          children: \"Increase pomodoro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reset,\n        children: \"Reset timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(PomodoroDisplayScreen, \"edZHB5yhQ0ClNo9xrt++TiDoMrw=\");\n\n_c = PomodoroDisplayScreen;\nexport default PomodoroDisplayScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PomodoroDisplayScreen\");","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/frontend/src/screens/PomodoroDisplayScreen.js"],"names":["React","useState","useEffect","PomodoroDisplayScreen","pomodoroDuration","setPomodoroDuration","seconds","setSeconds","restSeconds","setRestSeconds","restDuration","setRestDuration","isActive","setIsActive","toggle","reset","pomodoroDurationPlus","pomodoroDurationMinus","restDurationPlus","restDurationMinus","timer","setInterval","console","log","clearInterval","style","display","placeItems","Math","trunc"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst PomodoroDisplayScreen = () => {\r\n  const [pomodoroDuration, setPomodoroDuration] = useState(25)\r\n  const [seconds, setSeconds] = useState(25 * 60)\r\n  const [restSeconds, setRestSeconds] = useState(5 * 60)\r\n  const [restDuration, setRestDuration] = useState(5)\r\n  const [isActive, setIsActive] = useState(false)\r\n\r\n  const toggle = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n\r\n  const reset = () => {\r\n    setSeconds(pomodoroDuration * 60)\r\n    setRestSeconds(restDuration * 60)\r\n  }\r\n\r\n  const pomodoroDurationPlus = () => {\r\n    if (pomodoroDuration < 60) {\r\n      setPomodoroDuration((pomodoroDuration) => pomodoroDuration + 1)\r\n    }\r\n  }\r\n\r\n  const pomodoroDurationMinus = () => {\r\n    if (pomodoroDuration > 0) {\r\n      setPomodoroDuration((pomodoroDuration) => pomodoroDuration - 1)\r\n    }\r\n  }\r\n\r\n  const restDurationPlus = () => {\r\n    if (restDuration < 60) {\r\n      setRestDuration((restDuration) => restDuration + 1)\r\n    }\r\n  }\r\n\r\n  const restDurationMinus = () => {\r\n    if (restDuration > 0) {\r\n      setRestDuration((restDuration) => restDuration - 1)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      if (isActive) {\r\n        seconds > 0\r\n          ? setSeconds((seconds) => seconds - 1)\r\n          : setRestSeconds((restSeconds) => restSeconds - 1)\r\n      } else if (!isActive && seconds === 0 && restSeconds === 0) {\r\n        console.log('not active work & rest done')\r\n        setSeconds(pomodoroDuration * 25)\r\n      }\r\n    }, 1000)\r\n    return () => clearInterval(timer)\r\n  }, [isActive, seconds, restSeconds, pomodoroDuration, restDuration])\r\n\r\n  const style = {\r\n    display: 'grid',\r\n    placeItems: 'center',\r\n  }\r\n  return (\r\n    <>\r\n      <div style={style}>\r\n        {isActive && seconds > 0 ? <h1>Work</h1> : <h1>Rest</h1>}\r\n        <p>Number of Pomodoros: 1</p>\r\n\r\n        {seconds === 0 ? (\r\n          <h2>\r\n            {Math.trunc(restSeconds / 60)} : {restSeconds % 60}\r\n          </h2>\r\n        ) : (\r\n          <h2>\r\n            {Math.trunc(seconds / 60)} : {seconds % 60}\r\n          </h2>\r\n        )}\r\n\r\n        <button onClick={toggle}>{isActive ? 'Pause' : 'Start'}</button>\r\n        <p>\r\n          Rest: {restDuration},{' '}\r\n          <button onClick={restDurationMinus}>Decrease rest period</button>\r\n          <button onClick={restDurationPlus}>Increase rest period</button>\r\n        </p>\r\n        <p>\r\n          Duration of a pomodoro: {pomodoroDuration}{' '}\r\n          <button onClick={pomodoroDurationMinus}>Decrease pomodoro</button>\r\n          <button onClick={pomodoroDurationPlus}>Increase pomodoro</button>\r\n        </p>\r\n        <button onClick={reset}>Reset timer</button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PomodoroDisplayScreen\r\n"]},"metadata":{},"sourceType":"module"}