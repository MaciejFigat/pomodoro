{"ast":null,"code":"import { POMODORO_GET_REQUEST, POMODORO_GET_SUCCESS, POMODORO_GET_FAIL, POMODORO_CREATE_REQUEST, POMODORO_CREATE_SUCCESS, POMODORO_CREATE_FAIL, POMODORO_CREATE_RESET, POMODORO_SECONDS_DECREMENT, POMODORO_SECONDS_RESET, REST_SECONDS_DECREMENT, REST_SECONDS_RESET, SET_REST_ZERO, POMODORO_MINUTES_INCREMENT, POMODORO_MINUTES_DECREMENT, REST_MINUTES_INCREMENT, REST_MINUTES_DECREMENT, SAVED_POMODORO_MINUTES_INCREMENT, SAVED_POMODORO_MINUTES_DECREMENT, SAVED_REST_MINUTES_INCREMENT, SAVED_REST_MINUTES_DECREMENT } from '../constants/pomodoroConstants';\nimport { pomodoroSecondsFromStorage, restSecondsFromStorage, pomodoroInfoFromStorage } from '../store'; // export const getMyPomodorosReducer = (state = { pomodoros: {} }, action) => {\n//   switch (action.type) {\n//     case POMODORO_GET_REQUEST:\n//       return {\n//         loading: true,\n//       }\n//     case POMODORO_GET_SUCCESS:\n//       return {\n//         loading: false,\n//         orders: action.payload,\n//       }\n//     case POMODORO_GET_FAIL:\n//       return {\n//         loading: false,\n//         error: action.payload,\n//       }\n//     default:\n//       return state\n//   }\n// }\n\nexport const getPomodoroInfoReducer = (state = {\n  pomodoros: {}\n}, action) => {\n  switch (action.type) {\n    case POMODORO_GET_REQUEST:\n      return {\n        loading: true,\n        pomodoros: {}\n      };\n\n    case POMODORO_GET_SUCCESS:\n      return {\n        loading: false,\n        pomodoros: action.payload\n      };\n\n    case POMODORO_GET_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const pomodoroCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case POMODORO_CREATE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case POMODORO_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        pomodoro: action.payload\n      };\n\n    case POMODORO_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case POMODORO_CREATE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport const savedPomodoroReducer = (state = {\n  pomodoroInfo: {}\n}, action) => {\n  if (action.type === SAVED_REST_MINUTES_INCREMENT && state.savedRestSeconds <= 3600) {\n    return { ...state,\n      savedRestSeconds: state.savedRestSeconds + 60\n    };\n  } else if (action.type === SAVED_REST_MINUTES_DECREMENT && state.savedRestSeconds >= 60) {\n    return { ...state,\n      savedRestSeconds: state.savedRestSeconds - 60\n    };\n  } else if (action.type === SAVED_POMODORO_MINUTES_INCREMENT && state.savedPomodoroSeconds <= 3600) {\n    return { ...state,\n      savedPomodoroSeconds: state.savedPomodoroSeconds + 60\n    };\n  } else if (action.type === SAVED_POMODORO_MINUTES_DECREMENT && state.savedPomodoroSeconds >= 60) {\n    return { ...state,\n      savedPomodoroSeconds: state.savedPomodoroSeconds - 60\n    };\n  }\n\n  return state;\n};\nexport const counterRestReducer = (state = {\n  restSeconds: {}\n}, action) => {\n  if (action.type === REST_SECONDS_DECREMENT && state.restSeconds > 0) {\n    return { ...state,\n      restSeconds: state.restSeconds - 1\n    };\n  } else if (action.type === REST_SECONDS_RESET) {\n    return state = {\n      restSeconds: restSecondsFromStorage\n    };\n  } else if (action.type === REST_MINUTES_INCREMENT && state.restSeconds <= 3600) {\n    return { ...state,\n      restSeconds: state.restSeconds + 60\n    };\n  } else if (action.type === REST_MINUTES_DECREMENT && state.restSeconds > 60) {\n    return { ...state,\n      restSeconds: state.restSeconds - 60\n    };\n  } else if (action.type === REST_MINUTES_DECREMENT && state.restSeconds < 60) {\n    return { ...state,\n      restSeconds: 0\n    };\n  } else if (action.type === SET_REST_ZERO) {\n    return { ...state,\n      restSeconds: 0\n    };\n  }\n\n  return state;\n};\nexport const counterPomodoroReducer = (state = {\n  pomodoroSeconds: {}\n}, action) => {\n  if (action.type === POMODORO_SECONDS_DECREMENT && state.pomodoroSeconds > 0) {\n    return { ...state,\n      pomodoroSeconds: state.pomodoroSeconds - 1\n    };\n  } else if (action.type === POMODORO_SECONDS_RESET) {\n    return state = {\n      pomodoroSeconds: pomodoroSecondsFromStorage\n    }; // pomodoroSeconds: pomodoroInfoFromStorage.savedPomodoroSeconds\n  } else if (action.type === POMODORO_MINUTES_INCREMENT && state.pomodoroSeconds <= 3600) {\n    return { ...state,\n      pomodoroSeconds: state.pomodoroSeconds + 60\n    };\n  } else if (action.type === POMODORO_MINUTES_DECREMENT && state.pomodoroSeconds > 60) {\n    return { ...state,\n      pomodoroSeconds: state.pomodoroSeconds - 60\n    };\n  } else if (action.type === POMODORO_MINUTES_DECREMENT && state.pomodoroSeconds < 60) {\n    return { ...state,\n      pomodoroSeconds: 0\n    };\n  }\n\n  return state;\n}; // export const counterPomodoroReducer = (\n//   state = { pomodoroSeconds: {} },\n//   action\n// ) => {\n//   switch (action.type) {\n//     case POMODORO_SECONDS_DECREMENT:\n//       return { ...state, pomodoroSeconds: state.pomodoroSeconds - 1 }\n//     case POMODORO_SECONDS_RESET:\n//       return {}\n//     default:\n//       return state\n//   }\n// }\n// export const counterRestReducer = (state = { restSeconds: {} }, action) => {\n//   switch (action.type) {\n//     case REST_SECONDS_DECREMENT:\n//       return { ...state, restSeconds: state.restSeconds - 1 }\n//     case REST_SECONDS_RESET:\n//       return { restSeconds: state }\n//     default:\n//       return state\n//   }\n// }","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/frontend/src/reducers/pomodoroReducers.js"],"names":["POMODORO_GET_REQUEST","POMODORO_GET_SUCCESS","POMODORO_GET_FAIL","POMODORO_CREATE_REQUEST","POMODORO_CREATE_SUCCESS","POMODORO_CREATE_FAIL","POMODORO_CREATE_RESET","POMODORO_SECONDS_DECREMENT","POMODORO_SECONDS_RESET","REST_SECONDS_DECREMENT","REST_SECONDS_RESET","SET_REST_ZERO","POMODORO_MINUTES_INCREMENT","POMODORO_MINUTES_DECREMENT","REST_MINUTES_INCREMENT","REST_MINUTES_DECREMENT","SAVED_POMODORO_MINUTES_INCREMENT","SAVED_POMODORO_MINUTES_DECREMENT","SAVED_REST_MINUTES_INCREMENT","SAVED_REST_MINUTES_DECREMENT","pomodoroSecondsFromStorage","restSecondsFromStorage","pomodoroInfoFromStorage","getPomodoroInfoReducer","state","pomodoros","action","type","loading","payload","error","pomodoroCreateReducer","success","pomodoro","savedPomodoroReducer","pomodoroInfo","savedRestSeconds","savedPomodoroSeconds","counterRestReducer","restSeconds","counterPomodoroReducer","pomodoroSeconds"],"mappings":"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","sourcesContent":["import {\r\n  POMODORO_GET_REQUEST,\r\n  POMODORO_GET_SUCCESS,\r\n  POMODORO_GET_FAIL,\r\n  POMODORO_CREATE_REQUEST,\r\n  POMODORO_CREATE_SUCCESS,\r\n  POMODORO_CREATE_FAIL,\r\n  POMODORO_CREATE_RESET,\r\n  POMODORO_SECONDS_DECREMENT,\r\n  POMODORO_SECONDS_RESET,\r\n  REST_SECONDS_DECREMENT,\r\n  REST_SECONDS_RESET,\r\n  SET_REST_ZERO,\r\n  POMODORO_MINUTES_INCREMENT,\r\n  POMODORO_MINUTES_DECREMENT,\r\n  REST_MINUTES_INCREMENT,\r\n  REST_MINUTES_DECREMENT,\r\n  SAVED_POMODORO_MINUTES_INCREMENT,\r\n  SAVED_POMODORO_MINUTES_DECREMENT,\r\n  SAVED_REST_MINUTES_INCREMENT,\r\n  SAVED_REST_MINUTES_DECREMENT,\r\n} from '../constants/pomodoroConstants'\r\nimport {\r\n  pomodoroSecondsFromStorage,\r\n  restSecondsFromStorage,\r\n  pomodoroInfoFromStorage,\r\n} from '../store'\r\n\r\n// export const getMyPomodorosReducer = (state = { pomodoros: {} }, action) => {\r\n//   switch (action.type) {\r\n//     case POMODORO_GET_REQUEST:\r\n//       return {\r\n//         loading: true,\r\n//       }\r\n//     case POMODORO_GET_SUCCESS:\r\n//       return {\r\n//         loading: false,\r\n//         orders: action.payload,\r\n//       }\r\n//     case POMODORO_GET_FAIL:\r\n//       return {\r\n//         loading: false,\r\n//         error: action.payload,\r\n//       }\r\n\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\nexport const getPomodoroInfoReducer = (state = { pomodoros: {} }, action) => {\r\n  switch (action.type) {\r\n    case POMODORO_GET_REQUEST:\r\n      return { loading: true, pomodoros: {} }\r\n    case POMODORO_GET_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        pomodoros: action.payload,\r\n      }\r\n    case POMODORO_GET_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const pomodoroCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POMODORO_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case POMODORO_CREATE_SUCCESS:\r\n      return { loading: false, success: true, pomodoro: action.payload }\r\n    case POMODORO_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case POMODORO_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const savedPomodoroReducer = (state = { pomodoroInfo: {} }, action) => {\r\n  if (\r\n    action.type === SAVED_REST_MINUTES_INCREMENT &&\r\n    state.savedRestSeconds <= 3600\r\n  ) {\r\n    return { ...state, savedRestSeconds: state.savedRestSeconds + 60 }\r\n  } else if (\r\n    action.type === SAVED_REST_MINUTES_DECREMENT &&\r\n    state.savedRestSeconds >= 60\r\n  ) {\r\n    return { ...state, savedRestSeconds: state.savedRestSeconds - 60 }\r\n  } else if (\r\n    action.type === SAVED_POMODORO_MINUTES_INCREMENT &&\r\n    state.savedPomodoroSeconds <= 3600\r\n  ) {\r\n    return { ...state, savedPomodoroSeconds: state.savedPomodoroSeconds + 60 }\r\n  } else if (\r\n    action.type === SAVED_POMODORO_MINUTES_DECREMENT &&\r\n    state.savedPomodoroSeconds >= 60\r\n  ) {\r\n    return { ...state, savedPomodoroSeconds: state.savedPomodoroSeconds - 60 }\r\n  }\r\n  return state\r\n}\r\n\r\nexport const counterRestReducer = (state = { restSeconds: {} }, action) => {\r\n  if (action.type === REST_SECONDS_DECREMENT && state.restSeconds > 0) {\r\n    return {\r\n      ...state,\r\n      restSeconds: state.restSeconds - 1,\r\n    }\r\n  } else if (action.type === REST_SECONDS_RESET) {\r\n    return (state = { restSeconds: restSecondsFromStorage })\r\n  } else if (\r\n    action.type === REST_MINUTES_INCREMENT &&\r\n    state.restSeconds <= 3600\r\n  ) {\r\n    return { ...state, restSeconds: state.restSeconds + 60 }\r\n  } else if (action.type === REST_MINUTES_DECREMENT && state.restSeconds > 60) {\r\n    return { ...state, restSeconds: state.restSeconds - 60 }\r\n  } else if (action.type === REST_MINUTES_DECREMENT && state.restSeconds < 60) {\r\n    return { ...state, restSeconds: 0 }\r\n  } else if (action.type === SET_REST_ZERO) {\r\n    return { ...state, restSeconds: 0 }\r\n  }\r\n  return state\r\n}\r\n\r\nexport const counterPomodoroReducer = (\r\n  state = { pomodoroSeconds: {} },\r\n  action\r\n) => {\r\n  if (action.type === POMODORO_SECONDS_DECREMENT && state.pomodoroSeconds > 0) {\r\n    return {\r\n      ...state,\r\n      pomodoroSeconds: state.pomodoroSeconds - 1,\r\n    }\r\n  } else if (action.type === POMODORO_SECONDS_RESET) {\r\n    return (state = {\r\n      pomodoroSeconds: pomodoroSecondsFromStorage,\r\n    })\r\n    // pomodoroSeconds: pomodoroInfoFromStorage.savedPomodoroSeconds\r\n  } else if (\r\n    action.type === POMODORO_MINUTES_INCREMENT &&\r\n    state.pomodoroSeconds <= 3600\r\n  ) {\r\n    return { ...state, pomodoroSeconds: state.pomodoroSeconds + 60 }\r\n  } else if (\r\n    action.type === POMODORO_MINUTES_DECREMENT &&\r\n    state.pomodoroSeconds > 60\r\n  ) {\r\n    return { ...state, pomodoroSeconds: state.pomodoroSeconds - 60 }\r\n  } else if (\r\n    action.type === POMODORO_MINUTES_DECREMENT &&\r\n    state.pomodoroSeconds < 60\r\n  ) {\r\n    return { ...state, pomodoroSeconds: 0 }\r\n  }\r\n\r\n  return state\r\n}\r\n\r\n// export const counterPomodoroReducer = (\r\n//   state = { pomodoroSeconds: {} },\r\n//   action\r\n// ) => {\r\n//   switch (action.type) {\r\n//     case POMODORO_SECONDS_DECREMENT:\r\n//       return { ...state, pomodoroSeconds: state.pomodoroSeconds - 1 }\r\n//     case POMODORO_SECONDS_RESET:\r\n//       return {}\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// export const counterRestReducer = (state = { restSeconds: {} }, action) => {\r\n//   switch (action.type) {\r\n\r\n//     case REST_SECONDS_DECREMENT:\r\n//       return { ...state, restSeconds: state.restSeconds - 1 }\r\n\r\n//     case REST_SECONDS_RESET:\r\n//       return { restSeconds: state }\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}