{"ast":null,"code":"import axios from 'axios';\nimport { POMODORO_GET_REQUEST, POMODORO_GET_SUCCESS, POMODORO_GET_FAIL, POMODORO_CREATE_REQUEST, POMODORO_CREATE_SUCCESS, POMODORO_CREATE_FAIL, POMODORO_UPDATE_REQUEST, POMODORO_UPDATE_SUCCESS, POMODORO_UPDATE_FAIL, POMODORO_CREATE_RESET, POMODORO_SECONDS_UPDATE, REST_SECONDS_UPDATE, POMODORO_SECONDS_DECREMENT, POMODORO_SECONDS_RESET, REST_SECONDS_DECREMENT, REST_SECONDS_RESET, POMODORO_MINUTES_INCREMENT, POMODORO_MINUTES_DECREMENT, REST_MINUTES_INCREMENT, REST_MINUTES_DECREMENT, SET_REST_ZERO, SAVED_POMODORO_MINUTES_INCREMENT, SAVED_POMODORO_MINUTES_DECREMENT, SAVED_REST_MINUTES_INCREMENT, SAVED_REST_MINUTES_DECREMENT, REST_SECONDS_SET, POMODORO_SECONDS_SET } from '../constants/pomodoroConstants';\nexport const getMyPomodoros = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POMODORO_GET_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/pomodoros/mypomodoros`, config);\n    dispatch({\n      type: POMODORO_GET_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POMODORO_GET_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createMyPomodoro = pomodoro => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POMODORO_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/pomodoros`, pomodoro, config);\n    dispatch({\n      type: POMODORO_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POMODORO_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // action to update the pomodoro the user created by id\n\nexport const updateMyPomodoro = pomodoro => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POMODORO_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/pomodoros/${pomodoro._id}`, pomodoro, config);\n    dispatch({\n      type: POMODORO_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POMODORO_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const decreasePomodoro = () => {\n  return {\n    type: POMODORO_SECONDS_DECREMENT\n  };\n};\nexport const resetPomodoro = () => {\n  return {\n    type: POMODORO_SECONDS_RESET\n  };\n}; // 2 actions to set the timer to my object I've gotten from the server\n// export const pomodoroSecondsSet = (data) => (dispatch) => {\n//   dispatch({\n//     type: POMODORO_SECONDS_SET,\n//     payload: data,\n//   })\n// localStorage.setItem('pomodoroSeconds', JSON.stringify(data))\n// }\n\nexport const restSecondsSet = data => async (dispatch, getState) => {\n  const {\n    getPomodoroInfo: {\n      pomodoros\n    }\n  } = getState();\n  const {\n    data\n  } = pomodoros[0].restSeconds;\n  dispatch({\n    type: REST_SECONDS_SET,\n    payload: data\n  });\n}; // export const pomodoroSecondsSet = () => {\n//   return {\n//     type: POMODORO_SECONDS_SET,\n//   }\n// }\n// export const restSecondsSet = () => {\n//   return {\n//     type: REST_SECONDS_SET,\n//   }\n// }\n\nexport const decreaseRest = () => {\n  return {\n    type: REST_SECONDS_DECREMENT\n  };\n};\nexport const resetRest = () => {\n  return {\n    type: REST_SECONDS_RESET\n  };\n};\nexport const setZeroRest = () => {\n  return {\n    type: SET_REST_ZERO\n  };\n}; // pomodoro duration that is displayed in the timer + 1 min\n\nexport const increasePomodoroMinutes = () => {\n  return {\n    type: POMODORO_MINUTES_INCREMENT\n  };\n}; // pomodoro duration that is displayed in the timer - 1 min\n\nexport const decreasePomodoroMinutes = () => {\n  return {\n    type: POMODORO_MINUTES_DECREMENT\n  };\n}; // rest duration that is displayed in the timer + 1 min\n\nexport const increaseRestMinutes = () => {\n  return {\n    type: REST_MINUTES_INCREMENT\n  };\n}; // rest duration that is displayed in the timer - 1 min\n\nexport const decreaseRestMinutes = () => {\n  return {\n    type: REST_MINUTES_DECREMENT\n  };\n}; // savedRestSeconds + 1 min\n\nexport const increaseSavedRestMinutes = () => {\n  return {\n    type: SAVED_REST_MINUTES_INCREMENT\n  };\n}; // savedRestSeconds - 1 min\n\nexport const decreaseSavedRestMinutes = () => {\n  return {\n    type: SAVED_REST_MINUTES_DECREMENT\n  };\n}; // savedPomodoroSeconds + 1 min\n\nexport const increaseSavedPomodoroMinutes = () => {\n  return {\n    type: SAVED_POMODORO_MINUTES_INCREMENT\n  };\n}; // savedPomodoroSeconds - 1 min\n\nexport const decreaseSavedPomodoroMinutes = () => {\n  return {\n    type: SAVED_POMODORO_MINUTES_DECREMENT\n  };\n};","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/frontend/src/actions/pomodoroActions.js"],"names":["axios","POMODORO_GET_REQUEST","POMODORO_GET_SUCCESS","POMODORO_GET_FAIL","POMODORO_CREATE_REQUEST","POMODORO_CREATE_SUCCESS","POMODORO_CREATE_FAIL","POMODORO_UPDATE_REQUEST","POMODORO_UPDATE_SUCCESS","POMODORO_UPDATE_FAIL","POMODORO_CREATE_RESET","POMODORO_SECONDS_UPDATE","REST_SECONDS_UPDATE","POMODORO_SECONDS_DECREMENT","POMODORO_SECONDS_RESET","REST_SECONDS_DECREMENT","REST_SECONDS_RESET","POMODORO_MINUTES_INCREMENT","POMODORO_MINUTES_DECREMENT","REST_MINUTES_INCREMENT","REST_MINUTES_DECREMENT","SET_REST_ZERO","SAVED_POMODORO_MINUTES_INCREMENT","SAVED_POMODORO_MINUTES_DECREMENT","SAVED_REST_MINUTES_INCREMENT","SAVED_REST_MINUTES_DECREMENT","REST_SECONDS_SET","POMODORO_SECONDS_SET","getMyPomodoros","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","response","message","createMyPomodoro","pomodoro","post","updateMyPomodoro","put","_id","decreasePomodoro","resetPomodoro","restSecondsSet","getPomodoroInfo","pomodoros","restSeconds","decreaseRest","resetRest","setZeroRest","increasePomodoroMinutes","decreasePomodoroMinutes","increaseRestMinutes","decreaseRestMinutes","increaseSavedRestMinutes","decreaseSavedRestMinutes","increaseSavedPomodoroMinutes","decreaseSavedPomodoroMinutes"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {\r\n  POMODORO_GET_REQUEST,\r\n  POMODORO_GET_SUCCESS,\r\n  POMODORO_GET_FAIL,\r\n  POMODORO_CREATE_REQUEST,\r\n  POMODORO_CREATE_SUCCESS,\r\n  POMODORO_CREATE_FAIL,\r\n  POMODORO_UPDATE_REQUEST,\r\n  POMODORO_UPDATE_SUCCESS,\r\n  POMODORO_UPDATE_FAIL,\r\n  POMODORO_CREATE_RESET,\r\n  POMODORO_SECONDS_UPDATE,\r\n  REST_SECONDS_UPDATE,\r\n  POMODORO_SECONDS_DECREMENT,\r\n  POMODORO_SECONDS_RESET,\r\n  REST_SECONDS_DECREMENT,\r\n  REST_SECONDS_RESET,\r\n  POMODORO_MINUTES_INCREMENT,\r\n  POMODORO_MINUTES_DECREMENT,\r\n  REST_MINUTES_INCREMENT,\r\n  REST_MINUTES_DECREMENT,\r\n  SET_REST_ZERO,\r\n  SAVED_POMODORO_MINUTES_INCREMENT,\r\n  SAVED_POMODORO_MINUTES_DECREMENT,\r\n  SAVED_REST_MINUTES_INCREMENT,\r\n  SAVED_REST_MINUTES_DECREMENT,\r\n  REST_SECONDS_SET,\r\n  POMODORO_SECONDS_SET,\r\n} from '../constants/pomodoroConstants'\r\n\r\nexport const getMyPomodoros = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_GET_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/pomodoros/mypomodoros`, config)\r\n\r\n    dispatch({\r\n      type: POMODORO_GET_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_GET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createMyPomodoro = (pomodoro) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/pomodoros`, pomodoro, config)\r\n\r\n    dispatch({\r\n      type: POMODORO_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n// action to update the pomodoro the user created by id\r\nexport const updateMyPomodoro = (pomodoro) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/pomodoros/${pomodoro._id}`,\r\n      pomodoro,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: POMODORO_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const decreasePomodoro = () => {\r\n  return {\r\n    type: POMODORO_SECONDS_DECREMENT,\r\n  }\r\n}\r\nexport const resetPomodoro = () => {\r\n  return {\r\n    type: POMODORO_SECONDS_RESET,\r\n  }\r\n}\r\n// 2 actions to set the timer to my object I've gotten from the server\r\n\r\n// export const pomodoroSecondsSet = (data) => (dispatch) => {\r\n//   dispatch({\r\n//     type: POMODORO_SECONDS_SET,\r\n//     payload: data,\r\n//   })\r\n// localStorage.setItem('pomodoroSeconds', JSON.stringify(data))\r\n// }\r\n\r\nexport const restSecondsSet = (data) => async (dispatch, getState) => {\r\n  const {\r\n    getPomodoroInfo: { pomodoros },\r\n  } = getState()\r\n  const { data } = pomodoros[0].restSeconds\r\n  dispatch({\r\n    type: REST_SECONDS_SET,\r\n    payload: data,\r\n  })\r\n}\r\n// export const pomodoroSecondsSet = () => {\r\n//   return {\r\n//     type: POMODORO_SECONDS_SET,\r\n//   }\r\n// }\r\n// export const restSecondsSet = () => {\r\n//   return {\r\n//     type: REST_SECONDS_SET,\r\n//   }\r\n// }\r\n\r\nexport const decreaseRest = () => {\r\n  return {\r\n    type: REST_SECONDS_DECREMENT,\r\n  }\r\n}\r\nexport const resetRest = () => {\r\n  return {\r\n    type: REST_SECONDS_RESET,\r\n  }\r\n}\r\nexport const setZeroRest = () => {\r\n  return {\r\n    type: SET_REST_ZERO,\r\n  }\r\n}\r\n\r\n// pomodoro duration that is displayed in the timer + 1 min\r\n\r\nexport const increasePomodoroMinutes = () => {\r\n  return {\r\n    type: POMODORO_MINUTES_INCREMENT,\r\n  }\r\n}\r\n// pomodoro duration that is displayed in the timer - 1 min\r\n\r\nexport const decreasePomodoroMinutes = () => {\r\n  return {\r\n    type: POMODORO_MINUTES_DECREMENT,\r\n  }\r\n}\r\n\r\n// rest duration that is displayed in the timer + 1 min\r\n\r\nexport const increaseRestMinutes = () => {\r\n  return {\r\n    type: REST_MINUTES_INCREMENT,\r\n  }\r\n}\r\n\r\n// rest duration that is displayed in the timer - 1 min\r\n\r\nexport const decreaseRestMinutes = () => {\r\n  return {\r\n    type: REST_MINUTES_DECREMENT,\r\n  }\r\n}\r\n\r\n// savedRestSeconds + 1 min\r\n\r\nexport const increaseSavedRestMinutes = () => {\r\n  return {\r\n    type: SAVED_REST_MINUTES_INCREMENT,\r\n  }\r\n}\r\n\r\n// savedRestSeconds - 1 min\r\n\r\nexport const decreaseSavedRestMinutes = () => {\r\n  return {\r\n    type: SAVED_REST_MINUTES_DECREMENT,\r\n  }\r\n}\r\n\r\n// savedPomodoroSeconds + 1 min\r\n\r\nexport const increaseSavedPomodoroMinutes = () => {\r\n  return {\r\n    type: SAVED_POMODORO_MINUTES_INCREMENT,\r\n  }\r\n}\r\n// savedPomodoroSeconds - 1 min\r\n\r\nexport const decreaseSavedPomodoroMinutes = () => {\r\n  return {\r\n    type: SAVED_POMODORO_MINUTES_DECREMENT,\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}