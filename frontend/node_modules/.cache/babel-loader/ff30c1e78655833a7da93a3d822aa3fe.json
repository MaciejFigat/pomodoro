{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\48500\\\\Desktop\\\\MERN\\\\pomodoro\\\\frontend\\\\src\\\\screens\\\\CustomPomodoroScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Button, Row, Col, Badge, Card } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { decreasePomodoro, resetPomodoro, decreaseRest, resetRest, increasePomodoroMinutes, decreasePomodoroMinutes, increaseRestMinutes, decreaseRestMinutes, setZeroRest, increaseSavedRestMinutes, decreaseSavedRestMinutes, increaseSavedPomodoroMinutes, decreaseSavedPomodoroMinutes, getMyPomodoros, updateMyPomodoro, createMyPomodoro, pomodoroSecondsSet, restSecondsSet } from '../actions/pomodoroActions'; // import useMountEffect from '@restart/hooks/useMountEffect'\n\nconst CustomPomodoroScreen = () => {\n  const dispatch = useDispatch();\n  const counterPomodoro = useSelector(state => state.counterPomodoro);\n  const {\n    pomodoroSeconds\n  } = counterPomodoro;\n  const counterRest = useSelector(state => state.counterRest);\n  const {\n    restSeconds\n  } = counterRest;\n  const savedPomodoros = useSelector(state => state.getPomodoroInfo);\n  const {\n    pomodoros\n  } = savedPomodoros;\n  const updatedPomodoro = useSelector(state => state.pomodoroUpdate);\n  const {\n    pomodorosUpdated\n  } = updatedPomodoro; // const [pomodoroDuration, setPomodoroDuration] = useState(25)\n\n  const [pomodoroDone, setPomodoroDone] = useState(0); // const [restDuration, setRestDuration] = useState(0)\n  // const [seconds, setSeconds] = useState(25 * 60)\n  // const [restSeconds2, setRestSeconds] = useState(0)\n\n  const [isActive, setIsActive] = useState(false);\n\n  const toggle = () => {\n    setIsActive(!isActive);\n  };\n\n  const reset = () => {\n    if (savedPomodoros.pomodoros) {\n      dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds));\n      dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds));\n    } else {\n      dispatch(resetPomodoro());\n      dispatch(resetRest());\n    }\n  };\n\n  const pomodoroDurationPlus = () => {\n    dispatch(increasePomodoroMinutes());\n  };\n\n  const pomodoroDurationMinus = () => {\n    dispatch(decreasePomodoroMinutes());\n  };\n\n  const restDurationPlus = () => {\n    dispatch(increaseRestMinutes());\n  };\n\n  const restDurationMinus = () => {\n    dispatch(decreaseRestMinutes());\n  };\n\n  const restZero = () => {\n    dispatch(setZeroRest());\n  };\n\n  const savePreferencesHandler = () => {\n    dispatch(updateMyPomodoro({\n      _id: savedPomodoros.pomodoros[0]._id,\n      pomodoroSeconds: pomodoroSeconds,\n      restSeconds: restSeconds\n    }));\n  };\n\n  useEffect(() => {\n    if (!savedPomodoros.pomodoros || savedPomodoros.pomodoros[0].restSeconds !== pomodoroUpdate.pomodoros.restSeconds && savedPomodoros.pomodoros[0].restSeconds !== pomodoroUpdate.pomodoros.restSeconds) {\n      dispatch(getMyPomodoros());\n    }\n\n    if (isActive && restSeconds === 0 && pomodoroSeconds === 0) {\n      setPomodoroDone(pomodoroDone => pomodoroDone + 1);\n\n      if (savedPomodoros.pomodoros) {\n        dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds));\n        dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds));\n      } else {\n        dispatch(resetPomodoro());\n        dispatch(resetRest());\n      }\n    }\n\n    const timer = setInterval(() => {\n      if (isActive && pomodoroSeconds > 0) {\n        dispatch(decreasePomodoro());\n      } else if (isActive && restSeconds > 0 && pomodoroSeconds === 0) {\n        dispatch(decreaseRest());\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [isActive, restSeconds, dispatch, pomodoroSeconds, savedPomodoros.pomodoros]);\n  return /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, ' ', isActive && pomodoroSeconds > 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 50\n    }\n  }, \"Work\") : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 66\n    }\n  }, \"Rest\")), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, pomodoroSeconds === 0 ? /*#__PURE__*/React.createElement(Badge, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"font-weight-bolder\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }, ' ', Math.trunc(restSeconds / 60), \" : \", restSeconds % 60)) : /*#__PURE__*/React.createElement(Badge, {\n    variant: \"danger\",\n    className: \"justify-content-md-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"font-weight-bolder\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, Math.trunc(pomodoroSeconds / 60), \" : \", pomodoroSeconds % 60))), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, isActive ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    onClick: toggle,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, \"Pause\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: toggle,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, \"Start\"), isActive && pomodoroSeconds === 0 && /*#__PURE__*/React.createElement(Button, {\n    onClick: restZero,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, \"Skip rest\"))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, \"Number of Pomodoros done: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 47\n    }\n  }, pomodoroDone), ' '))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  }, \"Rest period: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 34\n    }\n  }, Math.trunc(restSeconds / 60)), \" minutes\")), /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, ' ', /*#__PURE__*/React.createElement(Button, {\n    onClick: restDurationPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: restDurationMinus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, \"-\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }, \"Duration of a pomodoro:\", ' ', /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, Math.trunc(pomodoroSeconds / 60)), \" minutes\")), /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, ' ', /*#__PURE__*/React.createElement(Button, {\n    onClick: pomodoroDurationPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: pomodoroDurationMinus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, \"-\")))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    flush: true,\n    onClick: savePreferencesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, \"Save preferences\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"warning\",\n    flush: true,\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, \"Reset timer\"))))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(decreasePomodoro()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, \"--- testing action decrease pomodoro seconds in store\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(decreaseRest()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, \"--- testing action decrease rest seconds in store\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(resetRest()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, \"--- testing action reset rest\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(resetPomodoro()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, \"--- testing action reset pomodoro\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(increasePomodoroMinutes()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, \"--- testing action + 1 min pomodoroSeconds\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(decreasePomodoroMinutes()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  }, \"--- testing atesting - 1 min pomodoroSeconds\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(increaseRestMinutes()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }, \"--- testing atesting + 1 min restSeconds\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(decreaseRestMinutes()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }, \"--- testing atesting - 1 min restSeconds\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(increaseSavedPomodoroMinutes()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, \"--- testing + 1 saved pom\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(decreaseSavedPomodoroMinutes()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, \"--- testing - 1 min pom saved\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(increaseSavedRestMinutes()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }, \"--- testing + 1 min rest saved\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(decreaseSavedRestMinutes()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }\n  }, \"--- testing - 1 min rest saved\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(getMyPomodoros()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }\n  }, \"--- testing getMyPomodoros Action\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(createMyPomodoro({\n      pomodoroSeconds: 323,\n      restSeconds: 132\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, \"--- testing createMyPomodoro Action\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => console.log(pomodoros[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, \"--- testing POM from the DB\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => console.log(savedPomodoros.pomodoros[0].pomodoroSeconds),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }\n  }, \"--- testing POM from the DB 2\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(updateMyPomodoro({\n      _id: savedPomodoros.pomodoros[0]._id,\n      pomodoroSeconds: pomodoroSeconds,\n      restSeconds: restSeconds\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }\n  }, \"--- testing updateMyPomodoro Action\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => console.log(savedPomodoros.pomodoros[0]._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, \"--- testing pomodoros\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }\n  }, \"--- testing pomodoroSecondsSet\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }\n  }, \"--- testing restSecondsSet\"));\n};\n\nexport default CustomPomodoroScreen;","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/frontend/src/screens/CustomPomodoroScreen.js"],"names":["React","useState","useEffect","Container","Button","Row","Col","Badge","Card","FormContainer","useDispatch","useSelector","decreasePomodoro","resetPomodoro","decreaseRest","resetRest","increasePomodoroMinutes","decreasePomodoroMinutes","increaseRestMinutes","decreaseRestMinutes","setZeroRest","increaseSavedRestMinutes","decreaseSavedRestMinutes","increaseSavedPomodoroMinutes","decreaseSavedPomodoroMinutes","getMyPomodoros","updateMyPomodoro","createMyPomodoro","pomodoroSecondsSet","restSecondsSet","CustomPomodoroScreen","dispatch","counterPomodoro","state","pomodoroSeconds","counterRest","restSeconds","savedPomodoros","getPomodoroInfo","pomodoros","updatedPomodoro","pomodoroUpdate","pomodorosUpdated","pomodoroDone","setPomodoroDone","isActive","setIsActive","toggle","reset","pomodoroDurationPlus","pomodoroDurationMinus","restDurationPlus","restDurationMinus","restZero","savePreferencesHandler","_id","timer","setInterval","clearInterval","Math","trunc","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Container, Button, Row, Col, Badge, Card } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  decreasePomodoro,\r\n  resetPomodoro,\r\n  decreaseRest,\r\n  resetRest,\r\n  increasePomodoroMinutes,\r\n  decreasePomodoroMinutes,\r\n  increaseRestMinutes,\r\n  decreaseRestMinutes,\r\n  setZeroRest,\r\n  increaseSavedRestMinutes,\r\n  decreaseSavedRestMinutes,\r\n  increaseSavedPomodoroMinutes,\r\n  decreaseSavedPomodoroMinutes,\r\n  getMyPomodoros,\r\n  updateMyPomodoro,\r\n  createMyPomodoro,\r\n  pomodoroSecondsSet,\r\n  restSecondsSet,\r\n} from '../actions/pomodoroActions'\r\n// import useMountEffect from '@restart/hooks/useMountEffect'\r\n\r\nconst CustomPomodoroScreen = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const counterPomodoro = useSelector((state) => state.counterPomodoro)\r\n  const { pomodoroSeconds } = counterPomodoro\r\n\r\n  const counterRest = useSelector((state) => state.counterRest)\r\n  const { restSeconds } = counterRest\r\n\r\n  const savedPomodoros = useSelector((state) => state.getPomodoroInfo)\r\n  const { pomodoros } = savedPomodoros\r\n\r\n  const updatedPomodoro = useSelector((state) => state.pomodoroUpdate)\r\n  const { pomodorosUpdated } = updatedPomodoro\r\n\r\n  // const [pomodoroDuration, setPomodoroDuration] = useState(25)\r\n  const [pomodoroDone, setPomodoroDone] = useState(0)\r\n  // const [restDuration, setRestDuration] = useState(0)\r\n  // const [seconds, setSeconds] = useState(25 * 60)\r\n  // const [restSeconds2, setRestSeconds] = useState(0)\r\n  const [isActive, setIsActive] = useState(false)\r\n\r\n  const toggle = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n\r\n  const reset = () => {\r\n    if (savedPomodoros.pomodoros) {\r\n      dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds))\r\n      dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds))\r\n    } else {\r\n      dispatch(resetPomodoro())\r\n      dispatch(resetRest())\r\n    }\r\n  }\r\n\r\n  const pomodoroDurationPlus = () => {\r\n    dispatch(increasePomodoroMinutes())\r\n  }\r\n\r\n  const pomodoroDurationMinus = () => {\r\n    dispatch(decreasePomodoroMinutes())\r\n  }\r\n\r\n  const restDurationPlus = () => {\r\n    dispatch(increaseRestMinutes())\r\n  }\r\n\r\n  const restDurationMinus = () => {\r\n    dispatch(decreaseRestMinutes())\r\n  }\r\n\r\n  const restZero = () => {\r\n    dispatch(setZeroRest())\r\n  }\r\n\r\n  const savePreferencesHandler = () => {\r\n    dispatch(\r\n      updateMyPomodoro({\r\n        _id: savedPomodoros.pomodoros[0]._id,\r\n        pomodoroSeconds: pomodoroSeconds,\r\n        restSeconds: restSeconds,\r\n      })\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !savedPomodoros.pomodoros ||\r\n      (savedPomodoros.pomodoros[0].restSeconds !==\r\n        pomodoroUpdate.pomodoros.restSeconds &&\r\n        savedPomodoros.pomodoros[0].restSeconds !==\r\n          pomodoroUpdate.pomodoros.restSeconds)\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n\r\n    if (isActive && restSeconds === 0 && pomodoroSeconds === 0) {\r\n      setPomodoroDone((pomodoroDone) => pomodoroDone + 1)\r\n      if (savedPomodoros.pomodoros) {\r\n        dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds))\r\n        dispatch(\r\n          pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds)\r\n        )\r\n      } else {\r\n        dispatch(resetPomodoro())\r\n        dispatch(resetRest())\r\n      }\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      if (isActive && pomodoroSeconds > 0) {\r\n        dispatch(decreasePomodoro())\r\n      } else if (isActive && restSeconds > 0 && pomodoroSeconds === 0) {\r\n        dispatch(decreaseRest())\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timer)\r\n  }, [\r\n    isActive,\r\n    restSeconds,\r\n    dispatch,\r\n    pomodoroSeconds,\r\n    savedPomodoros.pomodoros,\r\n  ])\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Row className='justify-content-lg-center'>\r\n        <Col xs={12} md={8}>\r\n          <Card className='p-3'>\r\n            <Row className='justify-content-lg-center'>\r\n              {' '}\r\n              {isActive && pomodoroSeconds > 0 ? <h1>Work</h1> : <h1>Rest</h1>}\r\n            </Row>\r\n            <Row className='justify-content-lg-center'>\r\n              {pomodoroSeconds === 0 ? (\r\n                <Badge variant='success'>\r\n                  <h2 font-weight-bolder>\r\n                    {' '}\r\n                    {Math.trunc(restSeconds / 60)} : {restSeconds % 60}\r\n                  </h2>\r\n                </Badge>\r\n              ) : (\r\n                <Badge variant='danger' className='justify-content-md-center'>\r\n                  <h2 font-weight-bolder>\r\n                    {Math.trunc(pomodoroSeconds / 60)} : {pomodoroSeconds % 60}\r\n                  </h2>\r\n                </Badge>\r\n              )}\r\n            </Row>\r\n            <Row className='justify-content-lg-center'>\r\n              {isActive ? (\r\n                <Button variant='info' onClick={toggle} size='lg'>\r\n                  Pause\r\n                </Button>\r\n              ) : (\r\n                <Button variant='success' onClick={toggle} size='lg'>\r\n                  Start\r\n                </Button>\r\n              )}\r\n              {isActive && pomodoroSeconds === 0 && (\r\n                <Button onClick={restZero}>Skip rest</Button>\r\n              )}\r\n            </Row>\r\n          </Card>\r\n          <Col>\r\n            <Card className='p-3'>\r\n              <Row>\r\n                <Col>\r\n                  <h3>\r\n                    Number of Pomodoros done: <b>{pomodoroDone}</b>{' '}\r\n                  </h3>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={8}>\r\n                  <h3>\r\n                    Rest period: <b>{Math.trunc(restSeconds / 60)}</b> minutes\r\n                  </h3>\r\n                </Col>\r\n                <Col sm={4}>\r\n                  {' '}\r\n                  <Button onClick={restDurationPlus}>\r\n                    <b>+</b>\r\n                  </Button>\r\n                  <Button onClick={restDurationMinus}>\r\n                    <b>-</b>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={8}>\r\n                  <h3>\r\n                    Duration of a pomodoro:{' '}\r\n                    <b>{Math.trunc(pomodoroSeconds / 60)}</b> minutes\r\n                  </h3>\r\n                </Col>\r\n                <Col sm={4}>\r\n                  {' '}\r\n                  <Button onClick={pomodoroDurationPlus}>\r\n                    <b>+</b>\r\n                  </Button>\r\n                  <Button onClick={pomodoroDurationMinus}>\r\n                    <b>-</b>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Button variant='info' flush onClick={savePreferencesHandler}>\r\n                Save preferences\r\n              </Button>\r\n              <Button variant='warning' flush onClick={reset}>\r\n                Reset timer\r\n              </Button>\r\n            </Card>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n      <button onClick={() => dispatch(decreasePomodoro())}>\r\n        --- testing action decrease pomodoro seconds in store\r\n      </button>\r\n      <button onClick={() => dispatch(decreaseRest())}>\r\n        --- testing action decrease rest seconds in store\r\n      </button>\r\n      <button onClick={() => dispatch(resetRest())}>\r\n        --- testing action reset rest\r\n      </button>\r\n      <button onClick={() => dispatch(resetPomodoro())}>\r\n        --- testing action reset pomodoro\r\n      </button>\r\n      <button onClick={() => dispatch(increasePomodoroMinutes())}>\r\n        --- testing action + 1 min pomodoroSeconds\r\n      </button>\r\n      <button onClick={() => dispatch(decreasePomodoroMinutes())}>\r\n        --- testing atesting - 1 min pomodoroSeconds\r\n      </button>\r\n      <button onClick={() => dispatch(increaseRestMinutes())}>\r\n        --- testing atesting + 1 min restSeconds\r\n      </button>\r\n      <button onClick={() => dispatch(decreaseRestMinutes())}>\r\n        --- testing atesting - 1 min restSeconds\r\n      </button>\r\n      <button onClick={() => dispatch(increaseSavedPomodoroMinutes())}>\r\n        --- testing + 1 saved pom\r\n      </button>\r\n      <button onClick={() => dispatch(decreaseSavedPomodoroMinutes())}>\r\n        --- testing - 1 min pom saved\r\n      </button>\r\n      <button onClick={() => dispatch(increaseSavedRestMinutes())}>\r\n        --- testing + 1 min rest saved\r\n      </button>\r\n      <button onClick={() => dispatch(decreaseSavedRestMinutes())}>\r\n        --- testing - 1 min rest saved\r\n      </button>\r\n      <button onClick={() => dispatch(getMyPomodoros())}>\r\n        --- testing getMyPomodoros Action\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          dispatch(\r\n            createMyPomodoro({\r\n              pomodoroSeconds: 323,\r\n              restSeconds: 132,\r\n            })\r\n          )\r\n        }\r\n      >\r\n        --- testing createMyPomodoro Action\r\n      </button>\r\n      <button onClick={() => console.log(pomodoros[0])}>\r\n        --- testing POM from the DB\r\n      </button>\r\n      <button\r\n        onClick={() => console.log(savedPomodoros.pomodoros[0].pomodoroSeconds)}\r\n      >\r\n        --- testing POM from the DB 2\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          dispatch(\r\n            updateMyPomodoro({\r\n              _id: savedPomodoros.pomodoros[0]._id,\r\n              pomodoroSeconds: pomodoroSeconds,\r\n              restSeconds: restSeconds,\r\n            })\r\n          )\r\n        }\r\n      >\r\n        --- testing updateMyPomodoro Action\r\n      </button>\r\n      <button onClick={() => console.log(savedPomodoros.pomodoros[0]._id)}>\r\n        --- testing pomodoros\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          dispatch(\r\n            pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds)\r\n          )\r\n        }\r\n      >\r\n        --- testing pomodoroSecondsSet\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds))\r\n        }\r\n      >\r\n        --- testing restSecondsSet\r\n      </button>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default CustomPomodoroScreen\r\n"]},"metadata":{},"sourceType":"module"}