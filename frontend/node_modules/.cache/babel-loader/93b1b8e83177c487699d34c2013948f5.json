{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\48500\\\\Desktop\\\\MERN\\\\pomodoro\\\\frontend\\\\src\\\\screens\\\\CustomPomodoroScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Button, Row, Col, Badge, Card } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { decreasePomodoro, resetPomodoro, decreaseRest, resetRest, increasePomodoroMinutes, decreasePomodoroMinutes, increaseRestMinutes, decreaseRestMinutes, setZeroRest, increaseSavedRestMinutes, decreaseSavedRestMinutes, increaseSavedPomodoroMinutes, decreaseSavedPomodoroMinutes } from '../actions/pomodoroActions';\n\nconst CustomPomodoroScreen = () => {\n  const dispatch = useDispatch();\n  const counterPomodoro = useSelector(state => state.counterPomodoro);\n  const {\n    pomodoroSeconds\n  } = counterPomodoro;\n  const counterRest = useSelector(state => state.counterRest);\n  const {\n    restSeconds\n  } = counterRest;\n  const [pomodoroDuration, setPomodoroDuration] = useState(25);\n  const [pomodoroDone, setPomodoroDone] = useState(0);\n  const [restDuration, setRestDuration] = useState(0);\n  const [seconds, setSeconds] = useState(25 * 60);\n  const [restSeconds2, setRestSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false); // I changed name for local state restSeconds2 - to avoid conflict with global state - temporary change\n\n  const toggle = () => {\n    setIsActive(!isActive);\n  };\n\n  const reset = () => {\n    dispatch(resetPomodoro());\n    dispatch(resetRest());\n  };\n\n  const pomodoroDurationPlus = () => {\n    dispatch(increasePomodoroMinutes());\n  };\n\n  const pomodoroDurationMinus = () => {\n    dispatch(decreasePomodoroMinutes());\n  };\n\n  const restDurationPlus = () => {\n    dispatch(increaseRestMinutes());\n  };\n\n  const restDurationMinus = () => {\n    dispatch(decreaseRestMinutes());\n  };\n\n  const restZero = () => {\n    dispatch(setZeroRest());\n  };\n\n  useEffect(() => {\n    if (isActive && restSeconds === 0 && pomodoroSeconds === 0) {\n      setPomodoroDone(pomodoroDone => pomodoroDone + 1);\n      dispatch(resetRest());\n      dispatch(resetPomodoro());\n    }\n\n    const timer = setInterval(() => {\n      if (isActive && pomodoroSeconds > 0) {\n        dispatch(decreasePomodoro());\n      } else if (isActive && restSeconds > 0 && pomodoroSeconds === 0) {\n        dispatch(decreaseRest());\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [isActive, restSeconds, dispatch, pomodoroSeconds]);\n  return /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, ' ', isActive && pomodoroSeconds > 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 50\n    }\n  }, \"Work\") : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 66\n    }\n  }, \"Rest\")), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, pomodoroSeconds === 0 ? /*#__PURE__*/React.createElement(Badge, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"font-weight-bolder\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, ' ', Math.trunc(restSeconds / 60), \" : \", restSeconds % 60)) : /*#__PURE__*/React.createElement(Badge, {\n    variant: \"danger\",\n    className: \"justify-content-md-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"font-weight-bolder\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, Math.trunc(pomodoroSeconds / 60), \" : \", pomodoroSeconds % 60))), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, isActive ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    onClick: toggle,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Pause\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: toggle,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \"Start\"), isActive && pomodoroSeconds === 0 && /*#__PURE__*/React.createElement(Button, {\n    onClick: restZero,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Skip rest\"))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, \"Number of Pomodoros done: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 47\n    }\n  }, pomodoroDone), ' '))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }, \"Rest period: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 34\n    }\n  }, Math.trunc(restSeconds / 60)), \" minutes\")), /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, ' ', /*#__PURE__*/React.createElement(Button, {\n    onClick: restDurationPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: restDurationMinus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"-\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, \"Duration of a pomodoro:\", ' ', /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, Math.trunc(pomodoroSeconds / 60)), \" minutes\")), /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, ' ', /*#__PURE__*/React.createElement(Button, {\n    onClick: pomodoroDurationPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: pomodoroDurationMinus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, \"-\")))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    flush: true,\n    onClick: savePreferencesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \"Save preferences\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"warning\",\n    flush: true,\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, \"Reset timer\"))))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSeconds(seconds - 10),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, \"---testing work\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setRestSeconds(restSeconds - 10),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, \"--- testing rest\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(decreasePomodoro()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, \"--- testing action decrease pomodoro seconds in store\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(decreaseRest()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, \"--- testing action decrease rest seconds in store\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(resetRest()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, \"--- testing action reset rest\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(resetPomodoro()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, \"--- testing action reset pomodoro\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(increasePomodoroMinutes()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, \"--- testing action + 1 min pomodoroSeconds\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(decreasePomodoroMinutes()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, \"--- testing atesting - 1 min pomodoroSeconds\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(increaseRestMinutes()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, \"--- testing atesting + 1 min restSeconds\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(decreaseRestMinutes()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, \"--- testing atesting - 1 min restSeconds\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(increaseSavedPomodoroMinutes()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, \"--- testing + 1 saved pom\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(decreaseSavedPomodoroMinutes()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, \"--- testing - 1 min pom saved\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(increaseSavedRestMinutes()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, \"--- testing + 1 min rest saved\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(decreaseSavedRestMinutes()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, \"--- testing - 1 min rest saved\"));\n};\n\nexport default CustomPomodoroScreen;","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/frontend/src/screens/CustomPomodoroScreen.js"],"names":["React","useState","useEffect","Container","Button","Row","Col","Badge","Card","FormContainer","useDispatch","useSelector","decreasePomodoro","resetPomodoro","decreaseRest","resetRest","increasePomodoroMinutes","decreasePomodoroMinutes","increaseRestMinutes","decreaseRestMinutes","setZeroRest","increaseSavedRestMinutes","decreaseSavedRestMinutes","increaseSavedPomodoroMinutes","decreaseSavedPomodoroMinutes","CustomPomodoroScreen","dispatch","counterPomodoro","state","pomodoroSeconds","counterRest","restSeconds","pomodoroDuration","setPomodoroDuration","pomodoroDone","setPomodoroDone","restDuration","setRestDuration","seconds","setSeconds","restSeconds2","setRestSeconds","isActive","setIsActive","toggle","reset","pomodoroDurationPlus","pomodoroDurationMinus","restDurationPlus","restDurationMinus","restZero","timer","setInterval","clearInterval","Math","trunc","savePreferencesHandler"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Container, Button, Row, Col, Badge, Card } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  decreasePomodoro,\r\n  resetPomodoro,\r\n  decreaseRest,\r\n  resetRest,\r\n  increasePomodoroMinutes,\r\n  decreasePomodoroMinutes,\r\n  increaseRestMinutes,\r\n  decreaseRestMinutes,\r\n  setZeroRest,\r\n  increaseSavedRestMinutes,\r\n  decreaseSavedRestMinutes,\r\n  increaseSavedPomodoroMinutes,\r\n  decreaseSavedPomodoroMinutes,\r\n} from '../actions/pomodoroActions'\r\n\r\nconst CustomPomodoroScreen = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const counterPomodoro = useSelector((state) => state.counterPomodoro)\r\n  const { pomodoroSeconds } = counterPomodoro\r\n\r\n  const counterRest = useSelector((state) => state.counterRest)\r\n  const { restSeconds } = counterRest\r\n\r\n  const [pomodoroDuration, setPomodoroDuration] = useState(25)\r\n  const [pomodoroDone, setPomodoroDone] = useState(0)\r\n  const [restDuration, setRestDuration] = useState(0)\r\n  const [seconds, setSeconds] = useState(25 * 60)\r\n  const [restSeconds2, setRestSeconds] = useState(0)\r\n  const [isActive, setIsActive] = useState(false)\r\n  // I changed name for local state restSeconds2 - to avoid conflict with global state - temporary change\r\n\r\n  const toggle = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n\r\n  const reset = () => {\r\n    dispatch(resetPomodoro())\r\n    dispatch(resetRest())\r\n  }\r\n\r\n  const pomodoroDurationPlus = () => {\r\n    dispatch(increasePomodoroMinutes())\r\n  }\r\n\r\n  const pomodoroDurationMinus = () => {\r\n    dispatch(decreasePomodoroMinutes())\r\n  }\r\n\r\n  const restDurationPlus = () => {\r\n    dispatch(increaseRestMinutes())\r\n  }\r\n\r\n  const restDurationMinus = () => {\r\n    dispatch(decreaseRestMinutes())\r\n  }\r\n\r\n  const restZero = () => {\r\n    dispatch(setZeroRest())\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isActive && restSeconds === 0 && pomodoroSeconds === 0) {\r\n      setPomodoroDone((pomodoroDone) => pomodoroDone + 1)\r\n      dispatch(resetRest())\r\n      dispatch(resetPomodoro())\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      if (isActive && pomodoroSeconds > 0) {\r\n        dispatch(decreasePomodoro())\r\n      } else if (isActive && restSeconds > 0 && pomodoroSeconds === 0) {\r\n        dispatch(decreaseRest())\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timer)\r\n  }, [isActive, restSeconds, dispatch, pomodoroSeconds])\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Row className='justify-content-lg-center'>\r\n        <Col xs={12} md={8}>\r\n          <Card className='p-3'>\r\n            <Row className='justify-content-lg-center'>\r\n              {' '}\r\n              {isActive && pomodoroSeconds > 0 ? <h1>Work</h1> : <h1>Rest</h1>}\r\n            </Row>\r\n            <Row className='justify-content-lg-center'>\r\n              {pomodoroSeconds === 0 ? (\r\n                <Badge variant='success'>\r\n                  <h2 font-weight-bolder>\r\n                    {' '}\r\n                    {Math.trunc(restSeconds / 60)} : {restSeconds % 60}\r\n                  </h2>\r\n                </Badge>\r\n              ) : (\r\n                <Badge variant='danger' className='justify-content-md-center'>\r\n                  <h2 font-weight-bolder>\r\n                    {Math.trunc(pomodoroSeconds / 60)} : {pomodoroSeconds % 60}\r\n                  </h2>\r\n                </Badge>\r\n              )}\r\n            </Row>\r\n            <Row className='justify-content-lg-center'>\r\n              {isActive ? (\r\n                <Button variant='info' onClick={toggle} size='lg'>\r\n                  Pause\r\n                </Button>\r\n              ) : (\r\n                <Button variant='success' onClick={toggle} size='lg'>\r\n                  Start\r\n                </Button>\r\n              )}\r\n              {isActive && pomodoroSeconds === 0 && (\r\n                <Button onClick={restZero}>Skip rest</Button>\r\n              )}\r\n            </Row>\r\n          </Card>\r\n          <Col>\r\n            <Card className='p-3'>\r\n              <Row>\r\n                <Col>\r\n                  <h3>\r\n                    Number of Pomodoros done: <b>{pomodoroDone}</b>{' '}\r\n                  </h3>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={8}>\r\n                  <h3>\r\n                    Rest period: <b>{Math.trunc(restSeconds / 60)}</b> minutes\r\n                  </h3>\r\n                </Col>\r\n                <Col sm={4}>\r\n                  {' '}\r\n                  <Button onClick={restDurationPlus}>\r\n                    <b>+</b>\r\n                  </Button>\r\n                  <Button onClick={restDurationMinus}>\r\n                    <b>-</b>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={8}>\r\n                  <h3>\r\n                    Duration of a pomodoro:{' '}\r\n                    <b>{Math.trunc(pomodoroSeconds / 60)}</b> minutes\r\n                  </h3>\r\n                </Col>\r\n                <Col sm={4}>\r\n                  {' '}\r\n                  <Button onClick={pomodoroDurationPlus}>\r\n                    <b>+</b>\r\n                  </Button>\r\n                  <Button onClick={pomodoroDurationMinus}>\r\n                    <b>-</b>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Button variant='info' flush onClick={savePreferencesHandler}>\r\n                Save preferences\r\n              </Button>\r\n              <Button variant='warning' flush onClick={reset}>\r\n                Reset timer\r\n              </Button>\r\n            </Card>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n      <button onClick={() => setSeconds(seconds - 10)}>---testing work</button>\r\n      <button onClick={() => setRestSeconds(restSeconds - 10)}>\r\n        --- testing rest\r\n      </button>\r\n      <button onClick={() => dispatch(decreasePomodoro())}>\r\n        --- testing action decrease pomodoro seconds in store\r\n      </button>\r\n      <button onClick={() => dispatch(decreaseRest())}>\r\n        --- testing action decrease rest seconds in store\r\n      </button>\r\n      <button onClick={() => dispatch(resetRest())}>\r\n        --- testing action reset rest\r\n      </button>\r\n      <button onClick={() => dispatch(resetPomodoro())}>\r\n        --- testing action reset pomodoro\r\n      </button>\r\n      <button onClick={() => dispatch(increasePomodoroMinutes())}>\r\n        --- testing action + 1 min pomodoroSeconds\r\n      </button>\r\n      <button onClick={() => dispatch(decreasePomodoroMinutes())}>\r\n        --- testing atesting - 1 min pomodoroSeconds\r\n      </button>\r\n      <button onClick={() => dispatch(increaseRestMinutes())}>\r\n        --- testing atesting + 1 min restSeconds\r\n      </button>\r\n      <button onClick={() => dispatch(decreaseRestMinutes())}>\r\n        --- testing atesting - 1 min restSeconds\r\n      </button>\r\n\r\n      <button onClick={() => dispatch(increaseSavedPomodoroMinutes())}>\r\n        --- testing + 1 saved pom\r\n      </button>\r\n      <button onClick={() => dispatch(decreaseSavedPomodoroMinutes())}>\r\n        --- testing - 1 min pom saved\r\n      </button>\r\n      <button onClick={() => dispatch(increaseSavedRestMinutes())}>\r\n        --- testing + 1 min rest saved\r\n      </button>\r\n      <button onClick={() => dispatch(decreaseSavedRestMinutes())}>\r\n        --- testing - 1 min rest saved\r\n      </button>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default CustomPomodoroScreen\r\n"]},"metadata":{},"sourceType":"module"}