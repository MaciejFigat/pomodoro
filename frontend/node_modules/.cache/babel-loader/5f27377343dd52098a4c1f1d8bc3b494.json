{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers';\nimport { getPomodorosReducer, pomodoroCreateReducer } from './reducers/pomodoroReducers';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  getPomodoros: getPomodorosReducer,\n  pomodoroCreate: pomodoroCreateReducer\n}); // const userInfoFromStorage = localStorage.getItem('userInfo')\n//   ? JSON.parse(localStorage.getItem('userInfo'))\n//   : null\n\nconst initialState = {// userLogin: { userInfo: userInfoFromStorage },\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","getPomodorosReducer","pomodoroCreateReducer","reducer","userLogin","userRegister","getPomodoros","pomodoroCreate","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,yBAAtD;AACA,SACEC,mBADF,EAEEC,qBAFF,QAGO,6BAHP;AAIA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC9BS,EAAAA,SAAS,EAAEL,gBADmB;AAE9BM,EAAAA,YAAY,EAAEL,mBAFgB;AAG9BM,EAAAA,YAAY,EAAEL,mBAHgB;AAI9BM,EAAAA,cAAc,EAAEL;AAJc,CAAD,CAA/B,C,CAOA;AACA;AACA;;AAEA,MAAMM,YAAY,GAAG,CACnB;AADmB,CAArB;AAGA,MAAMC,UAAU,GAAG,CAACZ,KAAD,CAAnB;AAEA,MAAMa,KAAK,GAAGhB,WAAW,CACvBS,OADuB,EAEvBK,YAFuB,EAGvBV,mBAAmB,CAACF,eAAe,CAAC,GAAGa,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers'\r\nimport {\r\n  getPomodorosReducer,\r\n  pomodoroCreateReducer,\r\n} from './reducers/pomodoroReducers'\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  getPomodoros: getPomodorosReducer,\r\n  pomodoroCreate: pomodoroCreateReducer,\r\n})\r\n\r\n// const userInfoFromStorage = localStorage.getItem('userInfo')\r\n//   ? JSON.parse(localStorage.getItem('userInfo'))\r\n//   : null\r\n\r\nconst initialState = {\r\n  // userLogin: { userInfo: userInfoFromStorage },\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n"]},"metadata":{},"sourceType":"module"}