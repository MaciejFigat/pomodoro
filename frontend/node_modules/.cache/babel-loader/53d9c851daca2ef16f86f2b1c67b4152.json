{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\48500\\\\Desktop\\\\MERN\\\\pomodoro\\\\frontend\\\\src\\\\screens\\\\PomodoroDisplayScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nconst PomodoroDisplayScreen = () => {\n  _s();\n\n  const [seconds, setSeconds] = useState(`${25 * 60}`);\n  const [pomodoroDuration, setPomodoroDuration] = useState(25);\n  const [restDuration, setRestDuration] = useState(5);\n  const [isActive, setIsActive] = useState(false);\n\n  const toggle = () => {\n    setIsActive(!isActive);\n  };\n\n  const reset = () => {\n    setSeconds(`${25 * 60}`);\n    setIsActive(false);\n  };\n\n  const adjustPomodoro = () => {};\n\n  const adjustRest = () => {};\n\n  useEffect(() => {\n    let timer = null;\n\n    if (isActive && seconds > 0) {\n      timer = setInterval(() => {\n        setSeconds(seconds => seconds - 1);\n      }, 1000);\n    } else if (!isActive && seconds === 0) {\n      clearInterval(timer);\n    }\n\n    return () => clearInterval(timer);\n  }, [isActive, seconds]);\n  const style = {\n    display: 'grid',\n    placeItems: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Display timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Number of Pomodoros: 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [Math.trunc(seconds / 60), \" : \", seconds % 60]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rest: \", restDuration, \",\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            ;\n\n            setRestDuration => restDuration - 1;\n          },\n          children: \"Reset timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: adjustRest,\n          children: \"Reset timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggle,\n        children: isActive ? 'Pause' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reset,\n        children: \"Reset timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: adjustPomodoro,\n        children: \"Reset timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: adjustRest,\n        children: \"Reset timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: adjustPomodoro,\n        children: \"Reset timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(PomodoroDisplayScreen, \"opMoJaKHWSOA6asiQvmFWC7n7vI=\");\n\n_c = PomodoroDisplayScreen;\nexport default PomodoroDisplayScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PomodoroDisplayScreen\");","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/frontend/src/screens/PomodoroDisplayScreen.js"],"names":["React","useState","useEffect","PomodoroDisplayScreen","seconds","setSeconds","pomodoroDuration","setPomodoroDuration","restDuration","setRestDuration","isActive","setIsActive","toggle","reset","adjustPomodoro","adjustRest","timer","setInterval","clearInterval","style","display","placeItems","Math","trunc"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst PomodoroDisplayScreen = () => {\r\n  const [seconds, setSeconds] = useState(`${25 * 60}`)\r\n  const [pomodoroDuration, setPomodoroDuration] = useState(25)\r\n  const [restDuration, setRestDuration] = useState(5)\r\n  const [isActive, setIsActive] = useState(false)\r\n\r\n  const toggle = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n\r\n  const reset = () => {\r\n    setSeconds(`${25 * 60}`)\r\n    setIsActive(false)\r\n  }\r\n  const adjustPomodoro = () => {}\r\n  const adjustRest = () => {}\r\n  useEffect(() => {\r\n    let timer = null\r\n    if (isActive && seconds > 0) {\r\n      timer = setInterval(() => {\r\n        setSeconds((seconds) => seconds - 1)\r\n      }, 1000)\r\n    } else if (!isActive && seconds === 0) {\r\n      clearInterval(timer)\r\n    }\r\n    return () => clearInterval(timer)\r\n  }, [isActive, seconds])\r\n\r\n  const style = {\r\n    display: 'grid',\r\n    placeItems: 'center',\r\n  }\r\n  return (\r\n    <>\r\n      <div style={style}>\r\n        <h1>Display timer</h1>\r\n        <p>Number of Pomodoros: 1</p>\r\n        <p>\r\n          {Math.trunc(seconds / 60)} : {seconds % 60}\r\n        </p>\r\n        <p>\r\n          Rest: {restDuration},{' '}\r\n          <button\r\n            onClick={() => {\r\n              ;(setRestDuration) => restDuration - 1\r\n            }}\r\n          >\r\n            Reset timer\r\n          </button>\r\n          <button onClick={adjustRest}>Reset timer</button>\r\n        </p>\r\n\r\n        <button onClick={toggle}>{isActive ? 'Pause' : 'Start'}</button>\r\n        <button onClick={reset}>Reset timer</button>\r\n        <button onClick={adjustPomodoro}>Reset timer</button>\r\n        <button onClick={adjustRest}>Reset timer</button>\r\n        <button onClick={adjustPomodoro}>Reset timer</button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PomodoroDisplayScreen\r\n"]},"metadata":{},"sourceType":"module"}