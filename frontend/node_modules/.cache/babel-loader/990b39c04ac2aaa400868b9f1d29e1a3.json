{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\48500\\\\Desktop\\\\MERN\\\\pomodoro\\\\frontend\\\\src\\\\screens\\\\CustomPomodoroScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Button, Row, Col, Badge, Card, Table } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { decreasePomodoro, resetPomodoro, decreaseRest, resetRest, increasePomodoroMinutes, decreasePomodoroMinutes, increaseRestMinutes, decreaseRestMinutes, setZeroRest, increaseSavedRestMinutes, decreaseSavedRestMinutes, increaseSavedPomodoroMinutes, decreaseSavedPomodoroMinutes, getMyPomodoros, updateMyPomodoro, createMyPomodoro, pomodoroSecondsSet, restSecondsSet } from '../actions/pomodoroActions';\nimport { saveMyDonePomodoro, getMyDonePomodoros } from '../actions/pomodoroDoneActions'; // import useMountEffect from '@restart/hooks/useMountEffect'\n\nconst CustomPomodoroScreen = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const getPomodoroDone = useSelector(state => state.getPomodoroDone);\n  const {\n    pomodorosDone\n  } = getPomodoroDone;\n  const counterPomodoro = useSelector(state => state.counterPomodoro);\n  const {\n    pomodoroSeconds\n  } = counterPomodoro;\n  const counterRest = useSelector(state => state.counterRest);\n  const {\n    restSeconds\n  } = counterRest;\n  const savedPomodoros = useSelector(state => state.getPomodoroInfo);\n  const {\n    pomodoros\n  } = savedPomodoros;\n  const updatedPomodoro = useSelector(state => state.pomodoroUpdate);\n  const createdPomodoro = useSelector(state => state.pomodoroCreate);\n  const [pomodoroDone, setPomodoroDone] = useState(0);\n  const [updatedVisible, setUpdatedVisible] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  const toggle = () => {\n    setIsActive(!isActive);\n  };\n\n  const reset = () => {\n    if (savedPomodoros.pomodoros && userInfo && savedPomodoros.pomodoros.length !== 0) {\n      dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds));\n      dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds));\n    } else {\n      dispatch(resetPomodoro());\n      dispatch(resetRest());\n    }\n\n    console.log(updatedVisible);\n  };\n\n  const pomodoroDurationPlus = () => {\n    dispatch(increasePomodoroMinutes());\n  };\n\n  const pomodoroDurationMinus = () => {\n    dispatch(decreasePomodoroMinutes());\n  };\n\n  const restDurationPlus = () => {\n    dispatch(increaseRestMinutes());\n  };\n\n  const restDurationMinus = () => {\n    dispatch(decreaseRestMinutes());\n  };\n\n  const restZero = () => {\n    dispatch(setZeroRest());\n  };\n\n  const createPomodoroHandler = () => {\n    dispatch(createMyPomodoro({\n      pomodoroSeconds: pomodoroSeconds,\n      restSeconds: restSeconds\n    }));\n  };\n\n  const savePreferencesHandler = () => {\n    dispatch(updateMyPomodoro({\n      name: `${userInfo.name}'s Pomodoro`,\n      _id: savedPomodoros.pomodoros[0]._id,\n      pomodoroSeconds: pomodoroSeconds,\n      restSeconds: restSeconds\n    }));\n\n    if (updatedVisible === true) {\n      setUpdatedVisible(false);\n    }\n  };\n\n  const saveDonePomodoroHandler = () => {\n    if (savedPomodoros.pomodoros && savedPomodoros.pomodoros.length !== 0) {\n      dispatch(saveMyDonePomodoro({\n        pomodoroNumber: 1,\n        secondsDone: savedPomodoros.pomodoros[0].pomodoroSeconds\n      }));\n    }\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n\n    if (userInfo && createdPomodoro.pomodoro && savedPomodoros.pomodoros && savedPomodoros.pomodoros.length === 0) {\n      dispatch(getMyPomodoros());\n    }\n\n    if (!savedPomodoros.pomodoros && isActive === false) {\n      dispatch(getMyPomodoros());\n    }\n\n    if (savedPomodoros.pomodoros && savedPomodoros.pomodoros.length === 0 && updatedPomodoro.pomodoros && userInfo) {\n      dispatch(getMyPomodoros());\n    }\n\n    if (isActive && restSeconds === 0 && pomodoroSeconds === 0) {\n      setPomodoroDone(pomodoroDone => pomodoroDone + 1);\n      dispatch(saveMyDonePomodoro({\n        pomodoroNumber: 1,\n        secondsDone: savedPomodoros.pomodoros[0].pomodoroSeconds\n      }));\n\n      if (savedPomodoros.pomodoros) {\n        dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds));\n        dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds));\n      } else {\n        dispatch(resetPomodoro());\n        dispatch(resetRest());\n      }\n    }\n\n    const timer = setInterval(() => {\n      if (isActive && pomodoroSeconds > 0) {\n        dispatch(decreasePomodoro());\n      } else if (isActive && restSeconds > 0 && pomodoroSeconds === 0) {\n        dispatch(decreaseRest());\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [isActive, restSeconds, dispatch, pomodoroSeconds, savedPomodoros.pomodoros, updatedPomodoro, createdPomodoro, userInfo, history]);\n  return /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, ' ', isActive && pomodoroSeconds > 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 50\n    }\n  }, \"Work\") : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 66\n    }\n  }, \"Rest\")), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, pomodoroSeconds === 0 ? /*#__PURE__*/React.createElement(Badge, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"font-weight-bolder\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 19\n    }\n  }, ' ', Math.trunc(restSeconds / 60), \" : \", restSeconds % 60)) : /*#__PURE__*/React.createElement(Badge, {\n    variant: \"danger\",\n    className: \"justify-content-md-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"font-weight-bolder\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }\n  }, Math.trunc(pomodoroSeconds / 60), \" : \", pomodoroSeconds % 60))), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, isActive ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    onClick: toggle,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, \"Pause\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: toggle,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, \"Start\"), isActive && pomodoroSeconds === 0 && /*#__PURE__*/React.createElement(Button, {\n    onClick: restZero,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, \"Skip rest\"))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 19\n    }\n  }, \"Number of Pomodoros done: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 47\n    }\n  }, pomodoroDone), ' '))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 19\n    }\n  }, \"Rest period: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 34\n    }\n  }, Math.trunc(restSeconds / 60)), \" minutes\")), /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, ' ', /*#__PURE__*/React.createElement(Button, {\n    onClick: restDurationPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: restDurationMinus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }, \"-\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 19\n    }\n  }, \"Duration of a pomodoro:\", ' ', /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 21\n    }\n  }, Math.trunc(pomodoroSeconds / 60)), \" minutes\")), /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }, ' ', /*#__PURE__*/React.createElement(Button, {\n    onClick: pomodoroDurationPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 21\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: pomodoroDurationMinus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 21\n    }\n  }, \"-\")))), userInfo && savedPomodoros.pomodoros && savedPomodoros.pomodoros.length === 0 && !createdPomodoro.pomodoro && /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    flush: true,\n    onClick: createPomodoroHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 19\n    }\n  }, \"Create your own pomodoro\"), userInfo && savedPomodoros.pomodoros && savedPomodoros.pomodoros.length !== 0 && /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    flush: true,\n    onClick: savePreferencesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 19\n    }\n  }, \"Save preferences\"), updatedPomodoro.pomodoros && updatedVisible === false ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    flush: true,\n    onClick: () => dispatch(getMyPomodoros(), setUpdatedVisible(!updatedVisible)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  }, \"Set updated as current\") : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Button, {\n    variant: \"warning\",\n    flush: true,\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 15\n    }\n  }, \"Reset timer\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    flush: true,\n    onClick: saveDonePomodoroHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  }, \"saveMyDonePomodoro test\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"warning\",\n    flush: true,\n    onClick: () => dispatch(getMyDonePomodoros()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 15\n    }\n  }, \"getMyDonePomodoros\"))))));\n};\n\nexport default CustomPomodoroScreen;","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/frontend/src/screens/CustomPomodoroScreen.js"],"names":["React","useState","useEffect","Container","Button","Row","Col","Badge","Card","Table","FormContainer","useDispatch","useSelector","decreasePomodoro","resetPomodoro","decreaseRest","resetRest","increasePomodoroMinutes","decreasePomodoroMinutes","increaseRestMinutes","decreaseRestMinutes","setZeroRest","increaseSavedRestMinutes","decreaseSavedRestMinutes","increaseSavedPomodoroMinutes","decreaseSavedPomodoroMinutes","getMyPomodoros","updateMyPomodoro","createMyPomodoro","pomodoroSecondsSet","restSecondsSet","saveMyDonePomodoro","getMyDonePomodoros","CustomPomodoroScreen","history","dispatch","userLogin","state","userInfo","getPomodoroDone","pomodorosDone","counterPomodoro","pomodoroSeconds","counterRest","restSeconds","savedPomodoros","getPomodoroInfo","pomodoros","updatedPomodoro","pomodoroUpdate","createdPomodoro","pomodoroCreate","pomodoroDone","setPomodoroDone","updatedVisible","setUpdatedVisible","isActive","setIsActive","toggle","reset","length","console","log","pomodoroDurationPlus","pomodoroDurationMinus","restDurationPlus","restDurationMinus","restZero","createPomodoroHandler","savePreferencesHandler","name","_id","saveDonePomodoroHandler","pomodoroNumber","secondsDone","push","pomodoro","timer","setInterval","clearInterval","Math","trunc"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Container,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Badge,\r\n  Card,\r\n  Table,\r\n} from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  decreasePomodoro,\r\n  resetPomodoro,\r\n  decreaseRest,\r\n  resetRest,\r\n  increasePomodoroMinutes,\r\n  decreasePomodoroMinutes,\r\n  increaseRestMinutes,\r\n  decreaseRestMinutes,\r\n  setZeroRest,\r\n  increaseSavedRestMinutes,\r\n  decreaseSavedRestMinutes,\r\n  increaseSavedPomodoroMinutes,\r\n  decreaseSavedPomodoroMinutes,\r\n  getMyPomodoros,\r\n  updateMyPomodoro,\r\n  createMyPomodoro,\r\n  pomodoroSecondsSet,\r\n  restSecondsSet,\r\n} from '../actions/pomodoroActions'\r\nimport {\r\n  saveMyDonePomodoro,\r\n  getMyDonePomodoros,\r\n} from '../actions/pomodoroDoneActions'\r\n// import useMountEffect from '@restart/hooks/useMountEffect'\r\n\r\nconst CustomPomodoroScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const getPomodoroDone = useSelector((state) => state.getPomodoroDone)\r\n  const { pomodorosDone } = getPomodoroDone\r\n\r\n  const counterPomodoro = useSelector((state) => state.counterPomodoro)\r\n  const { pomodoroSeconds } = counterPomodoro\r\n\r\n  const counterRest = useSelector((state) => state.counterRest)\r\n  const { restSeconds } = counterRest\r\n\r\n  const savedPomodoros = useSelector((state) => state.getPomodoroInfo)\r\n  const { pomodoros } = savedPomodoros\r\n\r\n  const updatedPomodoro = useSelector((state) => state.pomodoroUpdate)\r\n  const createdPomodoro = useSelector((state) => state.pomodoroCreate)\r\n\r\n  const [pomodoroDone, setPomodoroDone] = useState(0)\r\n\r\n  const [updatedVisible, setUpdatedVisible] = useState(false)\r\n  const [isActive, setIsActive] = useState(false)\r\n\r\n  const toggle = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n\r\n  const reset = () => {\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      userInfo &&\r\n      savedPomodoros.pomodoros.length !== 0\r\n    ) {\r\n      dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds))\r\n      dispatch(pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds))\r\n    } else {\r\n      dispatch(resetPomodoro())\r\n      dispatch(resetRest())\r\n    }\r\n    console.log(updatedVisible)\r\n  }\r\n\r\n  const pomodoroDurationPlus = () => {\r\n    dispatch(increasePomodoroMinutes())\r\n  }\r\n\r\n  const pomodoroDurationMinus = () => {\r\n    dispatch(decreasePomodoroMinutes())\r\n  }\r\n\r\n  const restDurationPlus = () => {\r\n    dispatch(increaseRestMinutes())\r\n  }\r\n\r\n  const restDurationMinus = () => {\r\n    dispatch(decreaseRestMinutes())\r\n  }\r\n\r\n  const restZero = () => {\r\n    dispatch(setZeroRest())\r\n  }\r\n\r\n  const createPomodoroHandler = () => {\r\n    dispatch(\r\n      createMyPomodoro({\r\n        pomodoroSeconds: pomodoroSeconds,\r\n        restSeconds: restSeconds,\r\n      })\r\n    )\r\n  }\r\n\r\n  const savePreferencesHandler = () => {\r\n    dispatch(\r\n      updateMyPomodoro({\r\n        name: `${userInfo.name}'s Pomodoro`,\r\n        _id: savedPomodoros.pomodoros[0]._id,\r\n        pomodoroSeconds: pomodoroSeconds,\r\n        restSeconds: restSeconds,\r\n      })\r\n    )\r\n    if (updatedVisible === true) {\r\n      setUpdatedVisible(false)\r\n    }\r\n  }\r\n  const saveDonePomodoroHandler = () => {\r\n    if (savedPomodoros.pomodoros && savedPomodoros.pomodoros.length !== 0) {\r\n      dispatch(\r\n        saveMyDonePomodoro({\r\n          pomodoroNumber: 1,\r\n          secondsDone: savedPomodoros.pomodoros[0].pomodoroSeconds,\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (\r\n      userInfo &&\r\n      createdPomodoro.pomodoro &&\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n    if (!savedPomodoros.pomodoros && isActive === false) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n    if (\r\n      savedPomodoros.pomodoros &&\r\n      savedPomodoros.pomodoros.length === 0 &&\r\n      updatedPomodoro.pomodoros &&\r\n      userInfo\r\n    ) {\r\n      dispatch(getMyPomodoros())\r\n    }\r\n\r\n    if (isActive && restSeconds === 0 && pomodoroSeconds === 0) {\r\n      setPomodoroDone((pomodoroDone) => pomodoroDone + 1)\r\n      dispatch(\r\n        saveMyDonePomodoro({\r\n          pomodoroNumber: 1,\r\n          secondsDone: savedPomodoros.pomodoros[0].pomodoroSeconds,\r\n        })\r\n      )\r\n      if (savedPomodoros.pomodoros) {\r\n        dispatch(restSecondsSet(savedPomodoros.pomodoros[0].restSeconds))\r\n        dispatch(\r\n          pomodoroSecondsSet(savedPomodoros.pomodoros[0].pomodoroSeconds)\r\n        )\r\n      } else {\r\n        dispatch(resetPomodoro())\r\n        dispatch(resetRest())\r\n      }\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      if (isActive && pomodoroSeconds > 0) {\r\n        dispatch(decreasePomodoro())\r\n      } else if (isActive && restSeconds > 0 && pomodoroSeconds === 0) {\r\n        dispatch(decreaseRest())\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timer)\r\n  }, [\r\n    isActive,\r\n    restSeconds,\r\n    dispatch,\r\n    pomodoroSeconds,\r\n    savedPomodoros.pomodoros,\r\n    updatedPomodoro,\r\n    createdPomodoro,\r\n    userInfo,\r\n    history,\r\n  ])\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Row className='justify-content-lg-center'>\r\n        <Col xs={12} md={8}>\r\n          <Card className='p-3'>\r\n            <Row className='justify-content-lg-center'>\r\n              {' '}\r\n              {isActive && pomodoroSeconds > 0 ? <h1>Work</h1> : <h1>Rest</h1>}\r\n            </Row>\r\n            <Row className='justify-content-lg-center'>\r\n              {pomodoroSeconds === 0 ? (\r\n                <Badge variant='success'>\r\n                  <h2 font-weight-bolder>\r\n                    {' '}\r\n                    {Math.trunc(restSeconds / 60)} : {restSeconds % 60}\r\n                  </h2>\r\n                </Badge>\r\n              ) : (\r\n                <Badge variant='danger' className='justify-content-md-center'>\r\n                  <h2 font-weight-bolder>\r\n                    {Math.trunc(pomodoroSeconds / 60)} : {pomodoroSeconds % 60}\r\n                  </h2>\r\n                </Badge>\r\n              )}\r\n            </Row>\r\n            <Row className='justify-content-lg-center'>\r\n              {isActive ? (\r\n                <Button variant='info' onClick={toggle} size='lg'>\r\n                  Pause\r\n                </Button>\r\n              ) : (\r\n                <Button variant='success' onClick={toggle} size='lg'>\r\n                  Start\r\n                </Button>\r\n              )}\r\n              {isActive && pomodoroSeconds === 0 && (\r\n                <Button onClick={restZero}>Skip rest</Button>\r\n              )}\r\n            </Row>\r\n          </Card>\r\n          <Col>\r\n            <Card className='p-3'>\r\n              <Row>\r\n                <Col>\r\n                  <h3>\r\n                    Number of Pomodoros done: <b>{pomodoroDone}</b>{' '}\r\n                  </h3>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={8}>\r\n                  <h3>\r\n                    Rest period: <b>{Math.trunc(restSeconds / 60)}</b> minutes\r\n                  </h3>\r\n                </Col>\r\n                <Col sm={4}>\r\n                  {' '}\r\n                  <Button onClick={restDurationPlus}>\r\n                    <b>+</b>\r\n                  </Button>\r\n                  <Button onClick={restDurationMinus}>\r\n                    <b>-</b>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={8}>\r\n                  <h3>\r\n                    Duration of a pomodoro:{' '}\r\n                    <b>{Math.trunc(pomodoroSeconds / 60)}</b> minutes\r\n                  </h3>\r\n                </Col>\r\n                <Col sm={4}>\r\n                  {' '}\r\n                  <Button onClick={pomodoroDurationPlus}>\r\n                    <b>+</b>\r\n                  </Button>\r\n                  <Button onClick={pomodoroDurationMinus}>\r\n                    <b>-</b>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              {userInfo &&\r\n                savedPomodoros.pomodoros &&\r\n                savedPomodoros.pomodoros.length === 0 &&\r\n                !createdPomodoro.pomodoro && (\r\n                  <Button variant='info' flush onClick={createPomodoroHandler}>\r\n                    Create your own pomodoro\r\n                  </Button>\r\n                )}\r\n              {userInfo &&\r\n                savedPomodoros.pomodoros &&\r\n                savedPomodoros.pomodoros.length !== 0 && (\r\n                  <Button variant='info' flush onClick={savePreferencesHandler}>\r\n                    Save preferences\r\n                  </Button>\r\n                )}\r\n              {updatedPomodoro.pomodoros && updatedVisible === false ? (\r\n                <Button\r\n                  variant='success'\r\n                  flush\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getMyPomodoros(),\r\n                      setUpdatedVisible(!updatedVisible)\r\n                    )\r\n                  }\r\n                >\r\n                  Set updated as current\r\n                </Button>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <Button variant='warning' flush onClick={reset}>\r\n                Reset timer\r\n              </Button>\r\n\r\n              <Button variant='danger' flush onClick={saveDonePomodoroHandler}>\r\n                saveMyDonePomodoro test\r\n              </Button>\r\n              <Button\r\n                variant='warning'\r\n                flush\r\n                onClick={() => dispatch(getMyDonePomodoros())}\r\n              >\r\n                getMyDonePomodoros\r\n              </Button>\r\n            </Card>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default CustomPomodoroScreen\r\n"]},"metadata":{},"sourceType":"module"}