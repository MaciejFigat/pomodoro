{"ast":null,"code":"import axios from 'axios';\nimport { POMODORO_GET_REQUEST, POMODORO_GET_SUCCESS, POMODORO_GET_FAIL, POMODORO_CREATE_REQUEST, POMODORO_CREATE_SUCCESS, POMODORO_CREATE_FAIL, POMODORO_CREATE_RESET, POMODORO_SECONDS_UPDATE, REST_SECONDS_UPDATE, POMODORO_SECONDS_DECREMENT, REST_SECONDS_DECREMENT } from '../constants/pomodoroConstants';\nexport const getPomodoro = () => async dispatch => {\n  try {\n    dispatch({\n      type: POMODORO_GET_REQUEST\n    }); // const { data } = await axios.get(`/api/pomodoros`)\n\n    dispatch({\n      type: POMODORO_GET_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POMODORO_GET_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createPomodoro = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POMODORO_CREATE_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(`/api/pomodoros`);\n    dispatch({\n      type: POMODORO_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POMODORO_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const setPomodoroSeconds = data => dispatch => {\n  dispatch({\n    type: POMODORO_SECONDS_UPDATE,\n    payload: data\n  });\n  localStorage.setItem('pomodoroSeconds', JSON.stringify(data));\n};\nexport const decreasePomodoro = () => {\n  return {\n    type: POMODORO_SECONDS_DECREMENT\n  };\n};\nexport const decreaseRest = () => {\n  return {\n    type: REST_SECONDS_DECREMENT\n  };\n};","map":{"version":3,"sources":["C:/Users/48500/Desktop/MERN/pomodoro/frontend/src/actions/pomodoroActions.js"],"names":["axios","POMODORO_GET_REQUEST","POMODORO_GET_SUCCESS","POMODORO_GET_FAIL","POMODORO_CREATE_REQUEST","POMODORO_CREATE_SUCCESS","POMODORO_CREATE_FAIL","POMODORO_CREATE_RESET","POMODORO_SECONDS_UPDATE","REST_SECONDS_UPDATE","POMODORO_SECONDS_DECREMENT","REST_SECONDS_DECREMENT","getPomodoro","dispatch","type","payload","data","error","response","message","createPomodoro","getState","post","setPomodoroSeconds","localStorage","setItem","JSON","stringify","decreasePomodoro","decreaseRest"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,iBAHF,EAIEC,uBAJF,EAKEC,uBALF,EAMEC,oBANF,EAOEC,qBAPF,EAQEC,uBARF,EASEC,mBATF,EAUEC,0BAVF,EAWEC,sBAXF,QAYO,gCAZP;AAcA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEb;AAAR,KAAD,CAAR,CADE,CAGF;;AAEAY,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ,oBADC;AAEPa,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOC,KAAP,EAAc;AACdJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,iBADC;AAEPY,MAAAA,OAAO,EACLE,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeF,IAAf,CAAoBG,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeF,IAAf,CAAoBG,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAnBM;AAqBP,OAAO,MAAMC,cAAc,GAAG,MAAM,OAAOP,QAAP,EAAiBQ,QAAjB,KAA8B;AAChE,MAAI;AACFR,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAIA,UAAM;AAAEY,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACsB,IAAN,CAAY,gBAAZ,CAAvB;AAEAT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,uBADC;AAEPU,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAID,GAXD,CAWE,OAAOC,KAAP,EAAc;AACdJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,oBADC;AAEPS,MAAAA,OAAO,EACLE,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeF,IAAf,CAAoBG,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeF,IAAf,CAAoBG,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CArBM;AAuBP,OAAO,MAAMI,kBAAkB,GAAIP,IAAD,IAAWH,QAAD,IAAc;AACxDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEN,uBADC;AAEPO,IAAAA,OAAO,EAAEC;AAFF,GAAD,CAAR;AAKAQ,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAAxC;AACD,CAPM;AASP,OAAO,MAAMY,gBAAgB,GAAG,MAAM;AACpC,SAAO;AACLd,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMmB,YAAY,GAAG,MAAM;AAChC,SAAO;AACLf,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD,CAJM","sourcesContent":["import axios from 'axios'\r\nimport {\r\n  POMODORO_GET_REQUEST,\r\n  POMODORO_GET_SUCCESS,\r\n  POMODORO_GET_FAIL,\r\n  POMODORO_CREATE_REQUEST,\r\n  POMODORO_CREATE_SUCCESS,\r\n  POMODORO_CREATE_FAIL,\r\n  POMODORO_CREATE_RESET,\r\n  POMODORO_SECONDS_UPDATE,\r\n  REST_SECONDS_UPDATE,\r\n  POMODORO_SECONDS_DECREMENT,\r\n  REST_SECONDS_DECREMENT,\r\n} from '../constants/pomodoroConstants'\r\n\r\nexport const getPomodoro = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: POMODORO_GET_REQUEST })\r\n\r\n    // const { data } = await axios.get(`/api/pomodoros`)\r\n\r\n    dispatch({\r\n      type: POMODORO_GET_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_GET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createPomodoro = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POMODORO_CREATE_REQUEST,\r\n    })\r\n\r\n    const { data } = await axios.post(`/api/pomodoros`)\r\n\r\n    dispatch({\r\n      type: POMODORO_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POMODORO_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const setPomodoroSeconds = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: POMODORO_SECONDS_UPDATE,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('pomodoroSeconds', JSON.stringify(data))\r\n}\r\n\r\nexport const decreasePomodoro = () => {\r\n  return {\r\n    type: POMODORO_SECONDS_DECREMENT,\r\n  }\r\n}\r\nexport const decreaseRest = () => {\r\n  return {\r\n    type: REST_SECONDS_DECREMENT,\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}